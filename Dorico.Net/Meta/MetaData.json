{
  "version": "Pro 5.1.60",
  "commandsCount": 1027,
  "commands": [
    {
      "name": "Application.DeviceSetup",
      "displayName": "Device Setup...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Application.DownloadVSTSoundContent",
      "displayName": null,
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Application.ExportFilenameTokensDialog",
      "displayName": "Export File Names",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Application.Preferences",
      "displayName": "Preferences...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.AddAngledLineToOttavaLine",
      "displayName": "Add Angle to Octave Line",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.AddBarNumberChange",
      "displayName": "Add Bar Number Change",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.AddCornerToOttavaLine",
      "displayName": "Add Corner to Octave Line",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.AddDivisi",
      "displayName": "Change Divisi...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.AddGuitarTechnique",
      "displayName": null,
      "requiredParameters": [
        "ParameterGuitarTechniquesForNoteRun"
      ],
      "optionalParameters": []
    },
    {
      "name": "Edit.AddInstrumentsToPercussionKitInPlayer",
      "displayName": null,
      "requiredParameters": [
        "InstrumentIDArray",
        "InstrumentID",
        "PlayerID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Edit.AddKitComponentInstrumentToKitInPlayer",
      "displayName": null,
      "requiredParameters": [
        "PlayerID",
        "InstrumentID",
        "InstrumentEntityID",
        "VoiceIndex"
      ],
      "optionalParameters": []
    },
    {
      "name": "Edit.AddNotesAboveOrBelowSelection",
      "displayName": "Add Notes Above or Below...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.AddOssiaAbove",
      "displayName": "Create Ossia Above",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.AddOssiaBelow",
      "displayName": "Create Ossia Below",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.AddPedalLineChangeToHalf",
      "displayName": "Add Change to 1/2",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.AddPedalLineChangeToOne",
      "displayName": "Add Change to 1",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.AddPedalLineChangeToQuarter",
      "displayName": "Add Change to 1/4",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.AddPedalLineChangeToThreeQuarters",
      "displayName": "Add Change to 3/4",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.AddPedalLineRetake",
      "displayName": "Add Retake",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.AddSegmentToRepeatEndingLine",
      "displayName": "Add To Repeat Ending",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.AddStaffAbove",
      "displayName": "Add Staff Above",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.AddStaffBelow",
      "displayName": "Add Staff Below",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.AddVibratoBarScoop",
      "displayName": "Create Vibrato Bar Scoop",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.AlignDynamics",
      "displayName": "Align Dynamics",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ApplyCursorPayloadAtPoint",
      "displayName": null,
      "requiredParameters": [
        "LayoutAspectType",
        "LayoutID",
        "X",
        "Y"
      ],
      "optionalParameters": [
        "UseLocalOverride",
        "MasterPageAddressType",
        "ExtraPairPageDefinitionID"
      ]
    },
    {
      "name": "Edit.BeamTogether",
      "displayName": "Beam Together",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.BreakBeam",
      "displayName": "Make Unbeamed",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.CalculateHarpPedal",
      "displayName": "Calculate Harp Pedals",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ChangeBarConsolidation",
      "displayName": "Change Bar Consolidation",
      "requiredParameters": [
        "BarConsolidationBehaviour"
      ],
      "optionalParameters": []
    },
    {
      "name": "Edit.ChangeLayoutTransposition",
      "displayName": "Change Layout Transposition",
      "requiredParameters": [
        "LayoutTransposition"
      ],
      "optionalParameters": []
    },
    {
      "name": "Edit.ChangeParagraphStyle",
      "displayName": "Change Paragraph Style...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ChangePercussionDestinationVoice",
      "displayName": null,
      "requiredParameters": [
        "VoiceDirAndIndex"
      ],
      "optionalParameters": []
    },
    {
      "name": "Edit.ChangeVoice",
      "displayName": "Change Voice",
      "requiredParameters": [],
      "optionalParameters": [
        "FlowID",
        "InstrumentID",
        "LogicalStaveID",
        "VoiceDirection",
        "VoiceIndex",
        "SlashedVoiceType"
      ]
    },
    {
      "name": "Edit.ChangeVoiceDirection",
      "displayName": "Toggle Voice Direction",
      "requiredParameters": [],
      "optionalParameters": [
        "VoiceDirection"
      ]
    },
    {
      "name": "Edit.ChangeVoiceToDownstem1",
      "displayName": "Change Voice to Down-stem Voice 1",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ChangeVoiceToDownstem2",
      "displayName": "Change Voice to Down-stem Voice 2",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ChangeVoiceToDownstem3",
      "displayName": "Change Voice to Down-stem Voice 3",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ChangeVoiceToDownstem4",
      "displayName": "Change Voice to Down-stem Voice 4",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ChangeVoiceToDownstemSlash1",
      "displayName": "Change Voice to Down-stem Slash Voice 1",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ChangeVoiceToDownstemSlash2",
      "displayName": "Change Voice to Down-stem Slash Voice 2",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ChangeVoiceToNext",
      "displayName": "Change Voice to Next Voice on Staff",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ChangeVoiceToPrevious",
      "displayName": "Change Voice to Previous Voice on Staff",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ChangeVoiceToStemlessSlash1",
      "displayName": "Change Voice to stemless Slash Voice 1",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ChangeVoiceToStemlessSlash2",
      "displayName": "Change Voice to stemless Slash Voice 2",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ChangeVoiceToUpstem1",
      "displayName": "Change Voice to Up-stem Voice 1",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ChangeVoiceToUpstem2",
      "displayName": "Change Voice to Up-stem Voice 2",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ChangeVoiceToUpstem3",
      "displayName": "Change Voice to Up-stem Voice 3",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ChangeVoiceToUpstem4",
      "displayName": "Change Voice to Up-stem Voice 4",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ChangeVoiceToUpstemSlash1",
      "displayName": "Change Voice to Up-stem Slash Voice 1",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ChangeVoiceToUpstemSlash2",
      "displayName": "Change Voice to Up-stem Slash Voice 2",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ClearMultiNoteTremolo",
      "displayName": "Remove Multi-note Tremolo",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ClearNoteheadSetOverride",
      "displayName": "Reset to Default Notehead",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ClearSingleNoteTremolo",
      "displayName": "Remove Single-note Tremolo",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ClefAfterBarline",
      "displayName": "After Barline",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ClefAfterGraceNotes",
      "displayName": "After Grace Notes",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ClefInConcertLayouts",
      "displayName": null,
      "requiredParameters": [
        "ClefEntityID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Edit.ClefInTransposingLayouts",
      "displayName": null,
      "requiredParameters": [
        "ClefEntityID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Edit.ClefResetPosition",
      "displayName": "Reset Clef Position",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ClickInScoreUI",
      "displayName": null,
      "requiredParameters": [
        "ScoreUICommand",
        "FlowID"
      ],
      "optionalParameters": [
        "SystemTrackSelectionRange"
      ]
    },
    {
      "name": "Edit.Copy",
      "displayName": "Copy",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.CopyAtLocation",
      "displayName": null,
      "requiredParameters": [
        "LayoutAspectType",
        "LayoutID",
        "X",
        "Y"
      ],
      "optionalParameters": []
    },
    {
      "name": "Edit.CopyAtPosition",
      "displayName": null,
      "requiredParameters": [
        "LayoutAspectType",
        "LayoutID",
        "FlowID",
        "EventStreamID",
        "AssignedStaveType",
        "Position"
      ],
      "optionalParameters": []
    },
    {
      "name": "Edit.CreateCondensingChange",
      "displayName": "Condensing Change...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.CreateFannedBeamAccelThreeLines",
      "displayName": "Accelerando (Three Lines)",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.CreateFannedBeamAccelTwoLines",
      "displayName": "Accelerando (Two Lines)",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.CreateFannedBeamRallThreeLines",
      "displayName": "Rallentando (Three Lines)",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.CreateFannedBeamRallTwoLines",
      "displayName": "Rallentando (Two Lines)",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.CreateFrameBreak",
      "displayName": "Frame Break",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.CreateMarker",
      "displayName": "Create Marker",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.CreateNoteSpacingChange",
      "displayName": "Note Spacing Change...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.CreatePercussionLegend",
      "displayName": "Legend for All Instruments",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.CreatePercussionLegendSoundingInstruments",
      "displayName": "Legend for Sounding Instruments",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.CreateSystemBreak",
      "displayName": "System Break",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.CrossStaffAbove",
      "displayName": "Cross to Staff Above",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.CrossStaffBelow",
      "displayName": "Cross to Staff Below",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.CrossStaffReset",
      "displayName": "Reset to Original Staff",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.Cut",
      "displayName": "Cut",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.Delete",
      "displayName": "Delete",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.DeleteBars",
      "displayName": "Delete Bars",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.DeleteTonalitySystem",
      "displayName": "Delete Tonality System",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.DuplicateTonalitySystem",
      "displayName": "Duplicate Tonality System",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.EditInstrumentVisibilityFilters",
      "displayName": "Edit Instrument Filter Presets...",
      "requiredParameters": [],
      "optionalParameters": [
        "LayoutID",
        "ScoreLayoutViewID"
      ]
    },
    {
      "name": "Edit.EditTonalitySystem",
      "displayName": "Edit Tonality System",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.EditUseInstrumentVisibilityFilterPreset",
      "displayName": null,
      "requiredParameters": [
        "ID"
      ],
      "optionalParameters": [
        "LayoutID",
        "ScoreLayoutViewID"
      ]
    },
    {
      "name": "Edit.ExportLibraryForPercussionKit",
      "displayName": null,
      "requiredParameters": [
        "PlayerID",
        "InstrumentID",
        "File"
      ],
      "optionalParameters": []
    },
    {
      "name": "Edit.ExportTonalitySystem",
      "displayName": "Export Tonality System",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.FilterBehaviour",
      "displayName": "Filter Select or Deselect",
      "requiredParameters": [
        "FilterBehaviour"
      ],
      "optionalParameters": []
    },
    {
      "name": "Edit.FilterSelectedInstruments",
      "displayName": "Create Preset from Selection",
      "requiredParameters": [],
      "optionalParameters": [
        "LayoutID",
        "ScoreLayoutViewID"
      ]
    },
    {
      "name": "Edit.Find",
      "displayName": "Find...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.FindNext",
      "displayName": "Find Next",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.FlipItem",
      "displayName": "Flip",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ForceStemletBeam",
      "displayName": "Force Stemlet Beam",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.GenerateChordSymbolsFromSelection",
      "displayName": "Generate Chord Symbols from Selection...",
      "requiredParameters": [],
      "optionalParameters": [
        "HarmonicRhythmType",
        "FixedHarmonicRhythm",
        "AnalyseOpenFifths",
        "AnalyseThirds",
        "IgnoreOmittedFifths",
        "IgnoreInversionsThreshold",
        "AlwaysIgnoreInversions",
        "ShortNoteLengthThreshold",
        "MultipleAnalysedChordsAtDownbeatsOnly",
        "OnlyCreateChordsForHorizontalPassagesIfUnambiguous",
        "UseVampDetection",
        "MinimumLengthForChordsInVamp",
        "MaximumSeparationBetweenChordsInVamp",
        "TryToDetectAndHandlePassingNotes",
        "MinimumLengthOfChordsToAnalyse"
      ]
    },
    {
      "name": "Edit.GenerateNotesFromChordSymbolsInSelection",
      "displayName": "Generate Notes from Chord Symbols in Selection...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.GoTo",
      "displayName": "Go To Bar...",
      "requiredParameters": [],
      "optionalParameters": [
        "FlowID",
        "ScoreLayoutViewID",
        "Index"
      ]
    },
    {
      "name": "Edit.GoToFlow",
      "displayName": "Go To Flow",
      "requiredParameters": [
        "FlowID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Edit.GoToNextFlow",
      "displayName": "Go To Next Flow",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.GoToPage",
      "displayName": "Go To Page...",
      "requiredParameters": [],
      "optionalParameters": [
        "Index"
      ]
    },
    {
      "name": "Edit.GoToPreviousFlow",
      "displayName": "Go To Previous Flow",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.GoToRehearsalMark",
      "displayName": "Go To Rehearsal Mark...",
      "requiredParameters": [],
      "optionalParameters": [
        "FlowID",
        "Index"
      ]
    },
    {
      "name": "Edit.GoToRhythmicPosition",
      "displayName": "Go To Rhythmic Position",
      "requiredParameters": [
        "Position",
        "FlowID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Edit.GroupDynamicsTogether",
      "displayName": "Group Dynamics Together",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.GroupPlayingTechniques",
      "displayName": "Group Playing Techniques",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.HideAccidental",
      "displayName": "Hide Accidental",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ImportTonalitySystem",
      "displayName": "Import Tonality System",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.InstrumentVisibilityFilterPreset1",
      "displayName": "Instrument Filter Preset 1",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.InstrumentVisibilityFilterPreset10",
      "displayName": "Instrument Filter Preset 10",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.InstrumentVisibilityFilterPreset2",
      "displayName": "Instrument Filter Preset 2",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.InstrumentVisibilityFilterPreset3",
      "displayName": "Instrument Filter Preset 3",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.InstrumentVisibilityFilterPreset4",
      "displayName": "Instrument Filter Preset 4",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.InstrumentVisibilityFilterPreset5",
      "displayName": "Instrument Filter Preset 5",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.InstrumentVisibilityFilterPreset6",
      "displayName": "Instrument Filter Preset 6",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.InstrumentVisibilityFilterPreset7",
      "displayName": "Instrument Filter Preset 7",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.InstrumentVisibilityFilterPreset8",
      "displayName": "Instrument Filter Preset 8",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.InstrumentVisibilityFilterPreset9",
      "displayName": "Instrument Filter Preset 9",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.LineOfLyrics",
      "displayName": "Edit Line of Lyrics...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.LinkElements",
      "displayName": "Link Elements",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.LyricTextContent",
      "displayName": "Edit Single Lyric...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.MakeMultiNoteTremolo",
      "displayName": null,
      "requiredParameters": [
        "Value"
      ],
      "optionalParameters": []
    },
    {
      "name": "Edit.MakeNewRepeatEndingLine",
      "displayName": "Create New Repeat Ending",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ManualStaffVisibility",
      "displayName": "Manual Staff Visibility...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.NewTonalitySystem",
      "displayName": "New Tonality System",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.Paste",
      "displayName": "Paste",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.PasteArticulations",
      "displayName": "Paste Articulations",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.PasteChordSymbolsAsNotes",
      "displayName": "Paste Chord Symbols as Notes",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.PasteExplode",
      "displayName": "Explode",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.PasteFileAtPosition",
      "displayName": null,
      "requiredParameters": [
        "File",
        "FlowID",
        "Position",
        "InstrumentIDArray"
      ],
      "optionalParameters": [
        "TechniqueID",
        "EventStreamID"
      ]
    },
    {
      "name": "Edit.PasteIntoVoice",
      "displayName": "Paste Into Voice",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.PasteReduce",
      "displayName": "Reduce",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.PedalLineMerge",
      "displayName": "Merge Pedal Lines",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.PedalLineRemoveNotch",
      "displayName": "Remove Retake",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.PedalLineSplit",
      "displayName": "Split Pedal Lines",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.PerformMarqueeSelection",
      "displayName": null,
      "requiredParameters": [
        "Top",
        "Left",
        "Bottom",
        "Right"
      ],
      "optionalParameters": []
    },
    {
      "name": "Edit.PropagateProperties",
      "displayName": "Propagate Properties",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.PropertiesSetGlobal",
      "displayName": "Set Properties Globally",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.PropertiesSetLocal",
      "displayName": "Set Properties Locally",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.PropertiesToggleGlobalLocal",
      "displayName": "Toggle Set Properties Scope",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.Redo",
      "displayName": "Redo",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.RemoveAllInstrumentsFromPercussionKitInPlayer",
      "displayName": "Remove All Instruments From Kit",
      "requiredParameters": [
        "InstrumentID",
        "PlayerID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Edit.RemoveCornerOrAngledLineFromOttavaLine",
      "displayName": "Remove Corner or Angle from Octave Line",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.RemoveFromDynamicGroup",
      "displayName": "Remove Dynamic from Group",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.RemoveInstrumentsFromPercussionKitInPlayer",
      "displayName": null,
      "requiredParameters": [
        "InstrumentIDArray",
        "InstrumentID",
        "PlayerID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Edit.RemovePlayingTechniqueFromGroup",
      "displayName": "Remove Playing Technique from group",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.RemoveRests",
      "displayName": "Remove Rests",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.RemoveStaff",
      "displayName": "Remove Staff",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.Requantize",
      "displayName": "Requantize...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ResetAppearance",
      "displayName": "Reset Appearance",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ResetBeaming",
      "displayName": "Reset Beaming",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ResetFiguredBass",
      "displayName": "Reset Figured Bass",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ResetFingering",
      "displayName": "Reset Fingering",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ResetInstrumentNames",
      "displayName": "Reset Instrument Names",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ResetPercussionDestinationVoice",
      "displayName": "Reset Note Destination Voice",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ResetPosition",
      "displayName": "Reset Position",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.RestoreUnison",
      "displayName": "Restore Unison",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ScalePlayer",
      "displayName": null,
      "requiredParameters": [
        "ScalePlayerPercent"
      ],
      "optionalParameters": []
    },
    {
      "name": "Edit.ScalePlayerCustom",
      "displayName": "Custom Staff Size...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.SelectAll",
      "displayName": "Select All",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.SelectAtEndOfFlow",
      "displayName": "Select To End Of Flow",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.SelectAtPoint",
      "displayName": null,
      "requiredParameters": [
        "X",
        "Y",
        "AddToSelection",
        "BlockSelection",
        "NextSelectionAtPoint"
      ],
      "optionalParameters": [
        "SelectionTriggerAction"
      ]
    },
    {
      "name": "Edit.SelectMore",
      "displayName": "Select More",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.SelectNone",
      "displayName": "Select None",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.SelectToEndOfSystem",
      "displayName": "Select To End Of System",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.SelectToStartOfFlow",
      "displayName": "Select To Start Of Flow",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.SelectToStartOfSystem",
      "displayName": "Select To Start Of System",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.SetColourOverride",
      "displayName": "Set Color Override",
      "requiredParameters": [
        "Colour"
      ],
      "optionalParameters": []
    },
    {
      "name": "Edit.SetFramesEditMode",
      "displayName": "Edit Frames",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.SetGraphicSlicesEditMode",
      "displayName": "Edit Graphic Slices",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.SetGraphicalEditMode",
      "displayName": "Edit Graphically",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.SetLyricLineNumber",
      "displayName": "Set Lyric Line Number",
      "requiredParameters": [],
      "optionalParameters": [
        "LineNumber",
        "Chorus",
        "LinePlacement",
        "IsTranslation"
      ]
    },
    {
      "name": "Edit.SetNoteSpacingEditMode",
      "displayName": "Edit Note Spacing",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.SetNoteheadSetOverride",
      "displayName": "Notehead Set",
      "requiredParameters": [
        "NoteheadSetEntityID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Edit.SetPartialBeamDirectionLeft",
      "displayName": "Set Partial Beam Direction Left",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.SetPartialBeamDirectionRight",
      "displayName": "Set Partial Beam Direction Right",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.SetSpecialEditModeEnabled",
      "displayName": null,
      "requiredParameters": [
        "OpenScoreID",
        "ScoreLayoutViewContainerID",
        "enabled",
        "Type"
      ],
      "optionalParameters": []
    },
    {
      "name": "Edit.SetStaffSpacingEditMode",
      "displayName": "Edit Staff Spacing",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ShiftSpacingSelection",
      "displayName": null,
      "requiredParameters": [
        "Amount"
      ],
      "optionalParameters": []
    },
    {
      "name": "Edit.ShowAccidental",
      "displayName": "Show Accidental",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ShowAccidentalInBrackets",
      "displayName": "Show Accidental in Square Brackets",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ShowAccidentalInParentheses",
      "displayName": "Show Accidental in Round Brackets",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ShowChordSymbolEditor",
      "displayName": "Edit Chord Symbol",
      "requiredParameters": [
        "FlowID",
        "EventID",
        "EventBlockInstanceID",
        "LogicalStaveID",
        "LayoutID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Edit.SingleNoteTremoloFourStrokes",
      "displayName": "Four-stroke Single-note Tremolo",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.SingleNoteTremoloOneStroke",
      "displayName": "One-stroke Single-note Tremolo",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.SingleNoteTremoloThreeStrokes",
      "displayName": "Three-stroke Single-note Tremolo",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.SingleNoteTremoloTwoStrokes",
      "displayName": "Two-stroke Single-note Tremolo",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.SingleNoteTremoloZOnStem",
      "displayName": "Z on Stem Single-note Tremolo",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.SplitBeam",
      "displayName": "Split Beam",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.SplitFlowAtSelection",
      "displayName": "Split Flow",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.SplitSecondaryBeam",
      "displayName": "Split Secondary Beam",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.StemForceCentredBeam",
      "displayName": "Force Centered Beam",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.StemForceCustomCentredBeam",
      "displayName": "Custom Centered Beam...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.StemForceDirection",
      "displayName": "Force Stem Direction",
      "requiredParameters": [
        "ForcedVoiceDirection"
      ],
      "optionalParameters": []
    },
    {
      "name": "Edit.StemRemoveCentredBeam",
      "displayName": "Reset Centered Beam",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.StemRemoveForceDirection",
      "displayName": "Remove Forced Stem",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.SuppressStemletBeam",
      "displayName": "Suppress Stemlet Beam",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.SwapVoiceOrder",
      "displayName": "Swap Voice Order",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.SwapVoices",
      "displayName": "Swap Voice Contents",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ToggleAccidentalVisibility",
      "displayName": "Toggle Accidental Visibility",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ToggleBarConsolidation",
      "displayName": "Toggle Bar Consolidation",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ToggleHideEvent",
      "displayName": "Hide/Show Item",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ToggleHideNotehead",
      "displayName": "Toggle Hide Notehead",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ToggleHideStem",
      "displayName": "Toggle Hide Stem",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ToggleLaissezVibrerTie",
      "displayName": "Toggle Laissez Vibrer Tie",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ToggleLayoutCondensing",
      "displayName": "Condensing",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ToggleLayoutTransposition",
      "displayName": "Toggle Layout Transposition",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ToggleRoundBracketsForNotehead",
      "displayName": "Toggle Round Brackets",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ToggleSquareBracketsForNotehead",
      "displayName": "Toggle Square Brackets",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.ToggleSuppressPlayback",
      "displayName": "Toggle Suppress Playback",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.TransposeSelection",
      "displayName": "Transpose...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.TrimFlow",
      "displayName": "Trim Flow",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.Undo",
      "displayName": "Undo",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.UndoRedoHistory",
      "displayName": "History...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.UngroupDynamics",
      "displayName": "Ungroup Dynamics",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.UngroupPlayingTechniques",
      "displayName": "Ungroup Playing Techniques",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.UnlinkElement",
      "displayName": "Unlink Element",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Edit.UseInstrumentVisibilityFilter",
      "displayName": "Use Instrument Filter",
      "requiredParameters": [],
      "optionalParameters": [
        "UseLayoutInstrumentVisibilityFilter",
        "LayoutID",
        "ScoreLayoutViewID"
      ]
    },
    {
      "name": "Edit.kForceCurrentAppearanceOfFiguredBass",
      "displayName": "Force Current Appearance",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Engrave.ChangeFonts",
      "displayName": "Music Fonts...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Engrave.ChangeProjectLanguage",
      "displayName": "Project Language...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Engrave.ChordSymbolOptions",
      "displayName": "Chord Symbols...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Engrave.ClearLayoutHorizontalSpacingAdjustments",
      "displayName": "Reset Note Spacing",
      "requiredParameters": [],
      "optionalParameters": [
        "SpacingAdjustmentRemovalType"
      ]
    },
    {
      "name": "Engrave.ClearLayoutVerticalSpacingAdjustments",
      "displayName": "Reset Staff Spacing",
      "requiredParameters": [],
      "optionalParameters": [
        "SpacingAdjustmentRemovalType"
      ]
    },
    {
      "name": "Engrave.CompleteEditStaffSpacingMeasurement",
      "displayName": null,
      "requiredParameters": [
        "OpenScoreID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Engrave.CopyStaffSpacingBetweenFrames",
      "displayName": "Copy Staff Spacing...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Engrave.CreateBarlineOverride",
      "displayName": "Create Barline Override",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Engrave.CreateBrace",
      "displayName": "Create Brace",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Engrave.CreateBracket",
      "displayName": "Create Bracket",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Engrave.CreateBracketAndBarlineChange",
      "displayName": "Create Bracket and Barline Change",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Engrave.CreateBracketAndBarlineReset",
      "displayName": "Reset Bracketing",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Engrave.CreateSubBracket",
      "displayName": "Create Sub-Bracket",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Engrave.CreateSubSubBracket",
      "displayName": "Create Sub-Sub-Bracket",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Engrave.EditCharacterStyles",
      "displayName": "Character Styles...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Engrave.EditChordDiagrams",
      "displayName": "Chord Diagrams...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Engrave.EditFlowHeadingTextContent",
      "displayName": "Edit Flow Heading...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Engrave.EditFontStyles",
      "displayName": "Font Styles...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Engrave.EditLineAnnotations",
      "displayName": "Line Annotations...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Engrave.EditLineBodies",
      "displayName": "Line Bodies...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Engrave.EditLines",
      "displayName": "Lines...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Engrave.EditMusicSymbols",
      "displayName": "Music Symbols...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Engrave.EditNoteheadSets",
      "displayName": "Notehead Sets...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Engrave.EditPageDimensionPresets",
      "displayName": "Page Sizes...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Engrave.EditParagraphStyles",
      "displayName": "Paragraph Styles...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Engrave.EditPlayTechniqueAppearanceStyles",
      "displayName": "Playing Techniques...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Engrave.EditProjectDefaultChordSymbolAppearances",
      "displayName": "Chord Symbols...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Engrave.EditRepeatableComposites",
      "displayName": "Repeatable Symbols...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Engrave.EnterEdit",
      "displayName": "Edit Item",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Engrave.LyricLineUserYOffsetsReset",
      "displayName": "Reset Lyric Offsets",
      "requiredParameters": [],
      "optionalParameters": [
        "SpacingAdjustmentRemovalType"
      ]
    },
    {
      "name": "Engrave.Options",
      "displayName": "Engraving Options...",
      "requiredParameters": [],
      "optionalParameters": [
        "EventType"
      ]
    },
    {
      "name": "Engrave.SelectDragHandlesViewState",
      "displayName": null,
      "requiredParameters": [
        "DragHandlesViewState"
      ],
      "optionalParameters": [
        "Set"
      ]
    },
    {
      "name": "Engrave.SetEngravingOptions",
      "displayName": null,
      "requiredParameters": [
        "Dictionary",
        "OpenScoreID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Engrave.SetFontStyleOptions",
      "displayName": null,
      "requiredParameters": [
        "Dictionary"
      ],
      "optionalParameters": []
    },
    {
      "name": "Engrave.SplitMultirest",
      "displayName": "Split Multi-bar Rest",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Engrave.ToggleDragHandleCategory",
      "displayName": null,
      "requiredParameters": [
        "DragHandleCategory"
      ],
      "optionalParameters": [
        "Set"
      ]
    },
    {
      "name": "Engrave.UpdateDxDy",
      "displayName": null,
      "requiredParameters": [
        "X",
        "Y"
      ],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.ApplySingleTempoAtStart",
      "displayName": null,
      "requiredParameters": [
        "FlowID",
        "NoteheadDuration",
        "BeatPerMinute"
      ],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.ChangeProperty",
      "displayName": null,
      "requiredParameters": [
        "FlowID",
        "EventID",
        "EventBlockID",
        "Type"
      ],
      "optionalParameters": [
        "Value"
      ]
    },
    {
      "name": "EventEdit.ClearPlayedPitchesOfChordSymbol",
      "displayName": "Clear Chord Symbol Played Pitches",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.CopyShapeToMatchingChordSymbols",
      "displayName": "Copy Shape to Matching Chord Symbols",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.CopyToStaveAbove",
      "displayName": "Duplicate to Staff Above",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.CopyToStaveBelow",
      "displayName": "Duplicate to Staff Below",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.Delete",
      "displayName": null,
      "requiredParameters": [],
      "optionalParameters": [
        "FlowID",
        "EventID",
        "EventBlockID",
        "Addresses"
      ]
    },
    {
      "name": "EventEdit.DurationDouble",
      "displayName": "Double Note Duration",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.DurationHalve",
      "displayName": "Halve Note Duration",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.DurationLengthen",
      "displayName": "Lengthen Duration",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.DurationLengthenByGrid",
      "displayName": "Lengthen Duration by Grid Value",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.DurationLengthenByValue",
      "displayName": "Lengthen Duration by...",
      "requiredParameters": [
        "RhythmicGridResolutionValue"
      ],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.DurationShorten",
      "displayName": "Shorten Duration",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.DurationShortenByGrid",
      "displayName": "Shorten Duration by Grid Value",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.DurationShortenByValue",
      "displayName": "Shorten Duration by...",
      "requiredParameters": [
        "RhythmicGridResolutionValue"
      ],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.DynamicIntensityDecrease",
      "displayName": "Decrease Dynamic Intensity",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.DynamicIntensityIncrease",
      "displayName": "Increase Dynamic Intensity",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.EditExistingArpeggio",
      "displayName": null,
      "requiredParameters": [
        "FlowID",
        "EventID",
        "EventBlockID",
        "Text"
      ],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.EditExistingBarRepeatRegion",
      "displayName": null,
      "requiredParameters": [
        "FlowID",
        "EventID",
        "EventBlockID",
        "Text"
      ],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.EditExistingClef",
      "displayName": null,
      "requiredParameters": [
        "FlowID",
        "EventID",
        "EventBlockID",
        "Text"
      ],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.EditExistingComment",
      "displayName": null,
      "requiredParameters": [
        "CommentAuthor",
        "CommentAuthorInitials",
        "CommentText",
        "EventID",
        "EventBlockID",
        "FlowID",
        "Duration"
      ],
      "optionalParameters": [
        "CommentInReplyTo"
      ]
    },
    {
      "name": "EventEdit.EditExistingCue",
      "displayName": null,
      "requiredParameters": [
        "FlowID",
        "EventID",
        "EventBlockID",
        "Text"
      ],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.EditExistingDynamic",
      "displayName": null,
      "requiredParameters": [
        "FlowID",
        "EventID",
        "EventBlockID",
        "Text"
      ],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.EditExistingGlissando",
      "displayName": null,
      "requiredParameters": [
        "FlowID",
        "EventID",
        "EventBlockID",
        "Text"
      ],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.EditExistingHoldOrPause",
      "displayName": null,
      "requiredParameters": [
        "FlowID",
        "EventID",
        "EventBlockID",
        "Text"
      ],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.EditExistingKeySignature",
      "displayName": null,
      "requiredParameters": [
        "FlowID",
        "EventID",
        "EventBlockID",
        "Text"
      ],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.EditExistingMIDITriggerEvent",
      "displayName": null,
      "requiredParameters": [
        "FlowID",
        "EventBlockID",
        "EventID",
        "Text"
      ],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.EditExistingOctaveLine",
      "displayName": null,
      "requiredParameters": [
        "FlowID",
        "EventID",
        "EventBlockID",
        "Text"
      ],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.EditExistingOrEnterStepTimeInput",
      "displayName": "Edit Item or Start Note Input",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.EditExistingOrnament",
      "displayName": null,
      "requiredParameters": [
        "FlowID",
        "EventID",
        "EventBlockID",
        "Text"
      ],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.EditExistingPedalLine",
      "displayName": null,
      "requiredParameters": [
        "FlowID",
        "EventID",
        "EventBlockID",
        "Text"
      ],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.EditExistingPlayingTechnique",
      "displayName": null,
      "requiredParameters": [
        "FlowID",
        "EventID",
        "EventBlockID",
        "Text"
      ],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.EditExistingRepeatMarker",
      "displayName": null,
      "requiredParameters": [
        "FlowID",
        "EventID",
        "EventBlockID",
        "Text"
      ],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.EditExistingRhythmicFeel",
      "displayName": null,
      "requiredParameters": [
        "FlowID",
        "EventID",
        "EventBlockID",
        "Text"
      ],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.EditExistingRomanNumeral",
      "displayName": null,
      "requiredParameters": [
        "FlowID",
        "EventID",
        "EventBlockID",
        "Text"
      ],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.EditExistingSlashRegion",
      "displayName": null,
      "requiredParameters": [
        "FlowID",
        "EventID",
        "EventBlockID",
        "Text"
      ],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.EditExistingTempo",
      "displayName": null,
      "requiredParameters": [
        "FlowID",
        "EventID",
        "EventBlockID",
        "Text"
      ],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.EditExistingTimeSignature",
      "displayName": null,
      "requiredParameters": [
        "FlowID",
        "EventID",
        "EventBlockID",
        "Text"
      ],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.EditExistingTrill",
      "displayName": null,
      "requiredParameters": [
        "FlowID",
        "EventID",
        "EventBlockID",
        "Text"
      ],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.ExtendToEndOfSelection",
      "displayName": "Extend to End of Selection",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.ExtendToNextEvent",
      "displayName": "Extend to Next Note",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.MoveLeft",
      "displayName": "Move Left",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.MoveLeftByGrid",
      "displayName": "Move Left by Grid Value",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.MoveLeftByValue",
      "displayName": "Move Left by...",
      "requiredParameters": [
        "RhythmicGridResolutionValue"
      ],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.MoveMarker",
      "displayName": null,
      "requiredParameters": [
        "FlowID",
        "EventID",
        "EventBlockID",
        "Time"
      ],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.MoveRight",
      "displayName": "Move Right",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.MoveRightByGrid",
      "displayName": "Move Right by Grid Value",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.MoveRightByValue",
      "displayName": "Move Right by...",
      "requiredParameters": [
        "RhythmicGridResolutionValue"
      ],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.MoveToStaveAbove",
      "displayName": "Move to Staff Above",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.MoveToStaveBelow",
      "displayName": "Move to Staff Below",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.NavigateDown",
      "displayName": "Navigate Down",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.NavigateDownExtend",
      "displayName": "Extend Selection Down",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.NavigateDownExtendBottom",
      "displayName": "Extend Selection Down to Bottom of System",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.NavigateDownNextStave",
      "displayName": "Navigate Down Next Stave",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.NavigateLeft",
      "displayName": "Select Left",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.NavigateLeftBar",
      "displayName": "Select Left by Bar",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.NavigateLeftExtend",
      "displayName": "Extend Selection Left",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.NavigateLeftExtendBar",
      "displayName": "Extend Selection Left to Previous Bar",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.NavigateNextBarline",
      "displayName": "Navigate to the Next Barline",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.NavigateNextFragment",
      "displayName": "Navigate to the Next Fragment",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.NavigateNextItemSamePosition",
      "displayName": "Navigate to Next Item at Position",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.NavigatePreviousBarline",
      "displayName": "Navigate to the Previous Barline",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.NavigatePreviousFragment",
      "displayName": "Navigate to the Previous Fragment",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.NavigatePreviousItemSamePosition",
      "displayName": "Navigate to Previous Item at Position",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.NavigateRight",
      "displayName": "Select Right",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.NavigateRightBar",
      "displayName": "Select Right by Bar",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.NavigateRightExtend",
      "displayName": "Extend Selection Right",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.NavigateRightExtendBar",
      "displayName": "Extend Selection Right to Next Bar",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.NavigateUp",
      "displayName": "Navigate Up",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.NavigateUpExtend",
      "displayName": "Extend Selection Up",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.NavigateUpExtendTop",
      "displayName": "Extend Selection Up to Top of System",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.NavigateUpNextStave",
      "displayName": "Navigate Up Next Stave",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.Nudge",
      "displayName": "Move Item Graphically",
      "requiredParameters": [
        "Direction"
      ],
      "optionalParameters": [
        "Amount"
      ]
    },
    {
      "name": "EventEdit.ResetChordDiagramFingerNumbering",
      "displayName": "Reset Chord Diagram Finger Numbering",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.Select",
      "displayName": null,
      "requiredParameters": [
        "FlowID",
        "EventID",
        "EventBlockID"
      ],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.ShortenToNextEvent",
      "displayName": "Shorten to Next Note",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.ShowAllChordDiagramVariantsForPlayer",
      "displayName": "Show All Variants of Chord Diagram...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.ShowNextChordDiagramVariant",
      "displayName": "Cycle Chord Diagram",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "EventEdit.SwapStaves",
      "displayName": "Swap",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "File.ClearRecentFiles",
      "displayName": "Clear Menu",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "File.Close",
      "displayName": "Close",
      "requiredParameters": [],
      "optionalParameters": [
        "OpenScoreID",
        "ScoreLayoutViewContainerID"
      ]
    },
    {
      "name": "File.CloseAll",
      "displayName": "Close All",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "File.CloseProject",
      "displayName": "Close Project",
      "requiredParameters": [],
      "optionalParameters": [
        "OpenScoreID",
        "Save"
      ]
    },
    {
      "name": "File.Exit",
      "displayName": "Exit",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "File.Export",
      "displayName": "Export File",
      "requiredParameters": [],
      "optionalParameters": [
        "FilterID"
      ]
    },
    {
      "name": "File.Export.Comments",
      "displayName": "Export Comments",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "File.Export.Lyrics",
      "displayName": "Lyrics...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "File.Export.SpecificFlowsAndParts",
      "displayName": "Flows...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "File.Export.Text",
      "displayName": "Text...",
      "requiredParameters": [],
      "optionalParameters": [
        "File",
        "Show"
      ]
    },
    {
      "name": "File.Import.OtherProjectFlow",
      "displayName": "Flows...",
      "requiredParameters": [],
      "optionalParameters": [
        "File"
      ]
    },
    {
      "name": "File.Open",
      "displayName": "Open...",
      "requiredParameters": [],
      "optionalParameters": [
        "File",
        "FilterID",
        "Set"
      ]
    },
    {
      "name": "File.PageSetup",
      "displayName": "Page Setup...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "File.Save",
      "displayName": "Save",
      "requiredParameters": [],
      "optionalParameters": [
        "File"
      ]
    },
    {
      "name": "File.SaveAll",
      "displayName": "Save All",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "File.SaveAs",
      "displayName": "Save As...",
      "requiredParameters": [],
      "optionalParameters": [
        "File",
        "OriginalFile"
      ]
    },
    {
      "name": "File.SaveNewVersion",
      "displayName": "Save New Version",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "File.ScoreInfo",
      "displayName": "Project Info...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "File.ShowSaveAsTemplateDialog",
      "displayName": "Save As Project Template...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.AllFlatNotes",
      "displayName": "All Flat Notes",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.AllSharpNotes",
      "displayName": "All Sharp Notes",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.ArpeggioSigns",
      "displayName": "Arpeggio Signs",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.BarRepeatRegions",
      "displayName": "Bar Repeat Regions",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.Breaks",
      "displayName": "All Breaks",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.ChordSymbols",
      "displayName": "Chord Symbols",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.Clefs",
      "displayName": "Clefs",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.Comments",
      "displayName": "Comments",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.CondensingChanges",
      "displayName": "Condensing Changes",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.Cues",
      "displayName": "Cues",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.Dynamics",
      "displayName": "All Dynamics",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.FiguredBass",
      "displayName": "Figured Bass",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.FrameBreaks",
      "displayName": "Frame Breaks",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.GlissandoLines",
      "displayName": "Glissando Lines",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.GraceNotes",
      "displayName": "Grace Notes",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.GradualDynamics",
      "displayName": "Gradual Dynamics",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.GradualTempo",
      "displayName": "Gradual Tempos",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.GuitarBends",
      "displayName": "Guitar Bends",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.HarpPedals",
      "displayName": "Harp Pedals",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.HoldsAndPauses",
      "displayName": "Holds and Pauses",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.HorizontalLines",
      "displayName": "Horizontal and Note-attached Lines",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.ImmediateDynamics",
      "displayName": "Immediate Dynamics",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.ImmediateTempoAbsolute",
      "displayName": "Absolute Tempos",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.ImmediateTempoRelative",
      "displayName": "Relative Tempos",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.KeySignatures",
      "displayName": "Key Signatures",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.Lyrics",
      "displayName": "All Lyrics",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.LyricsAboveStaff",
      "displayName": "Above Staff",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.LyricsBelowStaff",
      "displayName": "Below Staff",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.LyricsChorus",
      "displayName": "Chorus",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.LyricsLine1",
      "displayName": "Line 1",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.LyricsLine2",
      "displayName": "Line 2",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.LyricsLine3",
      "displayName": "Line 3",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.LyricsLine4",
      "displayName": "Line 4",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.LyricsLine5",
      "displayName": "Line 5",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.LyricsTranslation",
      "displayName": "Translations",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.Markers",
      "displayName": "Markers",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.NoteSpacingChanges",
      "displayName": "Note Spacing Changes",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.NotesAndChords",
      "displayName": "Notes and Chords",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.NotesInChordsFromBottom",
      "displayName": null,
      "requiredParameters": [
        "Index"
      ],
      "optionalParameters": []
    },
    {
      "name": "Filter.NotesInChordsFromBottom1",
      "displayName": "Bottom Note or Single Notes",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.NotesInChordsFromBottom2",
      "displayName": "Second from Bottom Note or Single Notes",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.NotesInChordsFromBottom3",
      "displayName": "Third from Bottom Note or Single Notes",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.NotesInChordsFromBottom4",
      "displayName": "Fourth from Bottom Note or Single Notes",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.NotesInChordsFromBottom5",
      "displayName": "Fifth from Bottom Note or Single Notes",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.NotesInChordsFromTop",
      "displayName": null,
      "requiredParameters": [
        "Index"
      ],
      "optionalParameters": []
    },
    {
      "name": "Filter.NotesInChordsFromTop1",
      "displayName": "Top Note or Single Notes",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.NotesInChordsFromTop2",
      "displayName": "Second Note or Single Notes",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.NotesInChordsFromTop3",
      "displayName": "Third Note or Single Notes",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.NotesInChordsFromTop4",
      "displayName": "Fourth Note or Single Notes",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.NotesInChordsFromTop5",
      "displayName": "Fifth Note or Single Notes",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.NotesOfPitches",
      "displayName": "Notes by Pitch...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.OctaveLines",
      "displayName": "Octave Lines",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.OrnamentsAndTrills",
      "displayName": "Ornaments and Trills",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.PedalLines",
      "displayName": "Pedal Lines",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.PlayingTechniqueByEntityID",
      "displayName": "Individual Playing Technique",
      "requiredParameters": [
        "PlayingTechniqueAppearanceEntityID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Filter.PlayingTechniques",
      "displayName": "Playing Techniques",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.RehearsalMarks",
      "displayName": "Rehearsal Marks",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.RepeatEndings",
      "displayName": "Repeat Endings",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.RepeatMarkers",
      "displayName": "Repeat Markers",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.Rests",
      "displayName": "Rests",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.RhythmSlashRegions",
      "displayName": "Slash Regions",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.Slurs",
      "displayName": "Slurs",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.SystemBreaks",
      "displayName": "System Breaks",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.Tempo",
      "displayName": "All Tempos",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.Text",
      "displayName": "Text",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.TimeSignatures",
      "displayName": "Time Signatures",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.Tuplets",
      "displayName": "Tuplets",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.VerticalLines",
      "displayName": "Vertical Lines",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.VoiceAllDownStem",
      "displayName": "All Down-stem Voices",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.VoiceAllSlashes",
      "displayName": "All Slash Voices",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.VoiceAllUpStem",
      "displayName": "All Up-stem Voices",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.VoiceDownstem1",
      "displayName": "Down-stem Voice 1",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.VoiceDownstem2",
      "displayName": "Down-stem Voice 2",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.VoiceDownstem3",
      "displayName": "Down-stem Voice 3",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.VoiceDownstem4",
      "displayName": "Down-stem Voice 4",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.VoiceDownstemSlash1",
      "displayName": "Down-stem Slash Voice 1",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.VoiceDownstemSlash2",
      "displayName": "Down-stem Slash Voice 2",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.VoiceStemlessSlash1",
      "displayName": "Stemless Slash Voice 1",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.VoiceStemlessSlash2",
      "displayName": "Stemless Slash Voice 2",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.VoiceUpstem1",
      "displayName": "Up-stem Voice 1",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.VoiceUpstem2",
      "displayName": "Up-stem Voice 2",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.VoiceUpstem3",
      "displayName": "Up-stem Voice 3",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.VoiceUpstem4",
      "displayName": "Up-stem Voice 4",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.VoiceUpstemSlash1",
      "displayName": "Up-stem Slash Voice 1",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Filter.VoiceUpstemSlash2",
      "displayName": "Up-stem Slash Voice 2",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Help.CreateDiagnosticReport",
      "displayName": "Create Diagnostic Report",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Help.GuidedTour",
      "displayName": "Guided Tour",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Help.KeyCommands",
      "displayName": "Key Commands",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Help.Manual",
      "displayName": "Dorico Help",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Help.ShowOverlay",
      "displayName": "Show Help",
      "requiredParameters": [],
      "optionalParameters": [
        "Show"
      ]
    },
    {
      "name": "JumpBar.CommandsMode",
      "displayName": "Jump Bar Commands Mode",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "JumpBar.GotoMode",
      "displayName": "Jump Bar Goto Mode",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "MouseEdit.ChangeEventPositionOrDuration",
      "displayName": null,
      "requiredParameters": [],
      "optionalParameters": [
        "NewPosition",
        "NewDuration",
        "SubElementID",
        "PropertyType",
        "MouseEditWithSideEffect",
        "RemoveSubelementSecondaryPositions"
      ]
    },
    {
      "name": "MusicalManipulation.InvertPitches",
      "displayName": "Invert Pitches...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "MusicalManipulation.MapPitches",
      "displayName": "Map Pitches...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "MusicalManipulation.RepeatPitches",
      "displayName": "Repeat Pitches...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "MusicalManipulation.RetrogradeAndInvertPitches",
      "displayName": "Reverse and Invert Pitches...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "MusicalManipulation.RetrogradePitches",
      "displayName": "Reverse Pitches",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "MusicalManipulation.RetrogradePitchesAndRhythm",
      "displayName": "Reverse Pitches and Rhythms",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "MusicalManipulation.RetrogradePitchesAndRhythmAndInvertPitches",
      "displayName": "Reverse and Invert Pitches and Reverse Rhythms...",
      "requiredParameters": [],
      "optionalParameters": [
        "ParameterRotationNumberOfSteps"
      ]
    },
    {
      "name": "MusicalManipulation.RetrogradeRhythm",
      "displayName": "Reverse Rhythms",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "MusicalManipulation.RotatePitches",
      "displayName": "Rotate Pitches...",
      "requiredParameters": [],
      "optionalParameters": [
        "ParameterRotationNumberOfSteps"
      ]
    },
    {
      "name": "MusicalManipulation.RotatePitchesAndRhythm",
      "displayName": "Rotate Pitches and Rhythms...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "MusicalManipulation.RotateRhythm",
      "displayName": "Rotate Rhythms...",
      "requiredParameters": [],
      "optionalParameters": [
        "ParameterRotationNumberOfSteps"
      ]
    },
    {
      "name": "MusicalManipulation.TransformScale",
      "displayName": "Map Scale...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteEdit.DecreasePlayEndOffset",
      "displayName": "Decrease Playback End Offset",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteEdit.DecreasePlayStartOffset",
      "displayName": "Decrease Playback Start Offset",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteEdit.IncreasePlayEndOffset",
      "displayName": "Increase Playback End Offset",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteEdit.IncreasePlayStartOffset",
      "displayName": "Increase Playback Start Offset",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteEdit.Pitch",
      "displayName": "Pitch",
      "requiredParameters": [
        "Direction"
      ],
      "optionalParameters": [
        "Octave",
        "Chromatic"
      ]
    },
    {
      "name": "NoteEdit.PitchDown",
      "displayName": "Lower Pitch by Step",
      "requiredParameters": [],
      "optionalParameters": [
        "count"
      ]
    },
    {
      "name": "NoteEdit.PitchDownChromatic",
      "displayName": "Lower Pitch by Chromatic Step",
      "requiredParameters": [],
      "optionalParameters": [
        "count"
      ]
    },
    {
      "name": "NoteEdit.PitchDownOctave",
      "displayName": "Lower Pitch by Octave",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteEdit.PitchUp",
      "displayName": "Raise Pitch by Step",
      "requiredParameters": [],
      "optionalParameters": [
        "count"
      ]
    },
    {
      "name": "NoteEdit.PitchUpChromatic",
      "displayName": "Raise Pitch by Chromatic Step",
      "requiredParameters": [],
      "optionalParameters": [
        "count"
      ]
    },
    {
      "name": "NoteEdit.PitchUpOctave",
      "displayName": "Raise Pitch by Octave",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteEdit.PropagateSpelling",
      "displayName": "Propagate Note Spellings",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteEdit.ResetSpellAutomatically",
      "displayName": "Respell Notes Automatically...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteEdit.ResetSpellingInAllLayouts",
      "displayName": "Reset Note Spellings in All Layouts",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteEdit.ResetSpellingInCurrentLayout",
      "displayName": "Reset Note Spellings in Current Layout",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteEdit.RespellUsingNoteNameAbove",
      "displayName": "Respell Using Note Name Above",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteEdit.RespellUsingNoteNameBelow",
      "displayName": "Respell Using Note Name Below",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.AcceptCurrentChordSymbolMIDIInput",
      "displayName": null,
      "requiredParameters": [
        "PrimaryPitches"
      ],
      "optionalParameters": [
        "ChordSymbolEntryAdvanceType",
        "SecondaryPitches",
        "PrimaryChordRoot",
        "SecondaryChordRoot",
        "PrimaryChordForceInversion",
        "SecondaryChordForceInversion"
      ]
    },
    {
      "name": "NoteInput.AcceptCurrentChordSymbolTextInput",
      "displayName": null,
      "requiredParameters": [
        "ChordSymbolEntryAdvanceType"
      ],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.AcceptCurrentFiguredBassTextInput",
      "displayName": null,
      "requiredParameters": [
        "FiguredBassEntryAdvanceType"
      ],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.AcceptCurrentLyricInput",
      "displayName": null,
      "requiredParameters": [
        "LyricsEntryAdvanceType"
      ],
      "optionalParameters": [
        "LyricText"
      ]
    },
    {
      "name": "NoteInput.AddBarAtEndOfFlow",
      "displayName": "Add Bar at End of Flow",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.AddFingeringsToSelection",
      "displayName": null,
      "requiredParameters": [
        "FingeringEntryAdvanceType"
      ],
      "optionalParameters": [
        "Definition"
      ]
    },
    {
      "name": "NoteInput.AddJazzArticulation",
      "displayName": null,
      "requiredParameters": [
        "Definition"
      ],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.AddRepeatsToSelection",
      "displayName": null,
      "requiredParameters": [
        "Definition"
      ],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.AdvanceChordSymbolInput",
      "displayName": "Advance Chord Symbol Input",
      "requiredParameters": [
        "ChordSymbolEntryAdvanceType"
      ],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.AdvanceLyricInput",
      "displayName": "Advance Lyric Input",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.ContinueChordSymbolInput",
      "displayName": "Continue Chord Symbol Input",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.ContinueFiguredBassInput",
      "displayName": "Continue Figured Bass Input",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.CreateBarLine",
      "displayName": "Create Bar or Barline",
      "requiredParameters": [],
      "optionalParameters": [
        "Value",
        "Duration",
        "Location",
        "RhythmicPosition",
        "FlowID"
      ]
    },
    {
      "name": "NoteInput.CreateBarRepeatRegion",
      "displayName": "Create Bar Repeat Region",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.CreateChordSymbolVisibilityRegion",
      "displayName": "Create Chord Symbol Region",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.CreateClef",
      "displayName": "Create Clef",
      "requiredParameters": [],
      "optionalParameters": [
        "Definition"
      ]
    },
    {
      "name": "NoteInput.CreateCue",
      "displayName": "Create Cue",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.CreateDynamic",
      "displayName": "Create Dynamic",
      "requiredParameters": [],
      "optionalParameters": [
        "Definition"
      ]
    },
    {
      "name": "NoteInput.CreateGlissando",
      "displayName": "Create Glissando",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.CreateGraceNote",
      "displayName": "Create Grace Note",
      "requiredParameters": [],
      "optionalParameters": [
        "Definition"
      ]
    },
    {
      "name": "NoteInput.CreateGuitarBend",
      "displayName": "Create Guitar Bend",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.CreateKeySignature",
      "displayName": "Create Key Signature",
      "requiredParameters": [],
      "optionalParameters": [
        "Definition"
      ]
    },
    {
      "name": "NoteInput.CreateOrnament",
      "displayName": "Create Ornament",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.CreatePause",
      "displayName": "Create Hold or Pause",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.CreatePlayingTechnique",
      "displayName": "Create Playing Technique",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.CreateRegionNumberingRepeatedBars",
      "displayName": "Create Numbered Bar Region",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.CreateRehearsalMark",
      "displayName": "Create Rehearsal Mark",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.CreateRepeat",
      "displayName": "Create Repeat Structure",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.CreateRhythmicFeel",
      "displayName": "Create Rhythmic Feel",
      "requiredParameters": [],
      "optionalParameters": [
        "RhythmicFeelEntityID"
      ]
    },
    {
      "name": "NoteInput.CreateSlashedRegion",
      "displayName": "Create Slash Region",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.CreateSlashedVoice",
      "displayName": "Create Slash Voice",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.CreateSystemText",
      "displayName": "Create System Text",
      "requiredParameters": [],
      "optionalParameters": [
        "ParagraphStyleID",
        "AboveOrBelow"
      ]
    },
    {
      "name": "NoteInput.CreateTempo",
      "displayName": "Create Tempo",
      "requiredParameters": [],
      "optionalParameters": [
        "Definition"
      ]
    },
    {
      "name": "NoteInput.CreateText",
      "displayName": "Create Text",
      "requiredParameters": [],
      "optionalParameters": [
        "ParagraphStyleID",
        "AboveOrBelow"
      ]
    },
    {
      "name": "NoteInput.CreateTimeSignature",
      "displayName": "Create Time Signature",
      "requiredParameters": [],
      "optionalParameters": [
        "Definition"
      ]
    },
    {
      "name": "NoteInput.CreateVoice",
      "displayName": "Create Voice",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.CycleNumDots",
      "displayName": "Cycle Number of Rhythm Dots",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.DeleteLeft",
      "displayName": "Delete Left",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.DeleteRight",
      "displayName": "Delete Right",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.DrumPadRecording",
      "displayName": null,
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.EditLockPosition",
      "displayName": "Set Edit Stop Position",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.EndTupletRun",
      "displayName": "End Tuplet Input",
      "requiredParameters": [],
      "optionalParameters": [
        "All"
      ]
    },
    {
      "name": "NoteInput.Enter",
      "displayName": "Start Note Input",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.EnterAtPoint",
      "displayName": null,
      "requiredParameters": [
        "LayoutID",
        "LayoutAspectType",
        "X",
        "Y"
      ],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.Exit",
      "displayName": "Stop Note Input",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.ExtendDown",
      "displayName": "Extend Down",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.ExtendUp",
      "displayName": "Extend Up",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.ForceDuration",
      "displayName": "Force Note Durations",
      "requiredParameters": [],
      "optionalParameters": [
        "Set"
      ]
    },
    {
      "name": "NoteInput.Fret",
      "displayName": "Fret Position",
      "requiredParameters": [
        "FretPosition"
      ],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.GraceNoteSlashToggle",
      "displayName": "Toggle Grace Note Slash",
      "requiredParameters": [],
      "optionalParameters": [
        "Set"
      ]
    },
    {
      "name": "NoteInput.GridResolutionDecrease",
      "displayName": "Decrease Rhythmic Grid Resolution",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.GridResolutionIncrease",
      "displayName": "Increase Rhythmic Grid Resolution",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.HairpinStart",
      "displayName": "Start Hairpin",
      "requiredParameters": [
        "Type"
      ],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.HairpinStop",
      "displayName": "Stop Hairpin",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.InsertBarRest",
      "displayName": "Create Bar Rest",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.InsertScope",
      "displayName": "Set Insert Scope",
      "requiredParameters": [
        "InsertModeScope"
      ],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.InsertScopeCycle",
      "displayName": "Cycle Insert Scope",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.Locked",
      "displayName": "Lock Note Durations",
      "requiredParameters": [],
      "optionalParameters": [
        "Set"
      ]
    },
    {
      "name": "NoteInput.MIDINoteInput",
      "displayName": null,
      "requiredParameters": [
        "MIDIPitches"
      ],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.Mode",
      "displayName": "Toggle Insert",
      "requiredParameters": [],
      "optionalParameters": [
        "NoteInputMode"
      ]
    },
    {
      "name": "NoteInput.MouseInputDisable",
      "displayName": "Disable Mouse Input",
      "requiredParameters": [],
      "optionalParameters": [
        "Set"
      ]
    },
    {
      "name": "NoteInput.MoveAdvance",
      "displayName": "Advance Caret",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.MoveDown",
      "displayName": "Move Down",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.MoveDownBottom",
      "displayName": "Move Down to Bottom of System",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.MoveLeft",
      "displayName": "Move Left",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.MoveLeftBar",
      "displayName": "Move Caret Left by Bar",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.MoveRight",
      "displayName": "Move Right",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.MoveRightBar",
      "displayName": "Move Caret Right by Bar",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.MoveUp",
      "displayName": "Move Up",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.MoveUpTop",
      "displayName": "Move Up to Top of System",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.NextVoice",
      "displayName": "Next Voice",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.NoteInputAdvanceFingeringInput",
      "displayName": "Advance Fingering Input",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.NoteValue",
      "displayName": "Set Note Duration",
      "requiredParameters": [
        "LogDuration"
      ],
      "optionalParameters": [
        "Set"
      ]
    },
    {
      "name": "NoteInput.NoteValueLonger",
      "displayName": "Note Value Longer",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.NoteValueShorter",
      "displayName": "Note Value Shorter",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.OctaveDown",
      "displayName": "Octave Down",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.OctaveUp",
      "displayName": "Octave Up",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.OttavaLineStart",
      "displayName": null,
      "requiredParameters": [
        "Octave"
      ],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.PedalLineStop",
      "displayName": "Stop Pedal Line",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.Pitch",
      "displayName": "Input Pitch",
      "requiredParameters": [],
      "optionalParameters": [
        "Pitch",
        "Up",
        "Down",
        "OctaveValue",
        "Type",
        "PositionOnStave"
      ]
    },
    {
      "name": "NoteInput.PitchBeforeDurationDown",
      "displayName": "Lower Shadow Note by Step",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.PitchBeforeDurationOctaveDown",
      "displayName": "Lower Shadow Note by Octave",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.PitchBeforeDurationOctaveUp",
      "displayName": "Raise Shadow Note by Octave",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.PitchBeforeDurationToggle",
      "displayName": "Toggle Pitch before duration",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.PitchBeforeDurationUp",
      "displayName": "Raise Shadow Note by Step",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.PitchMode",
      "displayName": null,
      "requiredParameters": [
        "NoteInputPitchModeValue"
      ],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.RemoveChordSymbolSpellingOverrides",
      "displayName": "Reset Enharmonic Spelling for Chord Symbol",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.RemoveJazzArticulation",
      "displayName": "Remove Jazz Articulation",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.RepeatLast",
      "displayName": "Repeat Item",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.ReplyToComment",
      "displayName": "Reply to Comment",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.RestMode",
      "displayName": "Rests",
      "requiredParameters": [],
      "optionalParameters": [
        "Set"
      ]
    },
    {
      "name": "NoteInput.Scissor",
      "displayName": "Scissors",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.ScissorWithMultipleSplits",
      "displayName": "Split by Rhythmic Grid Resolution",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.SetAccidental",
      "displayName": "Set Accidental",
      "requiredParameters": [],
      "optionalParameters": [
        "Type",
        "AccidentalDefinitionID",
        "Set"
      ]
    },
    {
      "name": "NoteInput.SetArticulation",
      "displayName": "Set Articulation",
      "requiredParameters": [
        "Value"
      ],
      "optionalParameters": [
        "Set",
        "Type"
      ]
    },
    {
      "name": "NoteInput.SetDotted",
      "displayName": "Dotted Notes",
      "requiredParameters": [],
      "optionalParameters": [
        "Set"
      ]
    },
    {
      "name": "NoteInput.SetGridResolution",
      "displayName": "Rhythmic Grid Resolution",
      "requiredParameters": [
        "RhythmicGridResolutionValue"
      ],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.SetNoteInputOptions",
      "displayName": null,
      "requiredParameters": [
        "Dictionary"
      ],
      "optionalParameters": [
        "OpenScoreID"
      ]
    },
    {
      "name": "NoteInput.SetPopOverItemInputLocality",
      "displayName": "Set Chord Symbol Input Locality",
      "requiredParameters": [],
      "optionalParameters": [
        "PopOverItemInputLocality",
        "PopoverEntryInvertInputLocality"
      ]
    },
    {
      "name": "NoteInput.ShowCommentDialog",
      "displayName": "Create Comment",
      "requiredParameters": [],
      "optionalParameters": [
        "OpenScoreID"
      ]
    },
    {
      "name": "NoteInput.ShowFingeringPopover",
      "displayName": "Create Fingering",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.ShowMIDITriggerRegionPopover",
      "displayName": "Create MIDI Trigger Region",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.ShowNoteInputOptions",
      "displayName": "Note Input Options...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.ShowPopoverForTransposingOrAddingNotes",
      "displayName": "Add Intervals",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.ShowRepeatsPopover",
      "displayName": "Create Repeat",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.SlurStart",
      "displayName": "Start Slur",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.SlurStop",
      "displayName": "Stop Slur",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.SplitByRhythmicLength",
      "displayName": "Split by Note Duration",
      "requiredParameters": [
        "LogDuration"
      ],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.StartChordSymbolInput",
      "displayName": "Create Chord Symbol",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.StartEndChord",
      "displayName": "Chord Input",
      "requiredParameters": [],
      "optionalParameters": [
        "Set"
      ]
    },
    {
      "name": "NoteInput.StartFiguredBassInput",
      "displayName": "Create Figured Bass",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.StartLyricInput",
      "displayName": "Create Lyrics",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.StartTupletRun",
      "displayName": "Create Tuplet",
      "requiredParameters": [],
      "optionalParameters": [
        "Definition",
        "Set"
      ]
    },
    {
      "name": "NoteInput.StartTupletRunCancel",
      "displayName": "Cancel Create Tuplet",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.StringDown",
      "displayName": "String Down",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.StringUp",
      "displayName": "String Up",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.TextCreateFinished",
      "displayName": null,
      "requiredParameters": [
        "FlowID",
        "EventBlockID",
        "RhythmicPositionPair",
        "AboveOrBelow",
        "IsSystemText"
      ],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.TextEditFinished",
      "displayName": "Edit Text",
      "requiredParameters": [
        "FlowID",
        "EventID",
        "EventBlockID"
      ],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.Tie",
      "displayName": "Tie",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.ToggleFullAndReducedNoteInputButtons",
      "displayName": "Show More/Fewer Note Durations",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.ToggleLiveNoteEditing",
      "displayName": "Toggle Mouse Note Editing",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.ToggleMIDIInput",
      "displayName": "Toggle MIDI Input",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.ToggleMIDIThru",
      "displayName": "Toggle MIDI Thru",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "NoteInput.TransposeOrAddNotesToSelection",
      "displayName": null,
      "requiredParameters": [
        "Definition"
      ],
      "optionalParameters": []
    },
    {
      "name": "OptionsDialog.CloseFind",
      "displayName": "Close Find Controls",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "OptionsDialog.Filter",
      "displayName": "Filter Pages",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "OptionsDialog.Find",
      "displayName": "Find In Page",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "OptionsDialog.NextResult",
      "displayName": "Next Result",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "OptionsDialog.PreviousResult",
      "displayName": "Previous Result",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.AddFlowHeadingChange",
      "displayName": "Insert Flow Heading Change...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.AddMasterPageChange",
      "displayName": "Insert Page Template Change...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.AddPageNumberChange",
      "displayName": "Insert Page Number Change...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.AddRangeToPagePanelSelection",
      "displayName": null,
      "requiredParameters": [
        "OpenScoreID",
        "ScoreLayoutViewContainerID",
        "PageIndex",
        "NumberPagesToSelect"
      ],
      "optionalParameters": []
    },
    {
      "name": "Page.AddToPagePanelSelection",
      "displayName": null,
      "requiredParameters": [
        "OpenScoreID",
        "ScoreLayoutViewContainerID",
        "PageIndex",
        "AddToSelection"
      ],
      "optionalParameters": []
    },
    {
      "name": "Page.ApplyMasterPageEditor",
      "displayName": "Apply Page Template Editor",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.ClearAllDefinitionOverrides",
      "displayName": "Remove All Page Overrides",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.ClearAllPageNumberChanges",
      "displayName": "Remove All Page Number Changes",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.ClearDefinitionOverride",
      "displayName": "Remove Page Override(s)",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.ClearFlowHeadingSelection",
      "displayName": null,
      "requiredParameters": [
        "OpenScoreID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Page.ClearMasterPagePairSelection",
      "displayName": null,
      "requiredParameters": [
        "OpenScoreID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Page.ClearPageNumberChange",
      "displayName": "Remove Page Number Change(s)",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.ClearPagePanelSelection",
      "displayName": null,
      "requiredParameters": [
        "OpenScoreID",
        "ScoreLayoutViewContainerID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Page.CloseMasterPageEditor",
      "displayName": "Close Page Template Editor",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.CopySelectedFramesToSelectedPages",
      "displayName": "Copy Selected Frames to Selected Pages",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.CreateFlowHeadingInSet",
      "displayName": "Create Flow Heading",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.CreateFrame",
      "displayName": null,
      "requiredParameters": [
        "IsMasterPage",
        "IsFlowHeading",
        "LayoutID",
        "Type",
        "PageIndex",
        "Left",
        "Right",
        "Top",
        "Bottom",
        "Height"
      ],
      "optionalParameters": []
    },
    {
      "name": "Page.CreateMasterPagePairInSet",
      "displayName": "Add Page Template",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.CreateNewMusicFrameChainForFrame",
      "displayName": null,
      "requiredParameters": [
        "IsMasterPage",
        "FrameChainDefinitionID",
        "IsLayoutSpecific",
        "PageIndex",
        "FrameIndexOnPage",
        "LayoutID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Page.CreateNewTextFlowAndUseInFrame",
      "displayName": "Create Text Flow and Use in Frame",
      "requiredParameters": [],
      "optionalParameters": [
        "LayoutID",
        "FrameChainDefinitionID",
        "IsLayoutSpecific",
        "PageIndex",
        "FrameIndexOnPage",
        "Content"
      ]
    },
    {
      "name": "Page.CreatePagePairDefinitionSet",
      "displayName": null,
      "requiredParameters": [
        "PagePairDefinitionSetEntityID",
        "Name"
      ],
      "optionalParameters": []
    },
    {
      "name": "Page.DeleteAllFlowHeadingChanges",
      "displayName": "Remove All Flow Heading Changes",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.DeleteAllMasterPageChanges",
      "displayName": "Remove All Page Template Changes",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.DeleteFlowHeadingChange",
      "displayName": "Remove Flow Heading Change(s)",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.DeleteFlowHeadingInSet",
      "displayName": "Delete Flow Heading",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.DeleteMasterPageChange",
      "displayName": "Remove Page Template Change(s)",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.DeleteMasterPagePairInSet",
      "displayName": "Delete Page Template",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.DeletePagePairDefinitionSet",
      "displayName": null,
      "requiredParameters": [
        "PagePairDefinitionSetEntityID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Page.EditFlowHeading",
      "displayName": "Edit Flow Heading",
      "requiredParameters": [],
      "optionalParameters": [
        "OpenScoreID",
        "ScoreLayoutViewContainerID",
        "ID"
      ]
    },
    {
      "name": "Page.EditFlowHeadingInfo",
      "displayName": "Rename Flow Heading",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.EditMasterPagePair",
      "displayName": "Edit Page Template",
      "requiredParameters": [],
      "optionalParameters": [
        "OpenScoreID",
        "ScoreLayoutViewContainerID",
        "MasterPageAddressType",
        "ExtraPairPageDefinitionID"
      ]
    },
    {
      "name": "Page.EditMasterPagePairInfo",
      "displayName": "Edit Page Template Info",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.ExportGraphicSlices",
      "displayName": "Export Graphic Slices",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.ExportPagePairDefinitionSet",
      "displayName": null,
      "requiredParameters": [
        "PagePairDefinitionSetEntityID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Page.ImportMasterPagePair",
      "displayName": "Import Page Template",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.ImportPagePairDefinitionSet",
      "displayName": "Import Page Template Set",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.InsertPages",
      "displayName": "Insert Pages...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.LoadCreateFrameCursor",
      "displayName": null,
      "requiredParameters": [
        "Type"
      ],
      "optionalParameters": []
    },
    {
      "name": "Page.LockFrame",
      "displayName": "Lock Frame",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.LockLayout",
      "displayName": "Lock Layout",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.LockSystem",
      "displayName": "Lock System",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.MakeIntoFrame",
      "displayName": "Make Into Frame",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.MakeIntoSystem",
      "displayName": "Make Into System",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.MasterPageCopyLeftToRight",
      "displayName": "Copy Left Page Template to Right",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.MasterPageCopyRightToLeft",
      "displayName": "Copy Right Page Template to Left",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.MoveBarsToNextSystem",
      "displayName": "Move Bars to Next System",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.MoveBarsToPreviousSystem",
      "displayName": "Move Bars to Previous System",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.MovePages",
      "displayName": "Move Pages...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.MovePagesEarlier",
      "displayName": "Swap with Previous Page",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.MovePagesLater",
      "displayName": "Swap with Next Page",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Page.NavigateTo",
      "displayName": null,
      "requiredParameters": [
        "PageIndex",
        "OpenScoreID",
        "ScoreLayoutViewContainerID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Page.OpenEditorForTextFrameContents",
      "displayName": "Open Text Editor",
      "requiredParameters": [],
      "optionalParameters": [
        "FrameChainDefinitionID",
        "IsLayoutSpecific",
        "PageIndex",
        "FrameIndexOnPage",
        "MasterPageAddressType",
        "ExtraPairPageDefinitionID"
      ]
    },
    {
      "name": "Page.RemoveFromPagePanelSelection",
      "displayName": null,
      "requiredParameters": [
        "OpenScoreID",
        "ScoreLayoutViewContainerID",
        "PageIndex"
      ],
      "optionalParameters": []
    },
    {
      "name": "Page.RenamePagePairDefinitionSet",
      "displayName": null,
      "requiredParameters": [
        "PagePairDefinitionSetEntityID",
        "Name"
      ],
      "optionalParameters": []
    },
    {
      "name": "Page.SelectFlowHeading",
      "displayName": null,
      "requiredParameters": [
        "OpenScoreID",
        "ScoreLayoutViewContainerID",
        "ID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Page.SelectMasterPagePair",
      "displayName": null,
      "requiredParameters": [
        "OpenScoreID",
        "ScoreLayoutViewContainerID",
        "MasterPageAddressType",
        "ExtraPairPageDefinitionID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Page.SetFrameConstraints",
      "displayName": null,
      "requiredParameters": [
        "IsMasterPage",
        "LayoutID",
        "FrameChainDefinitionID",
        "IsLayoutSpecific",
        "PageIndex",
        "FrameIndexOnPage"
      ],
      "optionalParameters": [
        "Left",
        "Right",
        "Top",
        "Bottom",
        "Width",
        "Height"
      ]
    },
    {
      "name": "Page.SetLayoutPagePairDefinitionSetID",
      "displayName": null,
      "requiredParameters": [
        "PagePairDefinitionSetEntityID"
      ],
      "optionalParameters": [
        "LayoutID"
      ]
    },
    {
      "name": "Page.SetMusicFrameChainFilter",
      "displayName": null,
      "requiredParameters": [
        "IsMasterPage",
        "FrameChainDefinitionID",
        "IsLayoutSpecific",
        "LayoutID"
      ],
      "optionalParameters": [
        "FlowIDArray",
        "FrameFlowInclusionPolicy",
        "PlayerIDArray"
      ]
    },
    {
      "name": "Page.SetMusicFrameChainForFrame",
      "displayName": null,
      "requiredParameters": [
        "IsMasterPage",
        "FrameChainDefinitionID",
        "IsLayoutSpecific",
        "PageIndex",
        "FrameIndexOnPage",
        "LayoutID",
        "NewFrameChainDefinitionID",
        "NewIsLayoutSpecific"
      ],
      "optionalParameters": []
    },
    {
      "name": "Page.SetMusicFrameIndexForFrame",
      "displayName": null,
      "requiredParameters": [
        "IsMasterPage",
        "FrameChainDefinitionID",
        "IsLayoutSpecific",
        "PageIndex",
        "FrameIndexOnPage",
        "LayoutID",
        "NewFrameIndexOnPage"
      ],
      "optionalParameters": []
    },
    {
      "name": "Page.SetTextFlowContents",
      "displayName": "Set Text Flow Contents",
      "requiredParameters": [],
      "optionalParameters": [
        "TextFlowID",
        "Content"
      ]
    },
    {
      "name": "Page.SetTextFrameChainToDefaultContent",
      "displayName": "Set Text Frame Chain to Default Content",
      "requiredParameters": [],
      "optionalParameters": [
        "LayoutID",
        "FrameChainDefinitionID",
        "Content"
      ]
    },
    {
      "name": "Page.ShowFrameChainSelector",
      "displayName": "Show Frame Chain Selector",
      "requiredParameters": [],
      "optionalParameters": [
        "FrameChainDefinitionID",
        "IsLayoutSpecific",
        "PageIndex",
        "FrameIndexOnPage",
        "MasterPageAddressType",
        "ExtraPairPageDefinitionID",
        "X",
        "Y"
      ]
    },
    {
      "name": "Page.ShowFrameFlowSelector",
      "displayName": "Show Frame Flow Filter Selector",
      "requiredParameters": [],
      "optionalParameters": [
        "FrameChainDefinitionID",
        "IsLayoutSpecific",
        "PageIndex",
        "FrameIndexOnPage",
        "MasterPageAddressType",
        "ExtraPairPageDefinitionID",
        "X",
        "Y"
      ]
    },
    {
      "name": "Page.ShowFrameIndexSelector",
      "displayName": "Show Frame Index Selector",
      "requiredParameters": [],
      "optionalParameters": [
        "FrameChainDefinitionID",
        "IsLayoutSpecific",
        "PageIndex",
        "FrameIndexOnPage",
        "MasterPageAddressType",
        "ExtraPairPageDefinitionID",
        "X",
        "Y"
      ]
    },
    {
      "name": "Page.ShowFramePlayerSelector",
      "displayName": "Show Frame Player Filter Selector",
      "requiredParameters": [],
      "optionalParameters": [
        "FrameChainDefinitionID",
        "IsLayoutSpecific",
        "PageIndex",
        "FrameIndexOnPage",
        "MasterPageAddressType",
        "ExtraPairPageDefinitionID",
        "X",
        "Y"
      ]
    },
    {
      "name": "Page.ShowOpenDialogForGraphicFrame",
      "displayName": "Show Open Dialog for Graphic Frame",
      "requiredParameters": [],
      "optionalParameters": [
        "FrameChainDefinitionID",
        "IsLayoutSpecific",
        "PageIndex",
        "FrameIndexOnPage",
        "MasterPageAddressType",
        "ExtraPairPageDefinitionID"
      ]
    },
    {
      "name": "Page.ToggleFrameConstraints",
      "displayName": null,
      "requiredParameters": [
        "Side"
      ],
      "optionalParameters": []
    },
    {
      "name": "Page.UnlockLayout",
      "displayName": "Reset Layout",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.ActivateProject",
      "displayName": "Activate Project",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.AddFXSend",
      "displayName": "Add Effects Channel",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.ApplyDefaultGain",
      "displayName": "Apply Default Output Level",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.ApplyPlaybackTemplate",
      "displayName": "Playback Template...",
      "requiredParameters": [],
      "optionalParameters": [
        "PlaybackTemplateID"
      ]
    },
    {
      "name": "Play.ApplySpaceTemplate",
      "displayName": "Space Template...",
      "requiredParameters": [],
      "optionalParameters": [
        "SpaceTemplateID"
      ]
    },
    {
      "name": "Play.ApplyStageTemplate",
      "displayName": "Stage Template...",
      "requiredParameters": [],
      "optionalParameters": [
        "StageTemplateID"
      ]
    },
    {
      "name": "Play.AutomationDeleteAll",
      "displayName": "Delete All Automation",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.AutomationDeleteForInstruments",
      "displayName": "Delete All Automation For Instruments In Selection",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.AutomationDeleteForSelection",
      "displayName": "Delete All Automation For Selection",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.AutomationEditorSetTempoMaximumValue",
      "displayName": null,
      "requiredParameters": [
        "Value"
      ],
      "optionalParameters": []
    },
    {
      "name": "Play.AutomationPointMakeConstant",
      "displayName": "Make Points Constant",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.AutomationPointMakeLinear",
      "displayName": "Make Points Linear",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.ChangeMixerControl",
      "displayName": null,
      "requiredParameters": [
        "Type",
        "Value",
        "Channel"
      ],
      "optionalParameters": []
    },
    {
      "name": "Play.ChangePianoRollTimeEditMode",
      "displayName": null,
      "requiredParameters": [
        "Value"
      ],
      "optionalParameters": []
    },
    {
      "name": "Play.ClearPlaybackData",
      "displayName": "Clear Playback Data",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.DecreaseGridResolution",
      "displayName": "Decrease Key Editor Grid Resolution",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.DisableMIDIOut",
      "displayName": null,
      "requiredParameters": [
        "SlotID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Play.DuplicatePlugin",
      "displayName": "Duplicate Plug-in",
      "requiredParameters": [],
      "optionalParameters": [
        "SlotID"
      ]
    },
    {
      "name": "Play.EditPlaybackTechniques",
      "displayName": "Playback Techniques...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.EditRhythmicFeel",
      "displayName": "Edit Rhythmic Feel",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.EnableClick",
      "displayName": "Enable Click",
      "requiredParameters": [],
      "optionalParameters": [
        "Set"
      ]
    },
    {
      "name": "Play.EnableInsert",
      "displayName": null,
      "requiredParameters": [
        "Channel",
        "SlotID",
        "Value"
      ],
      "optionalParameters": []
    },
    {
      "name": "Play.EnableMIDIOut",
      "displayName": null,
      "requiredParameters": [
        "SlotID",
        "Device"
      ],
      "optionalParameters": []
    },
    {
      "name": "Play.EnablePlugin",
      "displayName": null,
      "requiredParameters": [
        "SlotID",
        "Value"
      ],
      "optionalParameters": []
    },
    {
      "name": "Play.EnableSend",
      "displayName": null,
      "requiredParameters": [
        "Channel",
        "SlotID",
        "Value"
      ],
      "optionalParameters": []
    },
    {
      "name": "Play.EndpointSetup",
      "displayName": "Endpoint Setup...",
      "requiredParameters": [
        "SlotID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Play.FixedTempoMode",
      "displayName": "Fixed Tempo",
      "requiredParameters": [],
      "optionalParameters": [
        "Set"
      ]
    },
    {
      "name": "Play.Forward",
      "displayName": "Fast-forward",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.IncreaseGridResolution",
      "displayName": "Increase Key Editor Grid Resolution",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.KeyEditorMakeTrackSelectionFromSelection",
      "displayName": "Lock Key Editor to Selection",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.KeyEditorToggleLockedView",
      "displayName": "Toggle Key Editor Locked View",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.LaneSizeDecrease",
      "displayName": "Decrease Lane Size",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.LaneSizeIncrease",
      "displayName": "Increase Lane Size",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.LoadInsert",
      "displayName": null,
      "requiredParameters": [
        "Channel",
        "SlotID",
        "VSTPluginID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Play.LoadPlugin",
      "displayName": null,
      "requiredParameters": [
        "SlotID",
        "VSTPluginID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Play.LoadPluginPreset",
      "displayName": null,
      "requiredParameters": [
        "SlotID",
        "MIDIPort",
        "MIDIChannel",
        "PresetURI"
      ],
      "optionalParameters": []
    },
    {
      "name": "Play.LoadUnassignedSounds",
      "displayName": "Load Sounds For Unassigned Instruments",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.MovePlayheadToFlowPosition",
      "displayName": "Move playhead to position in flow",
      "requiredParameters": [
        "FlowID",
        "RhythmicPosition"
      ],
      "optionalParameters": []
    },
    {
      "name": "Play.NextFrame",
      "displayName": "Next frame",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.PercussionEditorSetKitComponentGridResolution",
      "displayName": null,
      "requiredParameters": [
        "InstrumentID",
        "GridResolution"
      ],
      "optionalParameters": []
    },
    {
      "name": "Play.PercussionKitSetDisclosed",
      "displayName": null,
      "requiredParameters": [
        "InstrumentID",
        "Disclosed"
      ],
      "optionalParameters": []
    },
    {
      "name": "Play.PianoRollEventsDeleted",
      "displayName": null,
      "requiredParameters": [
        "Action",
        "Addresses",
        "SelectionID",
        "LayoutID"
      ],
      "optionalParameters": [
        "SubElementID"
      ]
    },
    {
      "name": "Play.PianoRollEventsSelected",
      "displayName": null,
      "requiredParameters": [
        "Action",
        "Addresses",
        "SelectionID",
        "LayoutID"
      ],
      "optionalParameters": [
        "Clear",
        "SubElementID"
      ]
    },
    {
      "name": "Play.PianoRollMoveEvent",
      "displayName": null,
      "requiredParameters": [
        "AddressesAndPositions",
        "Mode"
      ],
      "optionalParameters": []
    },
    {
      "name": "Play.PianoRollMuteEvent",
      "displayName": null,
      "requiredParameters": [
        "Address",
        "Value"
      ],
      "optionalParameters": []
    },
    {
      "name": "Play.PianoRollNoteOffsetChange",
      "displayName": null,
      "requiredParameters": [
        "AddressesAndPositions",
        "Direction",
        "Mode"
      ],
      "optionalParameters": []
    },
    {
      "name": "Play.PluginRackCommand",
      "displayName": "Plug-in Rack",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.PreviousFrame",
      "displayName": "Previous frame",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.Record",
      "displayName": "Record",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.Refresh",
      "displayName": "Refresh",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.RemoveFXSend",
      "displayName": "Remove Effects Channel",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.RemoveLoadInsert",
      "displayName": null,
      "requiredParameters": [
        "Channel",
        "SlotID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Play.RemovePlugin",
      "displayName": null,
      "requiredParameters": [
        "SlotID"
      ],
      "optionalParameters": [
        "AlsoDelete"
      ]
    },
    {
      "name": "Play.ResetPlaybackOverrides",
      "displayName": "Reset Playback Overrides",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.ResetSoundsMobile",
      "displayName": null,
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.RetrospectiveRecord",
      "displayName": "Retrospective Record",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.Rewind",
      "displayName": "Rewind",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.SaveAutomationEditorConfiguration",
      "displayName": null,
      "requiredParameters": [],
      "optionalParameters": [
        "Name"
      ]
    },
    {
      "name": "Play.SavePlaybackTemplate",
      "displayName": "Save Endpoint Configuration for All Plug-ins",
      "requiredParameters": [],
      "optionalParameters": [
        "Set"
      ]
    },
    {
      "name": "Play.SavePlaybackTemplateForEndpoint",
      "displayName": "Save Endpoint Configuration",
      "requiredParameters": [],
      "optionalParameters": [
        "Set"
      ]
    },
    {
      "name": "Play.SetChordEndpoint",
      "displayName": null,
      "requiredParameters": [
        "Endpoint"
      ],
      "optionalParameters": []
    },
    {
      "name": "Play.SetClickEndpoint",
      "displayName": null,
      "requiredParameters": [
        "Endpoint"
      ],
      "optionalParameters": []
    },
    {
      "name": "Play.SetEndpoint",
      "displayName": null,
      "requiredParameters": [
        "InstrumentID",
        "TechniqueID",
        "Endpoint"
      ],
      "optionalParameters": [
        "EventStreamID"
      ]
    },
    {
      "name": "Play.SetEndpointExpressionMap",
      "displayName": null,
      "requiredParameters": [
        "Endpoint",
        "Value"
      ],
      "optionalParameters": []
    },
    {
      "name": "Play.SetEndpointPercussionMap",
      "displayName": null,
      "requiredParameters": [
        "Endpoint",
        "Value"
      ],
      "optionalParameters": []
    },
    {
      "name": "Play.SetFixedTempo",
      "displayName": "Fixed Tempo",
      "requiredParameters": [
        "Value"
      ],
      "optionalParameters": []
    },
    {
      "name": "Play.SetIRVState",
      "displayName": null,
      "requiredParameters": [
        "InstrumentID",
        "Value"
      ],
      "optionalParameters": []
    },
    {
      "name": "Play.SetKeyEditorTool1",
      "displayName": "Key Editor Tool 1",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.SetKeyEditorTool2",
      "displayName": "Key Editor Tool 2",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.SetKeyEditorTool3",
      "displayName": "Key Editor Tool 3",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.SetKeyEditorTool4",
      "displayName": "Key Editor Tool 4",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.SetKeyEditorTool5",
      "displayName": "Key Editor Tool 5",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.SetKeyEditorTool6",
      "displayName": "Key Editor Tool 6",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.SetMixerChannelName",
      "displayName": null,
      "requiredParameters": [
        "Channel",
        "Name"
      ],
      "optionalParameters": []
    },
    {
      "name": "Play.SetMixerSectionVisibility",
      "displayName": null,
      "requiredParameters": [
        "Type",
        "Value"
      ],
      "optionalParameters": []
    },
    {
      "name": "Play.SetMixerStripVisibility",
      "displayName": null,
      "requiredParameters": [
        "Type",
        "Value"
      ],
      "optionalParameters": []
    },
    {
      "name": "Play.SetPlaybackOptions",
      "displayName": null,
      "requiredParameters": [
        "Dictionary",
        "OpenScoreID"
      ],
      "optionalParameters": [
        "Set"
      ]
    },
    {
      "name": "Play.SetPlayheadTo",
      "displayName": "Move Playhead to",
      "requiredParameters": [
        "PlayFromLocation"
      ],
      "optionalParameters": []
    },
    {
      "name": "Play.SetPlayheadToFlowStart",
      "displayName": "Move Playhead to Start of Flow",
      "requiredParameters": [],
      "optionalParameters": [
        "FlowID"
      ]
    },
    {
      "name": "Play.SetSendDestination",
      "displayName": null,
      "requiredParameters": [
        "Channel",
        "SlotID",
        "Destination"
      ],
      "optionalParameters": []
    },
    {
      "name": "Play.SetTool",
      "displayName": "Set Tool",
      "requiredParameters": [
        "ToolName"
      ],
      "optionalParameters": []
    },
    {
      "name": "Play.SetupExpressionMaps",
      "displayName": "Expression Maps...",
      "requiredParameters": [],
      "optionalParameters": [
        "Endpoint"
      ]
    },
    {
      "name": "Play.SetupPercussionMaps",
      "displayName": "Percussion Maps...",
      "requiredParameters": [],
      "optionalParameters": [
        "Endpoint"
      ]
    },
    {
      "name": "Play.SetupPluginPlayingTechniques",
      "displayName": "Setup Plug-in Playing Techniques...",
      "requiredParameters": [],
      "optionalParameters": [
        "SlotID"
      ]
    },
    {
      "name": "Play.ShowChordTrack",
      "displayName": "Chord Track",
      "requiredParameters": [],
      "optionalParameters": [
        "Show"
      ]
    },
    {
      "name": "Play.ShowInsert",
      "displayName": null,
      "requiredParameters": [
        "Channel",
        "SlotID"
      ],
      "optionalParameters": [
        "Show"
      ]
    },
    {
      "name": "Play.ShowLiveSpaceEditor",
      "displayName": null,
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.ShowLiveStage",
      "displayName": null,
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.ShowMarkerTrack",
      "displayName": "Marker Track",
      "requiredParameters": [],
      "optionalParameters": [
        "Show"
      ]
    },
    {
      "name": "Play.ShowPlaybackOptions",
      "displayName": "Playback Options...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.ShowPlugin",
      "displayName": null,
      "requiredParameters": [
        "SlotID"
      ],
      "optionalParameters": [
        "Show"
      ]
    },
    {
      "name": "Play.ShowPluginWindowForSelection",
      "displayName": "Show VST Plug-in Window For Selected Staff",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.ShowTimeTrack",
      "displayName": "Time Track",
      "requiredParameters": [],
      "optionalParameters": [
        "Show"
      ]
    },
    {
      "name": "Play.ShowVideoTrack",
      "displayName": "Video Track",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.SoloFromSelection",
      "displayName": "Solo Selected Instruments",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.StartOrStop",
      "displayName": "Start or Stop Playback",
      "requiredParameters": [],
      "optionalParameters": [
        "PlayFromLocation"
      ]
    },
    {
      "name": "Play.Stop",
      "displayName": "Stop Playback",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.ToggleScrubPlayback",
      "displayName": "Toggle Scrub Playback",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.ToggleSnapToGrid",
      "displayName": null,
      "requiredParameters": [
        "Set"
      ],
      "optionalParameters": []
    },
    {
      "name": "Play.UnMuteAll",
      "displayName": "Deactivate All Mute States",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Play.UnSoloAll",
      "displayName": "Deactivate All Solo States",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Print.ExportAllLayoutsAsPDF",
      "displayName": "Export All Layouts as PDF",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Print.ExportCurrentLayoutAsPDF",
      "displayName": "Export Current Layout as PDF",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Print.ExportCurrentPageAsPDF",
      "displayName": "Export Current Page as PDF",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Print.InitiatePrintingRequest",
      "displayName": null,
      "requiredParameters": [
        "OpenScoreID",
        "LayoutID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Print.LayoutsPanelSelectAll",
      "displayName": "Select All Layouts",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Print.PrintCurrentLayout",
      "displayName": "Print Current Layout",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Print.PrintCurrentPage",
      "displayName": "Print Current Page",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Print.PrintPreviewEnd",
      "displayName": "Print Preview Last Page",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Print.PrintPreviewHome",
      "displayName": "Print Preview First Page",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Print.PrintPreviewPageDown",
      "displayName": "Print Preview Page Down",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Print.PrintPreviewPageUp",
      "displayName": "Print Preview Page Up",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Print.PrintPreviewZoomLevelType",
      "displayName": "Print Preview Zoom Level",
      "requiredParameters": [
        "ZoomLevelType"
      ],
      "optionalParameters": []
    },
    {
      "name": "Print.UpdatePrintPreview",
      "displayName": null,
      "requiredParameters": [
        "OpenScoreID",
        "ScoreLayoutViewContainerID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.DontShowChordDiagrams",
      "displayName": "No Chord Diagrams",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Project.EditInstrumentFamilies",
      "displayName": "Instrument Families...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Project.EditInstrumentScoreOrder",
      "displayName": "Instrument Score Orders...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Project.EditInstruments",
      "displayName": "Instruments...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Project.Ensemble.Choose",
      "displayName": "Add Ensemble...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Project.Ensemble.New",
      "displayName": "Add Ensemble to Score",
      "requiredParameters": [
        "EnsembleEntityID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.ExportLibrary",
      "displayName": "Export Library...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Project.Flow.InitiateRename",
      "displayName": "Rename",
      "requiredParameters": [
        "FlowID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Flow.New",
      "displayName": "New Flow",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Project.Flow.NotationOptions",
      "displayName": "Notation Options...",
      "requiredParameters": [],
      "optionalParameters": [
        "FlowID",
        "FlowIDArray",
        "EventType"
      ]
    },
    {
      "name": "Project.Flow.Rename",
      "displayName": "Rename Flow",
      "requiredParameters": [
        "FlowID"
      ],
      "optionalParameters": [
        "Name"
      ]
    },
    {
      "name": "Project.Flow.SetNotationOptions",
      "displayName": null,
      "requiredParameters": [
        "FlowIDArray",
        "Dictionary",
        "OpenScoreID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Flows.Delete",
      "displayName": "Delete Flow",
      "requiredParameters": [
        "FlowIDArray"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Flows.Duplicate",
      "displayName": "Duplicate Flow",
      "requiredParameters": [],
      "optionalParameters": [
        "FlowIDArray"
      ]
    },
    {
      "name": "Project.Flows.ExcludePlayers",
      "displayName": "Exclude Player from Flow",
      "requiredParameters": [
        "FlowIDArray",
        "PlayerIDArray"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Flows.IncludePlayers",
      "displayName": "Include Player in Flow",
      "requiredParameters": [
        "FlowIDArray",
        "PlayerIDArray"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Flows.MoveLeftOne",
      "displayName": "Move Flows One to the Left",
      "requiredParameters": [
        "FlowIDArray"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Flows.MoveRightOne",
      "displayName": "Move Flows One to the Right",
      "requiredParameters": [
        "FlowIDArray"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Flows.MoveToEnd",
      "displayName": "Move Flows to End",
      "requiredParameters": [
        "FlowIDArray"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Flows.MoveToStart",
      "displayName": "Move Flows to Start",
      "requiredParameters": [
        "FlowIDArray"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Flows.Reorder",
      "displayName": null,
      "requiredParameters": [
        "FlowIDArray"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.ImportLibrary",
      "displayName": "Import Library...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Project.Instrument.Change",
      "displayName": "Change Instrument",
      "requiredParameters": [
        "InstrumentID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Instrument.CopyToPlayer",
      "displayName": "Copy To Player",
      "requiredParameters": [
        "InstrumentID",
        "SourcePlayerID",
        "DestinationPlayerID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Instrument.CreateEmptyKit",
      "displayName": "Create Empty Kit",
      "requiredParameters": [
        "PlayerID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Instrument.Delete",
      "displayName": "Delete Instrument",
      "requiredParameters": [],
      "optionalParameters": [
        "InstrumentID",
        "InstrumentIDArray"
      ]
    },
    {
      "name": "Project.Instrument.EditDefinition",
      "displayName": "Edit Instrument Definition...",
      "requiredParameters": [
        "InstrumentID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Instrument.EditPercussionKit",
      "displayName": "Edit Percussion Kit...",
      "requiredParameters": [
        "InstrumentID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Instrument.EditPlayingTechniquePresentation",
      "displayName": "Edit Percussion Playing Techniques...",
      "requiredParameters": [
        "InstrumentID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Instrument.EditStringsAndTuning",
      "displayName": "Edit Strings and Tuning...",
      "requiredParameters": [
        "InstrumentID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Instrument.ImportKitfromLibrary",
      "displayName": "Import Kit...",
      "requiredParameters": [
        "PlayerID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Instrument.InitiateEditNames",
      "displayName": "Edit Names...",
      "requiredParameters": [
        "InstrumentID",
        "PlayerID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Instrument.MoveToPlayer",
      "displayName": "Move To Player",
      "requiredParameters": [
        "InstrumentID",
        "SourcePlayerID",
        "DestinationPlayerID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Instrument.New",
      "displayName": "Add Instrument to Player...",
      "requiredParameters": [],
      "optionalParameters": [
        "PlayerID"
      ]
    },
    {
      "name": "Project.Instruments.CombineIntoKit",
      "displayName": "Combine Instruments Into Kit",
      "requiredParameters": [
        "PlayerID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Instruments.Renumber",
      "displayName": "Renumber Instruments",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Project.Instruments.Reorder",
      "displayName": "Reorder Instruments",
      "requiredParameters": [
        "InstrumentIDArray"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Layout.AllPartOptions",
      "displayName": "All Part Layout Options...",
      "requiredParameters": [],
      "optionalParameters": [
        "LayoutIDArray"
      ]
    },
    {
      "name": "Project.Layout.AllScoreOptions",
      "displayName": "All Score Layout Options...",
      "requiredParameters": [],
      "optionalParameters": [
        "LayoutIDArray"
      ]
    },
    {
      "name": "Project.Layout.InitiateRename",
      "displayName": "Rename",
      "requiredParameters": [
        "LayoutID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Layout.New",
      "displayName": "New Layout",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Project.Layout.NewDefaultParts",
      "displayName": "Create Default Part Layouts",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Project.Layout.NumberChange",
      "displayName": "Change Layout Number",
      "requiredParameters": [
        "LayoutID",
        "Value"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Layout.Options",
      "displayName": "Layout Options...",
      "requiredParameters": [],
      "optionalParameters": [
        "LayoutIDArray"
      ]
    },
    {
      "name": "Project.Layout.Rename",
      "displayName": "Rename Layout",
      "requiredParameters": [
        "LayoutID"
      ],
      "optionalParameters": [
        "Name"
      ]
    },
    {
      "name": "Project.Layout.ResetName",
      "displayName": "Reset Layout Name",
      "requiredParameters": [
        "LayoutID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Layout.SetOptions",
      "displayName": null,
      "requiredParameters": [
        "Dictionary"
      ],
      "optionalParameters": [
        "LayoutIDArray",
        "Set",
        "OpenScoreID",
        "PageDimensionsPresetEntityID"
      ]
    },
    {
      "name": "Project.Layouts.ClefAndTranspositionOverrides",
      "displayName": "Clef and Transposition Overrides...",
      "requiredParameters": [],
      "optionalParameters": [
        "LayoutID"
      ]
    },
    {
      "name": "Project.Layouts.Delete",
      "displayName": "Delete Layout",
      "requiredParameters": [],
      "optionalParameters": [
        "LayoutIDArray"
      ]
    },
    {
      "name": "Project.Layouts.Duplicate",
      "displayName": "Duplicate Layout",
      "requiredParameters": [],
      "optionalParameters": [
        "LayoutIDArray"
      ]
    },
    {
      "name": "Project.Layouts.ExcludeFlows",
      "displayName": "Exclude Flow from Layout",
      "requiredParameters": [
        "LayoutIDArray",
        "FlowIDArray"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Layouts.ExcludePlayers",
      "displayName": "Exclude Player from Layout",
      "requiredParameters": [
        "LayoutIDArray",
        "PlayerIDArray"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Layouts.IncludeAllFlows",
      "displayName": "Include All Flows in this Layout",
      "requiredParameters": [
        "LayoutID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Layouts.IncludeFlows",
      "displayName": "Include Flow in Layout",
      "requiredParameters": [
        "LayoutIDArray",
        "FlowIDArray"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Layouts.IncludePlayers",
      "displayName": "Include Player in Layout",
      "requiredParameters": [
        "LayoutIDArray",
        "PlayerIDArray"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Layouts.MoveDownOne",
      "displayName": "Move Layouts Down One",
      "requiredParameters": [
        "LayoutIDArray"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Layouts.MoveToBottom",
      "displayName": "Move Layouts to Bottom",
      "requiredParameters": [
        "LayoutIDArray"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Layouts.MoveToTop",
      "displayName": "Move Layouts to Top",
      "requiredParameters": [
        "LayoutIDArray"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Layouts.MoveUpOne",
      "displayName": "Move Layouts Up One",
      "requiredParameters": [
        "LayoutIDArray"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Layouts.PropagateFormatting",
      "displayName": "Propagate Part Formatting...",
      "requiredParameters": [],
      "optionalParameters": [
        "LayoutIDArray"
      ]
    },
    {
      "name": "Project.Layouts.RemoveAllFlows",
      "displayName": "Remove All Flows from this Layout",
      "requiredParameters": [
        "LayoutID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Layouts.Renumber",
      "displayName": "Renumber Layouts",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Project.Layouts.Reorder",
      "displayName": null,
      "requiredParameters": [
        "LayoutIDArray"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Layouts.Sort",
      "displayName": "Sort Layouts",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Project.Player.AddToAllFlows",
      "displayName": "Include Player in All Flows",
      "requiredParameters": [
        "PlayerID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Player.AddToAllLayouts",
      "displayName": "Include Player in All Layouts",
      "requiredParameters": [
        "PlayerID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Player.AddToGroup",
      "displayName": "Add Player to Group",
      "requiredParameters": [
        "PlayerID",
        "PlayerGroupID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Player.AddToNewGroup",
      "displayName": "Add Player to New Group",
      "requiredParameters": [
        "PlayerID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Player.ChooseTranspositionForCapoChordSymbols",
      "displayName": "Capo Chord Symbol Definition...",
      "requiredParameters": [],
      "optionalParameters": [
        "PlayerID"
      ]
    },
    {
      "name": "Project.Player.Duplicate",
      "displayName": "Duplicate Player",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Project.Player.Edit",
      "displayName": "Edit Player",
      "requiredParameters": [
        "PlayerID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Player.InitiateRename",
      "displayName": "Rename",
      "requiredParameters": [
        "PlayerID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Player.NavigateToNextItem",
      "displayName": "Move to next Player Item",
      "requiredParameters": [
        "PlayerID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Player.NavigateToPrevItem",
      "displayName": "Move to previous Player Item",
      "requiredParameters": [
        "PlayerID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Player.OpenAddInstrumentPopup",
      "displayName": "Show Add Instrument Popover",
      "requiredParameters": [
        "PlayerID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Player.RemoveFromAllFlows",
      "displayName": "Remove Player from All Flows",
      "requiredParameters": [
        "PlayerID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Player.RemoveFromAllLayouts",
      "displayName": "Remove Player from All Layouts",
      "requiredParameters": [
        "PlayerID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Player.RemoveFromGroup",
      "displayName": "Remove Player from Group",
      "requiredParameters": [
        "PlayerID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Player.Rename",
      "displayName": "Rename Player",
      "requiredParameters": [
        "PlayerID"
      ],
      "optionalParameters": [
        "Name",
        "ShortName"
      ]
    },
    {
      "name": "Project.Player.ResetName",
      "displayName": "Reset Player Name",
      "requiredParameters": [
        "PlayerID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Player.SetAsSoloist",
      "displayName": "Soloist",
      "requiredParameters": [
        "PlayerID"
      ],
      "optionalParameters": [
        "Set"
      ]
    },
    {
      "name": "Project.Player.SetCapoChordSymbolVisibility",
      "displayName": "Capo Chord Symbol Visibility for Player",
      "requiredParameters": [],
      "optionalParameters": [
        "PlayerID",
        "FlowID",
        "CapoChordSymbolInstrumentVisibility"
      ]
    },
    {
      "name": "Project.Player.SetChordSymbolVisibility",
      "displayName": "Chord Symbol Visibility for Player",
      "requiredParameters": [],
      "optionalParameters": [
        "PlayerID",
        "FlowID",
        "ChordSymbolInstrumentVisibility",
        "ChordSymbolLayoutVisibility"
      ]
    },
    {
      "name": "Project.Player.SetTranspositionForCapoChordSymbols",
      "displayName": "Set Capo Chord Symbol Definition",
      "requiredParameters": [
        "PlayerID",
        "Value"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.PlayerGroup.New",
      "displayName": "New Player Group",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Project.PlayerGroup.Rename",
      "displayName": "Rename Player Group",
      "requiredParameters": [
        "PlayerGroupID",
        "Name"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.PlayerGroupRenameShowDialog",
      "displayName": "Rename Player Group...",
      "requiredParameters": [],
      "optionalParameters": [
        "PlayerGroupID"
      ]
    },
    {
      "name": "Project.PlayerGroups.Delete",
      "displayName": "Delete Player Group",
      "requiredParameters": [
        "PlayerGroupIDArray",
        "DeletePlayersWithGroup"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.PlayerGroups.Move",
      "displayName": "Move Player Groups",
      "requiredParameters": [
        "PlayerGroupIDArray",
        "DestinationIndex",
        "InsertBeforePlayerGroupID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.PlayerGroups.MoveDownOneIndex",
      "displayName": "Move Player Groups Down One",
      "requiredParameters": [
        "PlayerGroupIDArray"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.PlayerGroups.MoveToBottomOfList",
      "displayName": "Move Player Groups To Bottom",
      "requiredParameters": [
        "PlayerGroupIDArray"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.PlayerGroups.MoveToTopOfList",
      "displayName": "Move Player Groups To Top",
      "requiredParameters": [
        "PlayerGroupIDArray"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.PlayerGroups.MoveUpOneIndex",
      "displayName": "Move Player Groups Up One",
      "requiredParameters": [
        "PlayerGroupIDArray"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.PlayerRenameShowDialog",
      "displayName": "Rename Player...",
      "requiredParameters": [],
      "optionalParameters": [
        "PlayerID"
      ]
    },
    {
      "name": "Project.Players.Delete",
      "displayName": "Delete Player",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Project.Players.DeleteEmpty",
      "displayName": "Delete Empty Players...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Project.Players.Move",
      "displayName": "Move Players",
      "requiredParameters": [
        "PlayerIDArray",
        "PlayerGroupID",
        "PlayerID",
        "InsertBeforePlayerGroupID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Players.MoveDownOne",
      "displayName": "Move Players Down One",
      "requiredParameters": [
        "PlayerIDArray"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Players.MoveToBottom",
      "displayName": "Move Players to Bottom",
      "requiredParameters": [
        "PlayerIDArray"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Players.MoveToTop",
      "displayName": "Move Players to Top",
      "requiredParameters": [
        "PlayerIDArray"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Players.MoveUpOne",
      "displayName": "Move Players Up One",
      "requiredParameters": [
        "PlayerIDArray"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.Players.Sort",
      "displayName": "Sort Players",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Project.SectionPlayer.New",
      "displayName": "New Section Player...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Project.SetInstrumentScoreOrder",
      "displayName": "Set Instrument Score Order",
      "requiredParameters": [],
      "optionalParameters": [
        "InstrumentScoreOrderEntityID"
      ]
    },
    {
      "name": "Project.SetLayoutSortOrder",
      "displayName": "Set Layout Sort Order",
      "requiredParameters": [
        "LayoutSortOrder"
      ],
      "optionalParameters": []
    },
    {
      "name": "Project.ShowLibraryImportExportDialog",
      "displayName": "Library Manager...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Project.SoloPlayer.New",
      "displayName": "New Single Player...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Project.Statistics",
      "displayName": "Project Statistics...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Script.AttachDebugger",
      "displayName": "Attach Debugger",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Script.EndRecordingMacro",
      "displayName": "End Recording Macro",
      "requiredParameters": [],
      "optionalParameters": [
        "File"
      ]
    },
    {
      "name": "Script.RunLastScript",
      "displayName": "Run Last Script",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Script.RunScript",
      "displayName": "Run Script...",
      "requiredParameters": [],
      "optionalParameters": [
        "ScriptPath",
        "ShowConsole"
      ]
    },
    {
      "name": "Script.ShowConsole",
      "displayName": "Console",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Script.StartRecordingMacro",
      "displayName": "Start Recording Macro",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "ScrubPlayback.StepBackwards",
      "displayName": "Scrub Backwards",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "ScrubPlayback.StepForwards",
      "displayName": "Scrub Forwards",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "SetChordDiagramTuning",
      "displayName": null,
      "requiredParameters": [
        "FrettedInstrumentDataEntityID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Setup.Delete",
      "displayName": "Delete Player/Instrument/Flow/Layout",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Setup.Insert",
      "displayName": "Insert Player/Instrument/Flow/Layout",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Setup.MoveDown",
      "displayName": "Move Player Down",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Setup.MoveLeft",
      "displayName": "Move Flow Left",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Setup.MoveRight",
      "displayName": "Move Flow Right",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Setup.MoveToBottom",
      "displayName": "Move Player to Bottom",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Setup.MoveToEnd",
      "displayName": "Move Flow to End",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Setup.MoveToStart",
      "displayName": "Move Flow to Start",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Setup.MoveToTop",
      "displayName": "Move Player to Top",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Setup.MoveUp",
      "displayName": "Move Player Up",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "TextEditor.ConvertUnicode",
      "displayName": "Convert To/From Unicode Code Point",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "TextEditor.DecreaseFontSize",
      "displayName": "Decrease Font Size",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "TextEditor.IncreaseFontSize",
      "displayName": "Increase Font Size",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "TextEditor.OpenMusicTextDialog",
      "displayName": "Insert Music Text...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "TextEditor.ToggleBold",
      "displayName": "Toggle Bold",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "TextEditor.ToggleItalic",
      "displayName": "Toggle Italic",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "TextEditor.ToggleUnderline",
      "displayName": "Toggle Underline",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "UI.Escape",
      "displayName": "Escape",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "UI.InvokePaletteButton",
      "displayName": null,
      "requiredParameters": [
        "PaletteIndicatorID",
        "PaletteSectionID"
      ],
      "optionalParameters": [
        "PropertyButton"
      ]
    },
    {
      "name": "UI.InvokePaletteEditorButton",
      "displayName": null,
      "requiredParameters": [
        "PaletteEditorID",
        "ButtonID"
      ],
      "optionalParameters": []
    },
    {
      "name": "UI.InvokePaletteEditorCreateButton",
      "displayName": null,
      "requiredParameters": [
        "PaletteEditorID",
        "PaletteSectionID"
      ],
      "optionalParameters": []
    },
    {
      "name": "UI.InvokePropertyChangeValue",
      "displayName": null,
      "requiredParameters": [
        "Type",
        "Value"
      ],
      "optionalParameters": []
    },
    {
      "name": "UI.InvokePropertyEnableSwitch",
      "displayName": null,
      "requiredParameters": [
        "Type",
        "Value"
      ],
      "optionalParameters": []
    },
    {
      "name": "UI.SetDefaultMouseClickTool",
      "displayName": null,
      "requiredParameters": [
        "ToolType"
      ],
      "optionalParameters": []
    },
    {
      "name": "UI.SetFocus",
      "displayName": "Set Focus",
      "requiredParameters": [],
      "optionalParameters": [
        "Value"
      ]
    },
    {
      "name": "UI.SetLayoutWidthInternal",
      "displayName": null,
      "requiredParameters": [
        "Width",
        "ScoreLayoutViewID",
        "OpenScoreID"
      ],
      "optionalParameters": []
    },
    {
      "name": "UI.ShowJumpBar",
      "displayName": "Show Jump Bar",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "UI.ShowJumpBarCommandsMode",
      "displayName": "Show Jump Bar in Commands Mode",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "UI.ShowJumpBarGotoMode",
      "displayName": "Show Jump Bar in Goto Mode",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "UI.ToggleDefaultMouseClickTool",
      "displayName": "Toggle between Hand and Marquee Tool",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Video.AttachVideo",
      "displayName": "Attach...",
      "requiredParameters": [],
      "optionalParameters": [
        "FlowID",
        "Position",
        "File"
      ]
    },
    {
      "name": "Video.DetachVideo",
      "displayName": "Detach",
      "requiredParameters": [],
      "optionalParameters": [
        "FlowID"
      ]
    },
    {
      "name": "Video.Properties",
      "displayName": "Properties...",
      "requiredParameters": [],
      "optionalParameters": [
        "FlowID"
      ]
    },
    {
      "name": "Video.SetAttachmentPosition",
      "displayName": "Set Attachment Position",
      "requiredParameters": [
        "FlowID",
        "Position"
      ],
      "optionalParameters": []
    },
    {
      "name": "Video.ShowWindow",
      "displayName": "Video",
      "requiredParameters": [],
      "optionalParameters": [
        "Show"
      ]
    },
    {
      "name": "View.CentreSelection",
      "displayName": "Center Selection",
      "requiredParameters": [],
      "optionalParameters": [
        "Force"
      ]
    },
    {
      "name": "View.FullScreen",
      "displayName": "Full Screen",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "View.MoveViewportDown",
      "displayName": "Move View Down",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "View.MoveViewportLeft",
      "displayName": "Move View Left",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "View.MoveViewportNextPage",
      "displayName": "Move View to Next Page",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "View.MoveViewportNextSpread",
      "displayName": "Move View to Next Spread",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "View.MoveViewportPreviousPage",
      "displayName": "Move View to Previous Page",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "View.MoveViewportPreviousSpread",
      "displayName": "Move View to Previous Spread",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "View.MoveViewportRight",
      "displayName": "Move View Right",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "View.MoveViewportToEnd",
      "displayName": "Move View to End",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "View.MoveViewportToStart",
      "displayName": "Move View to Start",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "View.MoveViewportUp",
      "displayName": "Move View Up",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "View.SetAllSignpostFlagTypesHidden",
      "displayName": "Set All Signposts Hidden",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "View.SetAllSignpostFlagTypesShown",
      "displayName": "Set All Signposts Shown",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "View.SetBarNumbersShownInLayoutAspectType",
      "displayName": "Bar Numbers",
      "requiredParameters": [
        "LayoutAspectType"
      ],
      "optionalParameters": [
        "Set"
      ]
    },
    {
      "name": "View.SetNoteColoursOptions",
      "displayName": "Note And Rest Colors",
      "requiredParameters": [
        "NoteColoursType"
      ],
      "optionalParameters": [
        "Set"
      ]
    },
    {
      "name": "View.SetPagePositionPolicy",
      "displayName": null,
      "requiredParameters": [
        "PagePositionPolicy"
      ],
      "optionalParameters": []
    },
    {
      "name": "View.SetSignpostFlagTypeShown",
      "displayName": null,
      "requiredParameters": [
        "SignpostFlagType"
      ],
      "optionalParameters": [
        "Set"
      ]
    },
    {
      "name": "View.ShowSystemTrack",
      "displayName": "System Track",
      "requiredParameters": [],
      "optionalParameters": [
        "ShowSystemTrack"
      ]
    },
    {
      "name": "View.ToggleAttachmentLines",
      "displayName": "Attachment Lines",
      "requiredParameters": [],
      "optionalParameters": [
        "AttachmentLinesShown"
      ]
    },
    {
      "name": "View.ToggleCautionaryAccidentals",
      "displayName": "Cautionary Accidentals",
      "requiredParameters": [],
      "optionalParameters": [
        "ShowCautionaryAccidentals"
      ]
    },
    {
      "name": "View.ToggleForcedAccidentals",
      "displayName": "Forced Accidentals",
      "requiredParameters": [],
      "optionalParameters": [
        "ShowForcedAccidentals"
      ]
    },
    {
      "name": "View.ToggleHighlightBarRepeatRegions",
      "displayName": "Highlight Bar Repeat Regions",
      "requiredParameters": [],
      "optionalParameters": [
        "HighlightBarRepeatRegions"
      ]
    },
    {
      "name": "View.ToggleHighlightChordSymbolVisibilityRegions",
      "displayName": "Highlight MIDI Trigger Regions",
      "requiredParameters": [],
      "optionalParameters": [
        "HighlightChordSymbolVisibilityRegions"
      ]
    },
    {
      "name": "View.ToggleHighlightCues",
      "displayName": "Highlight Cues",
      "requiredParameters": [],
      "optionalParameters": [
        "HighlightCues"
      ]
    },
    {
      "name": "View.ToggleHighlightMIDITriggerRegions",
      "displayName": null,
      "requiredParameters": [],
      "optionalParameters": [
        "HighlightMIDITriggerRegions"
      ]
    },
    {
      "name": "View.ToggleHighlightSlashRegions",
      "displayName": "Highlight Slash Regions",
      "requiredParameters": [],
      "optionalParameters": [
        "HighlightSlashRegions"
      ]
    },
    {
      "name": "View.ToggleShowComments",
      "displayName": "Comments",
      "requiredParameters": [],
      "optionalParameters": [
        "ShowComments"
      ]
    },
    {
      "name": "View.ToggleShowCondensedMusicInGrey",
      "displayName": "Show Condensed Music in Gray",
      "requiredParameters": [],
      "optionalParameters": [
        "ShowCondensedMusicInGrey"
      ]
    },
    {
      "name": "View.ToggleShowCrosshairWhenDragging",
      "displayName": null,
      "requiredParameters": [],
      "optionalParameters": [
        "ShowCrosshairWhenDragging"
      ]
    },
    {
      "name": "View.ToggleShowCrosshairWithSelection",
      "displayName": null,
      "requiredParameters": [],
      "optionalParameters": [
        "ShowCrosshairWithSelection"
      ]
    },
    {
      "name": "View.ToggleShowCuesInGrey",
      "displayName": "Show Cues in Gray",
      "requiredParameters": [],
      "optionalParameters": [
        "ShowCuesInGrey"
      ]
    },
    {
      "name": "View.ToggleShowDivisiUnisonInGrey",
      "displayName": "Show Divisi Unison Ranges in Gray",
      "requiredParameters": [],
      "optionalParameters": [
        "ShowDivisiUnisonInGrey"
      ]
    },
    {
      "name": "View.ToggleShowHiddenNoteheadsInGrey",
      "displayName": "Show Hidden Noteheads in Gray",
      "requiredParameters": [],
      "optionalParameters": [
        "ShowHiddenNoteheadsInGrey"
      ]
    },
    {
      "name": "View.ToggleShowImplicitRestsInGrey",
      "displayName": "Show Implicit Rests in Gray",
      "requiredParameters": [],
      "optionalParameters": [
        "Set"
      ]
    },
    {
      "name": "View.ToggleShowInstrumentFilterOverlay",
      "displayName": "Instrument Filter Overlay",
      "requiredParameters": [],
      "optionalParameters": [
        "ShowInstrumentFilterOverlay"
      ]
    },
    {
      "name": "View.ToggleShowMutedEventsInGrey",
      "displayName": "Show Muted Items in Gray",
      "requiredParameters": [],
      "optionalParameters": [
        "ShowMutedEventsInGrey"
      ]
    },
    {
      "name": "View.ToggleShowPageNumbersOverlay",
      "displayName": "Page Numbers",
      "requiredParameters": [],
      "optionalParameters": [
        "ShowPageNumbersOverlay"
      ]
    },
    {
      "name": "View.ToggleSuppressSignposts",
      "displayName": "Hide Signposts",
      "requiredParameters": [],
      "optionalParameters": [
        "SignpostsSuppressed"
      ]
    },
    {
      "name": "View.Zoom",
      "displayName": "Zoom",
      "requiredParameters": [
        "ZoomPercent"
      ],
      "optionalParameters": [
        "X",
        "Y"
      ]
    },
    {
      "name": "View.ZoomDialog",
      "displayName": "Custom Zoom...",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "View.ZoomIn",
      "displayName": "Zoom In",
      "requiredParameters": [],
      "optionalParameters": [
        "Set",
        "X",
        "Y"
      ]
    },
    {
      "name": "View.ZoomOut",
      "displayName": "Zoom Out",
      "requiredParameters": [],
      "optionalParameters": [
        "Set",
        "X",
        "Y"
      ]
    },
    {
      "name": "View.ZoomPageHeight",
      "displayName": "Page Height",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "View.ZoomPageWidth",
      "displayName": "Page Width",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "View.ZoomScoreLayoutView",
      "displayName": null,
      "requiredParameters": [
        "ScoreLayoutViewID",
        "ZoomLevelType"
      ],
      "optionalParameters": [
        "ZoomPercent"
      ]
    },
    {
      "name": "View.ZoomTwoPages",
      "displayName": "Two Pages",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "View.ZoomWholePage",
      "displayName": "Whole Page",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Window.BringAllToFront",
      "displayName": "Bring All To Front",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Window.BringToFront",
      "displayName": "Bring Window to Front",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Window.CloseHub",
      "displayName": "Close Hub Window",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Window.CloseOtherTabs",
      "displayName": "Close Other Tabs",
      "requiredParameters": [],
      "optionalParameters": [
        "TabType",
        "TabViewID"
      ]
    },
    {
      "name": "Window.CloseTab",
      "displayName": "Close Tab",
      "requiredParameters": [],
      "optionalParameters": [
        "TabType",
        "TabViewID"
      ]
    },
    {
      "name": "Window.CycleLowerPanelSize",
      "displayName": "Cycle Lower Zone Size",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Window.CycleLowerPanelType",
      "displayName": "Cycle Lower Zone Panel",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Window.HideAllPanels",
      "displayName": "Hide All Panels",
      "requiredParameters": [],
      "optionalParameters": [
        "Set"
      ]
    },
    {
      "name": "Window.KeyEditorZoomInHorizontal",
      "displayName": "Key Editor Zoom In Horizontal",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Window.KeyEditorZoomInVertical",
      "displayName": "Key Editor Zoom In Vertical",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Window.KeyEditorZoomOutHorizontal",
      "displayName": "Key Editor Zoom Out Horizontal",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Window.KeyEditorZoomOutVertical",
      "displayName": "Key Editor Zoom Out Vertical",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Window.MergeAllWindows",
      "displayName": "Merge All Windows",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Window.Minimise",
      "displayName": "Minimize",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Window.Mixer",
      "displayName": "Mixer Window",
      "requiredParameters": [],
      "optionalParameters": [
        "Set"
      ]
    },
    {
      "name": "Window.ModePrevious",
      "displayName": "Previous Mode",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Window.MoveTabToNewWindow",
      "displayName": "Move Tab To New Window",
      "requiredParameters": [],
      "optionalParameters": [
        "TabType",
        "TabViewID"
      ]
    },
    {
      "name": "Window.NewTab",
      "displayName": "New Tab",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Window.NewWindow",
      "displayName": "New Window",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Window.NextLayout",
      "displayName": "Next Layout",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Window.NextTab",
      "displayName": "Next Tab",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Window.PreviousLayout",
      "displayName": "Previous Layout",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Window.PreviousTab",
      "displayName": "Previous Tab",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Window.ShowBottomPanel",
      "displayName": "Show Lower Zone",
      "requiredParameters": [],
      "optionalParameters": [
        "Set"
      ]
    },
    {
      "name": "Window.ShowEngraveModePanel",
      "displayName": "Show Engrave Panel",
      "requiredParameters": [
        "SpecialEditModeType"
      ],
      "optionalParameters": []
    },
    {
      "name": "Window.ShowHub",
      "displayName": "Hub",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Window.ShowLeftPanel",
      "displayName": "Show Left Zone",
      "requiredParameters": [],
      "optionalParameters": [
        "Set"
      ]
    },
    {
      "name": "Window.ShowRightPanel",
      "displayName": "Show Right Zone",
      "requiredParameters": [],
      "optionalParameters": [
        "Set"
      ]
    },
    {
      "name": "Window.ShowTabBar",
      "displayName": "Show Tab Bar",
      "requiredParameters": [],
      "optionalParameters": [
        "Set"
      ]
    },
    {
      "name": "Window.ShowToolbar",
      "displayName": "Show Toolbar",
      "requiredParameters": [],
      "optionalParameters": [
        "Set"
      ]
    },
    {
      "name": "Window.ShowWriteModePanel",
      "displayName": "Show Write Panel",
      "requiredParameters": [
        "SectionedPanelType"
      ],
      "optionalParameters": []
    },
    {
      "name": "Window.SwitchLayoutAspectType",
      "displayName": "View Type",
      "requiredParameters": [
        "LayoutAspectType"
      ],
      "optionalParameters": [
        "ZoomLevelType",
        "ZoomPercent"
      ]
    },
    {
      "name": "Window.SwitchMode",
      "displayName": "Switch Mode",
      "requiredParameters": [
        "WindowMode"
      ],
      "optionalParameters": [
        "ScoreLayoutViewContainerID",
        "OpenScoreID"
      ]
    },
    {
      "name": "Window.SwitchSplitMode",
      "displayName": "Split Window",
      "requiredParameters": [
        "WindowSplitMode"
      ],
      "optionalParameters": []
    },
    {
      "name": "Window.SwitchToLayout",
      "displayName": null,
      "requiredParameters": [
        "OpenScoreID",
        "ScoreLayoutViewContainerID",
        "LayoutID"
      ],
      "optionalParameters": []
    },
    {
      "name": "Window.SwitchToLowerPanel",
      "displayName": "Show Lower Zone Panel",
      "requiredParameters": [
        "LowerPanelType"
      ],
      "optionalParameters": [
        "Show"
      ]
    },
    {
      "name": "Window.ToggleFollowPlayhead",
      "displayName": "Toggle Follow Playhead",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Window.ToggleLayoutAspectType",
      "displayName": "Toggle View Type",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Window.ToggleScoreAndPartLayout",
      "displayName": "Counterpart Layout",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Window.Transport",
      "displayName": "Transport Window",
      "requiredParameters": [],
      "optionalParameters": []
    },
    {
      "name": "Window.Zoom",
      "displayName": "Zoom",
      "requiredParameters": [],
      "optionalParameters": []
    }
  ],
  "engravingOptionsCount": 1451,
  "engravingOptions": [
    {
      "path": "rhythmDotPositionOptions.minimumVoiceColumnGap",
      "valueType": "kStaveUnit",
      "currentValue": "7/10",
      "enumValues": null
    },
    {
      "path": "rhythmDotPositionOptions.noteDotGap",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "rhythmDotPositionOptions.dotDotGap",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "rhythmDotPositionOptions.noteNoteGap",
      "valueType": "kStaveUnit",
      "currentValue": "1/16",
      "enumValues": null
    },
    {
      "path": "rhythmDotPositionOptions.alteredUnisonGap",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "rhythmDotPositionOptions.minimumGapAfterDots",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "rhythmDotPositionOptions.rhythmDotConsolidation",
      "valueType": "kEnum",
      "currentValue": "kMatchingNoteDuration",
      "enumValues": [
        "kNone",
        "kMatchingNoteDuration",
        "kAnyNoteDuration"
      ]
    },
    {
      "path": "rhythmDotPositionOptions.unisonRhythmDotConsolidation",
      "valueType": "kEnum",
      "currentValue": "kUnisonsOnLinesAndInSpaces",
      "enumValues": [
        "kNone",
        "kUnisonsOnLinesOnly",
        "kUnisonsOnLinesAndInSpaces"
      ]
    },
    {
      "path": "rhythmDotPositionOptions.tablatureRhythmDotsPosition",
      "valueType": "kEnum",
      "currentValue": "kOutsideStave",
      "enumValues": [
        "kNextToNotes",
        "kOutsideStave"
      ]
    },
    {
      "path": "dynamicsOptions.rinforzandoAndSforzandoHaveZ",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.abbreviateSubito",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.subitoUsesSPrefixForForte",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.subitoDisplaysOnRightOfDynamic",
      "valueType": "kEnum",
      "currentValue": "kRight",
      "enumValues": [
        "kLeft",
        "kRight"
      ]
    },
    {
      "path": "dynamicsOptions.nienteAppearance",
      "valueType": "kEnum",
      "currentValue": "kCircleOnHairpin",
      "enumValues": [
        "kCircleOnHairpin",
        "kAsText"
      ]
    },
    {
      "path": "dynamicsOptions.abbreviatePossibile",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.gradualDynamicAppearance",
      "valueType": "kEnum",
      "currentValue": "kHairpin",
      "enumValues": [
        "kHairpin",
        "kText",
        "kTextWithLine",
        "kHyphenatedText"
      ]
    },
    {
      "path": "dynamicsOptions.hairpinLineAppearance",
      "valueType": "kEnum",
      "currentValue": "kSolid",
      "enumValues": [
        "kSolid",
        "kDashed",
        "kDotted"
      ]
    },
    {
      "path": "dynamicsOptions.hairpinDotDiameter",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.hairpinDotGap",
      "valueType": "kStaveUnit",
      "currentValue": "1/3",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.hairpinDashLength",
      "valueType": "kStaveUnit",
      "currentValue": "5/8",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.hairpinDashGap",
      "valueType": "kStaveUnit",
      "currentValue": "1/3",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.crescContinuationLineAppearance",
      "valueType": "kEnum",
      "currentValue": "kDotted",
      "enumValues": [
        "kDashed",
        "kDotted"
      ]
    },
    {
      "path": "dynamicsOptions.crescContinuationLineDotDiameter",
      "valueType": "kStaveUnit",
      "currentValue": "1/5",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.crescContinuationLineDotGap",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.crescContinuationLineDashLength",
      "valueType": "kStaveUnit",
      "currentValue": "1/3",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.crescContinuationLineDashGap",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.crescContinuationLinePenWidth",
      "valueType": "kStaveUnit",
      "currentValue": "1/6",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.hyphenatedCrescContinuationLineAppearance",
      "valueType": "kEnum",
      "currentValue": "kDashed",
      "enumValues": [
        "kDashed",
        "kDotted"
      ]
    },
    {
      "path": "dynamicsOptions.hyphenatedCrescContinuationLineDotDiameter",
      "valueType": "kStaveUnit",
      "currentValue": "1/5",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.hyphenatedCrescContinuationLineDotGap",
      "valueType": "kStaveUnit",
      "currentValue": "3",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.hyphenatedCrescContinuationLineDashLength",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.hyphenatedCrescContinuationLineDashGap",
      "valueType": "kStaveUnit",
      "currentValue": "3",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.hyphenatedCrescContinuationLinePenWidth",
      "valueType": "kStaveUnit",
      "currentValue": "1/6",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.diminuendoTextStyle",
      "valueType": "kEnum",
      "currentValue": "kDiminuendo",
      "enumValues": [
        "kDiminuendo",
        "kDecrescendo"
      ]
    },
    {
      "path": "dynamicsOptions.abbreviateUnhyphenatedDynamics",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.continueHairpinsThroughChangesOfDynamic",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.combinedDynamicsAlwaysUseSeparator",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.combinedDynamicsSeparator",
      "valueType": "kEnum",
      "currentValue": "kHyphen",
      "enumValues": [
        "kHyphen",
        "kColon",
        "kSpace",
        "kSlash"
      ]
    },
    {
      "path": "dynamicsOptions.hairpinPenWidth",
      "valueType": "kStaveUnit",
      "currentValue": "4/25",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.maximumHairpinOpenEndAperture",
      "valueType": "kStaveUnit",
      "currentValue": "3/2",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.minimumHairpinOpenEndAperture",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.openEndApertureForHairpinsOverSystemBreaks",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.closedEndApertureForHairpinsOverSystemBreaks",
      "valueType": "kStaveUnit",
      "currentValue": "1/3",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.gapBetweenHairpinAndChangeOfDynamic",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.gapBetweenAdjacentHairpins",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.gapBetweenChangesOfDynamic",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.gapBetweenMessaDiVoceHairpins",
      "valueType": "kStaveUnit",
      "currentValue": "1/3",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.minimumDistanceBelowStaveForTextBasedDynamics",
      "valueType": "kStaveUnit",
      "currentValue": "3",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.minimumDistanceAboveStaveForTextBasedDynamics",
      "valueType": "kStaveUnit",
      "currentValue": "5/2",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.minimumDistanceBelowStaveForHairpins",
      "valueType": "kStaveUnit",
      "currentValue": "5/2",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.minimumDistanceAboveStaveForHairpins",
      "valueType": "kStaveUnit",
      "currentValue": "3",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.minimumGapAboveOrBelowOtherObjects",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.minimumVerticalGapBetweenRowsOfCoincidentDynamics",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.gapAfterMidBarDynamicsBeforeBeat",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.gapAfterEndOfBarDynamicsBeforeBeat",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.gapBetweenHairpinAndBarline",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.gapBetweenDynamicAndEndOfSystem",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.minimumDistanceAfterBarlineToContinueHairpinBeyondBarline",
      "valueType": "kStaveUnit",
      "currentValue": "2",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.alwaysCompleteHairpinsBeforeEndOfBar",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.gapBetweenNienteTextAndHairpin",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.amountToShortenHairpinsEndingInNiente",
      "valueType": "kStaveUnit",
      "currentValue": "2/3",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.textBasedDynamicHorizontalAlignment",
      "valueType": "kEnum",
      "currentValue": "kAlignOpticalCentreWithNotehead",
      "enumValues": [
        "kAlignOpticalCentreWithNotehead",
        "kAlignAllWithNotehead",
        "kAlignOpticalCentreWithLeftOfNotehead"
      ]
    },
    {
      "path": "dynamicsOptions.verticalGapBetweenHairpinsAndText",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.horizontalOffsetForHairpinText",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.verticalOffsetForHairpinText",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.minimumApertureDeltaForContinuationHairpins",
      "valueType": "kStaveUnit",
      "currentValue": "3/8",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.restartContinuationHairpinsAtSystemBreaks",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.minimumLegalLengthForHairpins",
      "valueType": "kStaveUnit",
      "currentValue": "3",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.preferToMoveEndOfFirstOfAbuttingHairpins",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.gapBetweenTextAndContinuationLine",
      "valueType": "kStaveUnit",
      "currentValue": "2/5",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.lyricsRelativePosition",
      "valueType": "kEnum",
      "currentValue": "kOutside",
      "enumValues": [
        "kInside",
        "kOutside"
      ]
    },
    {
      "path": "dynamicsOptions.dynamicErasurePadding",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.flaredEndWidth",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.flaredEndHeight",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.hairpinTextAtStartPosition",
      "valueType": "kEnum",
      "currentValue": "kAboveOrBelow",
      "enumValues": [
        "kAboveOrBelow",
        "kInside"
      ]
    },
    {
      "path": "dynamicsOptions.minimumLegalLengthForMessaDiVoceSegments",
      "valueType": "kStaveUnit",
      "currentValue": "9/4",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.evenlyDistributeMessaDiVoceSegmentsEndingAtBarline",
      "valueType": "kEnum",
      "currentValue": "kDistributeEvenlyIfIntersectsOnlyOneChordAcrossAllInstruments",
      "enumValues": [
        "kAlwaysUseSpacings",
        "kDistributeEvenlyIfIntersectsOnlyOneChordOnCurrentInstrument",
        "kDistributeEvenlyIfIntersectsOnlyOneChordAcrossAllInstruments"
      ]
    },
    {
      "path": "dynamicsOptions.messaDiVoceSegmentLengthThresholdForEvenDistribution",
      "valueType": "kStaveUnit",
      "currentValue": "8",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.gapBetweenNienteCircleAndHairpin",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.scaleFactorForNienteCircle",
      "valueType": "kInt",
      "currentValue": "150",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.usePlainNForTextNienteAppearance",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.hyphenatedTextEndsWithSyllable",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.hyphenatedTextContinuationLineAtHalfXHeight",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.useLegacyHyphenationForDiminuendo",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.useLegacyHyphenationForDescrescendo",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.useDiminForAbbreviatedDiminuendo",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.useDecrForAbbreviatedDecrescendo",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.includeWidthOfNoteheadAtEnd",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "dynamicsOptions.suppressHairpinsBelowMinimumLegalLength",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "bracketingOptions.bracketWidth",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "bracketingOptions.bracketEndType",
      "valueType": "kEnum",
      "currentValue": "kWing",
      "enumValues": [
        "kWing",
        "kLine",
        "kNone"
      ]
    },
    {
      "path": "bracketingOptions.subBracketWidth",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "bracketingOptions.subBracketLineThickness",
      "valueType": "kStaveUnit",
      "currentValue": "4/25",
      "enumValues": null
    },
    {
      "path": "bracketingOptions.bracketDistanceFromSystemicBarline",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "bracketingOptions.bracedSubBracketDistanceFromBracket",
      "valueType": "kStaveUnit",
      "currentValue": "3/8",
      "enumValues": null
    },
    {
      "path": "bracketingOptions.subBracketMeetsSystemicBarline",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "bracketingOptions.bracketAdditionalProtrusionBeyondStaff",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "bracketingOptions.braceDistanceFromSystemicBarline",
      "valueType": "kStaveUnit",
      "currentValue": "9/20",
      "enumValues": null
    },
    {
      "path": "bracketingOptions.subSubBracketWidth",
      "valueType": "kStaveUnit",
      "currentValue": "2/3",
      "enumValues": null
    },
    {
      "path": "bracketingOptions.subSubBracketLineThickness",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "bracketingOptions.subSubBracketAppearance",
      "valueType": "kEnum",
      "currentValue": "kReachSubBracket",
      "enumValues": [
        "kReachSubBracket",
        "kReachBracket",
        "kReachSystemicBarline"
      ]
    },
    {
      "path": "bracketingOptions.maxHeightForSmallBrace",
      "valueType": "kStaveUnit",
      "currentValue": "8",
      "enumValues": null
    },
    {
      "path": "bracketingOptions.maxHeightForRegularBrace",
      "valueType": "kStaveUnit",
      "currentValue": "16",
      "enumValues": null
    },
    {
      "path": "bracketingOptions.maxHeightForLargeBrace",
      "valueType": "kStaveUnit",
      "currentValue": "24",
      "enumValues": null
    },
    {
      "path": "bracketingOptions.maxHeightForLargerBrace",
      "valueType": "kStaveUnit",
      "currentValue": "32",
      "enumValues": null
    },
    {
      "path": "bracketingOptions.useFlatBraceBeyondMaxHeightForLargerBrace",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "ledgerLineOptions.ledgerLineProtrusionForNotes",
      "valueType": "kStaveUnit",
      "currentValue": "2/5",
      "enumValues": null
    },
    {
      "path": "ledgerLineOptions.ledgerLineProtrusionWhenRightOfAccidental",
      "valueType": "kStaveUnit",
      "currentValue": "1/6",
      "enumValues": null
    },
    {
      "path": "ledgerLineOptions.ledgerLineInnerProtrusionInRunOfShortBeamedNotes",
      "valueType": "kStaveUnit",
      "currentValue": "1/5",
      "enumValues": null
    },
    {
      "path": "ledgerLineOptions.ledgerLineProtrusionForRests",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "ledgerLineOptions.ledgerLineThickness",
      "valueType": "kStaveUnit",
      "currentValue": "4/25",
      "enumValues": null
    },
    {
      "path": "ledgerLineOptions.shortenLedgerLinesForAccidentals",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "ledgerLineOptions.shortenLedgerLinesInRunsOfShortBeamedNotes",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "tieOptions.directionForTiesBetweenOpposingStems",
      "valueType": "kEnum",
      "currentValue": "kAlwaysUp",
      "enumValues": [
        "kAlwaysUp",
        "kCurveAwayFromStave"
      ]
    },
    {
      "path": "tieOptions.horizontalPositionInChords",
      "valueType": "kEnum",
      "currentValue": "kBetweenNoteheads",
      "enumValues": [
        "kBetweenNoteheads",
        "kOutermostTiesToOutsideOfNoteheads",
        "kAllTiesToOutsideOfNoteheads"
      ]
    },
    {
      "path": "tieOptions.horizontalPositionOnSingleNotes",
      "valueType": "kEnum",
      "currentValue": "kAboveOrBelowNoteheads",
      "enumValues": [
        "kBetweenNoteheads",
        "kAboveOrBelowNoteheads"
      ]
    },
    {
      "path": "tieOptions.horizontalPositionInUnisons",
      "valueType": "kEnum",
      "currentValue": "kAboveOrBelowNoteheads",
      "enumValues": [
        "kBetweenNoteheads",
        "kAboveOrBelowNoteheads"
      ]
    },
    {
      "path": "tieOptions.outsideNoteheadPositioningBehaviour",
      "valueType": "kEnum",
      "currentValue": "kEitherEndCanGoAboveOrBelow",
      "enumValues": [
        "kBothEndsMustGoAboveOrBelow",
        "kEitherEndCanGoAboveOrBelow"
      ]
    },
    {
      "path": "tieOptions.preferTiesOfUniformLengthInChords",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "tieOptions.tieRhythmDotAvoidanceBehaviour",
      "valueType": "kEnum",
      "currentValue": "kNonCollidingTiesBeforeRhythmDots",
      "enumValues": [
        "kAllTiesAfterRhythmDots",
        "kNonCollidingTiesBeforeRhythmDots",
        "kAllTiesBeforeRhythmDots"
      ]
    },
    {
      "path": "tieOptions.gapBeforeAndAfterTiesBetweenNoteheads",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "tieOptions.gapBeforeAndAfterTiesOutsideNoteheads",
      "valueType": "kStaveUnit",
      "currentValue": "1/6",
      "enumValues": null
    },
    {
      "path": "tieOptions.minimumGapForTiesFromOutsideNoteheadBlockedByStem",
      "valueType": "kStaveUnit",
      "currentValue": "1/3",
      "enumValues": null
    },
    {
      "path": "tieOptions.gapBeforeAccidentals",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "tieOptions.gapAfterNoteFlags",
      "valueType": "kStaveUnit",
      "currentValue": "1/5",
      "enumValues": null
    },
    {
      "path": "tieOptions.permissibleBisectionWithTopOfFlat",
      "valueType": "kStaveUnit",
      "currentValue": "7/8",
      "enumValues": null
    },
    {
      "path": "tieOptions.permissibleBisectionWithTopOrBottomOfNatural",
      "valueType": "kStaveUnit",
      "currentValue": "2/3",
      "enumValues": null
    },
    {
      "path": "tieOptions.horizontalOffsetForTiesAboveOrBelowNoteheads",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "tieOptions.horizontalOffsetForCoincidentTiesAboveOrBelowNoteheads",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "tieOptions.verticalOffsetForTiesAboveOrBelowNoteheads",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "tieOptions.outerTiesAlwaysGoToEdgeOfNoteheadsForSingleNotes",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "tieOptions.outerTiesAlwaysGoToEdgeOfNoteheadsForChords",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "tieOptions.verticalOffsetForTiesBetweenNoteheadsOnStaveLine",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "tieOptions.verticalOffsetForTiesBetweenNoteheadsInSpace",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "tieOptions.verticalOffsetForTiesOutsideNoteheadEdgeOnStaveLine",
      "valueType": "kStaveUnit",
      "currentValue": "4/5",
      "enumValues": null
    },
    {
      "path": "tieOptions.verticalOffsetForTiesOutsideNoteheadEdgeInSpace",
      "valueType": "kStaveUnit",
      "currentValue": "4/5",
      "enumValues": null
    },
    {
      "path": "tieOptions.verticalOffsetForTiesBetweenNotesBeforeRhythmDotsInSpace",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "tieOptions.verticalOffsetForTiesBetweenNotesBeforeRhythmDotsOnStaveLine",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "tieOptions.verticalOffsetForTiesOutsideNoteheadEdgeBeforeRhythmDotsInSpace",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "tieOptions.verticalOffsetForTiesOutsideNoteheadEdgeBeforeRhythmDotsOnStaveLine",
      "valueType": "kStaveUnit",
      "currentValue": "1/3",
      "enumValues": null
    },
    {
      "path": "tieOptions.verticalOffsetForTiesOnBackNotes",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "tieOptions.idealMinimumDistanceForAdjacentTiesInSameDirection",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "tieOptions.idealMinimumDistanceForAdjacentTiesInSameDirectionInSeconds",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "tieOptions.idealMinimumDistanceForAdjacentTiesInOpposingDirections",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "tieOptions.minimumGapBetweenTiesSharingStavePosition",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "tieOptions.maxNumberOfSpacesBeyondNoteheadEndOfChordForTies",
      "valueType": "kInt",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "tieOptions.maxNumberOfSpacesBeyondStemEndOfChordForTies",
      "valueType": "kInt",
      "currentValue": "2",
      "enumValues": null
    },
    {
      "path": "tieOptions.tieThickness",
      "valueType": "kStaveUnit",
      "currentValue": "11/50",
      "enumValues": null
    },
    {
      "path": "tieOptions.tieEndThickness",
      "valueType": "kStaveUnit",
      "currentValue": "1/10",
      "enumValues": null
    },
    {
      "path": "tieOptions.maxTieShoulderOffsetForShortTies",
      "valueType": "kRationalInt32",
      "currentValue": "3/5",
      "enumValues": null
    },
    {
      "path": "tieOptions.minTieShoulderOffsetForLongTies",
      "valueType": "kRationalInt32",
      "currentValue": "1/10",
      "enumValues": null
    },
    {
      "path": "tieOptions.minTieHeightForShortTies",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "tieOptions.maxTieHeightForLongTies",
      "valueType": "kStaveUnit",
      "currentValue": "2",
      "enumValues": null
    },
    {
      "path": "tieOptions.adjustTieCurvatureToAvoidStaveLines",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "tieOptions.preferToOffsetTiesThanIncreaseCurvature",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "tieOptions.minimumGapBetweenTieMidPointAndStaveLine",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "tieOptions.maxPercentageOfTieHeightWhenReducingToAvoidStaveLines",
      "valueType": "kInt",
      "currentValue": "60",
      "enumValues": null
    },
    {
      "path": "tieOptions.createSubGroupsForNotesAFourthOrMoreApart",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "tieOptions.dashLengthForDashedTies",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "tieOptions.gapLengthForDashedTies",
      "valueType": "kStaveUnit",
      "currentValue": "1/3",
      "enumValues": null
    },
    {
      "path": "tieOptions.dotDiameterForDottedTies",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "tieOptions.gapLengthForDottedTies",
      "valueType": "kStaveUnit",
      "currentValue": "1/3",
      "enumValues": null
    },
    {
      "path": "tieOptions.minimumLengthForTies",
      "valueType": "kStaveUnit",
      "currentValue": "3/2",
      "enumValues": null
    },
    {
      "path": "tieOptions.minimumLengthForTiesOnGraceNotes",
      "valueType": "kStaveUnit",
      "currentValue": "4/5",
      "enumValues": null
    },
    {
      "path": "tieOptions.gapForTiesContinuingOverSystemBreaks",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "tieOptions.editorialTieStrokeLength",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "tieOptions.editorialTieStrokeLineWidth",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "tieOptions.offsetFromStaveLineWhenUnderDuress",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "tieOptions.minimumLengthForLVTies",
      "valueType": "kStaveUnit",
      "currentValue": "3/2",
      "enumValues": null
    },
    {
      "path": "tieOptions.minimumLengthForLVTiesOnGraceNotes",
      "valueType": "kStaveUnit",
      "currentValue": "4/5",
      "enumValues": null
    },
    {
      "path": "tieOptions.minimumLengthForCueInTies",
      "valueType": "kStaveUnit",
      "currentValue": "3/2",
      "enumValues": null
    },
    {
      "path": "tieOptions.minimumLengthForCueInTiesOnGraceNotes",
      "valueType": "kStaveUnit",
      "currentValue": "4/5",
      "enumValues": null
    },
    {
      "path": "tieOptions.minimumLengthForCueOutTies",
      "valueType": "kStaveUnit",
      "currentValue": "3/2",
      "enumValues": null
    },
    {
      "path": "tieOptions.minimumLengthForCueOutTiesOnGraceNotes",
      "valueType": "kStaveUnit",
      "currentValue": "4/5",
      "enumValues": null
    },
    {
      "path": "tieOptions.horizontalOverlapAllowedForDiamondSlashes",
      "valueType": "kStaveUnit",
      "currentValue": "1/6",
      "enumValues": null
    },
    {
      "path": "tieOptions.additionalHorizontalOffsetForTieEndPointsOutsideSlashes",
      "valueType": "kStaveUnit",
      "currentValue": "1/6",
      "enumValues": null
    },
    {
      "path": "tieOptions.additionalHorizontalOffsetForTieEndPointsOutsideXShapedSlashes",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "tieOptions.gapBeforeIntraStaveFingerings",
      "valueType": "kStaveUnit",
      "currentValue": "1/6",
      "enumValues": null
    },
    {
      "path": "tieOptions.gapBeforeAndAfterNoteheadParenthesesAndBrackets",
      "valueType": "kStaveUnit",
      "currentValue": "1/10",
      "enumValues": null
    },
    {
      "path": "tieOptions.dashedTiesOnTab",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "tieOptions.showSingleTieOnTab",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "tieOptions.useUniformTieDirectionForSingleVoiceChordWithNotesAddedOrRemoved",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "tieOptions.useTieDirectionForInnerTiedNotesInSingleVoiceChordRule",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "tieOptions.enforceMinimumLengthForTiesAtEndOfBar",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "timeSignatureOptions.openTimeSignatureAppearance",
      "valueType": "kEnum",
      "currentValue": "kEmpty",
      "enumValues": [
        "kEmpty",
        "kX",
        "kN"
      ]
    },
    {
      "path": "timeSignatureOptions.timeSignatureNumeratorAppearance",
      "valueType": "kEnum",
      "currentValue": "kNumber",
      "enumValues": [
        "kNumber",
        "kBeatGroup"
      ]
    },
    {
      "path": "timeSignatureOptions.timeSignatureDenominatorAppearance",
      "valueType": "kEnum",
      "currentValue": "kNumber",
      "enumValues": [
        "kNumber",
        "kNote",
        "kNone"
      ]
    },
    {
      "path": "timeSignatureOptions.timeSignatureInterchangeableSeparator",
      "valueType": "kEnum",
      "currentValue": "kParentheses",
      "enumValues": [
        "kParentheses",
        "kBracket",
        "kEqual",
        "kSlash",
        "kSpace",
        "kHyphen"
      ]
    },
    {
      "path": "timeSignatureOptions.timeSignatureDrawDenominatorAsBeatLength",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "timeSignatureOptions.timeSignatureDrawClosingParenthesis",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "timeSignatureOptions.gapBetweenInterchangeableTimeSigAndSeparator",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "timeSignatureOptions.gapBetweenInterchangeableTimeSigs",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "timeSignatureOptions.gapBetweenTimeSigAndBracket",
      "valueType": "kStaveUnit",
      "currentValue": "-1/10",
      "enumValues": null
    },
    {
      "path": "timeSignatureOptions.gapBetweenTimeSigAndParentheses",
      "valueType": "kStaveUnit",
      "currentValue": "1/10",
      "enumValues": null
    },
    {
      "path": "timeSignatureOptions.gapBetweenAlternatingTimeSigAndSeparator",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "timeSignatureOptions.scaleFactorOfLargeTimeSignatureForOneStave",
      "valueType": "kRationalInt32",
      "currentValue": "5/4",
      "enumValues": null
    },
    {
      "path": "timeSignatureOptions.scaleFactorOfLargeTimeSignatureForTwoOrMoreStaves",
      "valueType": "kRationalInt32",
      "currentValue": "4",
      "enumValues": null
    },
    {
      "path": "timeSignatureOptions.scaleFactorOfLargeTimeSignatureForFourOrMoreStaves",
      "valueType": "kRationalInt32",
      "currentValue": "10",
      "enumValues": null
    },
    {
      "path": "timeSignatureOptions.scaleFactorOfAboveStaveTimeSignature",
      "valueType": "kRationalInt32",
      "currentValue": "2",
      "enumValues": null
    },
    {
      "path": "timeSignatureOptions.gapBetweenOutsideStaveTimeSignatureAndStave",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "timeSignatureOptions.gapBetweenOutsideStaveTimeSignatureAndOtherObjects",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "timeSignatureOptions.leftAlignMidSystemOutsideStaveTimeSignature",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "timeSignatureOptions.moveRehearsalMarkAndTempoToTheRightOfOutsideStaveTimeSignature",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "timeSignatureOptions.scaleFactorOfNoteDenominatorOfOutsideStaveTimeSignature",
      "valueType": "kRationalInt32",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "timeSignatureOptions.largeTimeSignatureVerticalAlignment",
      "valueType": "kEnum",
      "currentValue": "kCentre",
      "enumValues": [
        "kTop",
        "kCentre",
        "kBottom"
      ]
    },
    {
      "path": "timeSignatureOptions.largeTimeSignatureTreatPercussionsAndKeysAsSingleBracket",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "timeSignatureOptions.gapBetweenNumeratorAndDenominatorForNormalTimeSignatures",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "timeSignatureOptions.gapBetweenNumeratorAndDenominatorForLargeTimeSignatures",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "timeSignatureOptions.gapBetweenNumeratorAndDenominatorForAboveStaveTimeSignatures",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "timeSignatureOptions.timeSignatureBackgroundErasure",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "timeSignatureOptions.timeSignatureBackgroundErasureWidth",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "timeSignatureOptions.combineAggregateTimeSignaturesWithCommonDenominators",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "ottavaLineOptions.ottavaLineAppearance",
      "valueType": "kEnum",
      "currentValue": "kDashed",
      "enumValues": [
        "kDashed",
        "kDotted"
      ]
    },
    {
      "path": "ottavaLineOptions.ottavaLineExtensionLineThickness",
      "valueType": "kStaveUnit",
      "currentValue": "4/25",
      "enumValues": null
    },
    {
      "path": "ottavaLineOptions.optimalDashLengthForOttavaLines",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "ottavaLineOptions.optimalDashGapLengthForOttavaLines",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "ottavaLineOptions.optimalDotDiameterForOttavaLines",
      "valueType": "kStaveUnit",
      "currentValue": "1/6",
      "enumValues": null
    },
    {
      "path": "ottavaLineOptions.optimalGapBetweenDotsForOttavaLines",
      "valueType": "kStaveUnit",
      "currentValue": "1/3",
      "enumValues": null
    },
    {
      "path": "ottavaLineOptions.ottavaLineExtensionLineProtrusionAtRHS",
      "valueType": "kStaveUnit",
      "currentValue": "2/3",
      "enumValues": null
    },
    {
      "path": "ottavaLineOptions.ottavaLineHookLength",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "ottavaLineOptions.ottavaLineLHSAlignment",
      "valueType": "kEnum",
      "currentValue": "kStartWithLeftmostNotehead",
      "enumValues": [
        "kStartWithLeftmostNotehead",
        "kStartWithLeftmostAccidental"
      ]
    },
    {
      "path": "ottavaLineOptions.noteRelativeHorizontalAlignment",
      "valueType": "kEnum",
      "currentValue": "kCentre",
      "enumValues": [
        "kLeft",
        "kCentre",
        "kRight"
      ]
    },
    {
      "path": "ottavaLineOptions.ottavaLineLabelType",
      "valueType": "kEnum",
      "currentValue": "kNumberWithTextSuffix",
      "enumValues": [
        "kNumberOnly",
        "kNumberWithTextSuffix"
      ]
    },
    {
      "path": "ottavaLineOptions.singleOctaveOttavaBassaAppearance",
      "valueType": "kEnum",
      "currentValue": "kPrefer8ba",
      "enumValues": [
        "kPrefer8va",
        "kPrefer8ba"
      ]
    },
    {
      "path": "ottavaLineOptions.ottavaBassaAppearance",
      "valueType": "kEnum",
      "currentValue": "kIncludeBassa",
      "enumValues": [
        "kIncludeBassa",
        "kOmitBassa"
      ]
    },
    {
      "path": "ottavaLineOptions.ottavaLineLabelTypeForContinuation",
      "valueType": "kEnum",
      "currentValue": "kNumberOnly",
      "enumValues": [
        "kNumberOnly",
        "kNumberWithTextSuffix"
      ]
    },
    {
      "path": "ottavaLineOptions.singleOctaveOttavaBassaAppearanceForContinuation",
      "valueType": "kEnum",
      "currentValue": "kPrefer8ba",
      "enumValues": [
        "kPrefer8va",
        "kPrefer8ba"
      ]
    },
    {
      "path": "ottavaLineOptions.ottavaBassaAppearanceForContinuation",
      "valueType": "kEnum",
      "currentValue": "kOmitBassa",
      "enumValues": [
        "kIncludeBassa",
        "kOmitBassa"
      ]
    },
    {
      "path": "ottavaLineOptions.alignmentOfExtensionLineForLinesRaisingPitch",
      "valueType": "kEnum",
      "currentValue": "kTop",
      "enumValues": [
        "kTop",
        "kMiddle",
        "kBottom"
      ]
    },
    {
      "path": "ottavaLineOptions.alignmentOfExtensionLineForLinesLoweringPitch",
      "valueType": "kEnum",
      "currentValue": "kBottom",
      "enumValues": [
        "kTop",
        "kMiddle",
        "kBottom"
      ]
    },
    {
      "path": "ottavaLineOptions.showContinuationLabelInParentheses",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "ottavaLineOptions.spaceBetweenLabelAndExtensionLine",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "ottavaLineOptions.tuckExtensionAboveOrBelowLabelWherePossible",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "ottavaLineOptions.minimumLengthForOttavaExtensionLine",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "ottavaLineOptions.minimumDistanceBetweenOttavaLineRHSAndNextChord",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "ottavaLineOptions.horizontalOffsetForStartOfLine",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "ottavaLineOptions.ottavaLineVerticalGapInside",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "ottavaLineOptions.verticalOffsetForStartOfLine",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "ottavaLineOptions.verticalOffsetForLineContinuation",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "tupletOptions.tupletBracketLineWidth",
      "valueType": "kStaveUnit",
      "currentValue": "4/25",
      "enumValues": null
    },
    {
      "path": "tupletOptions.tupletHookLength",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "tupletOptions.tupletEndPosition",
      "valueType": "kEnum",
      "currentValue": "kEndAtHypotheticalLastDivision",
      "enumValues": [
        "kEndWithRighthandSideOfNoteheadsInTerminatingChord",
        "kEndBeforeChordFollowingEndOfLine",
        "kEndAtHypotheticalLastDivision"
      ]
    },
    {
      "path": "tupletOptions.tupletGapAfterEndPosition",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "tupletOptions.tupletBracketVisibilityRule",
      "valueType": "kEnum",
      "currentValue": "kAutomatic",
      "enumValues": [
        "kAlwaysVisible",
        "kAutomatic"
      ]
    },
    {
      "path": "tupletOptions.tupletBracketForceHorizontal",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "tupletOptions.tupletBracketMaximumAngle",
      "valueType": "kStaveUnit",
      "currentValue": "7/4",
      "enumValues": null
    },
    {
      "path": "tupletOptions.tupletTextContent",
      "valueType": "kEnum",
      "currentValue": "kNumber",
      "enumValues": [
        "kNone",
        "kNumber",
        "kRatio",
        "kRatioWithNote"
      ]
    },
    {
      "path": "tupletOptions.tupletTextPosition",
      "valueType": "kEnum",
      "currentValue": "kAtVisualCentre",
      "enumValues": [
        "kAtVisualCentre",
        "kAtRhythmicCentre"
      ]
    },
    {
      "path": "tupletOptions.tupletTextWeight",
      "valueType": "kEnum",
      "currentValue": "kBold",
      "enumValues": [
        "kBold",
        "kLight",
        "kPlain"
      ]
    },
    {
      "path": "tupletOptions.tupletOuterTextPadding",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "tupletOptions.ratioFontScale",
      "valueType": "kRationalInt32",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "tupletOptions.noteFontScale",
      "valueType": "kRationalInt32",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "tupletOptions.tupletVerticalGapInside",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "tupletOptions.tupletsAlwaysAboveForVocal",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "tupletOptions.hideSuccessiveIdenticalTuplets",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "tupletOptions.numberOfVisibleSuccessiveTuplet",
      "valueType": "kInt",
      "currentValue": "3",
      "enumValues": null
    },
    {
      "path": "tupletOptions.successiveIdenticalTupletHidingPolicy",
      "valueType": "kEnum",
      "currentValue": "kHideOnlySuccessive",
      "enumValues": [
        "kHideOnlySuccessive",
        "kHideAllToTheEndOfFlow"
      ]
    },
    {
      "path": "tupletOptions.tupletBracketLeftDelta",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "tupletOptions.tupletBracketRightDelta",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "staveOptions.staveLineThickness",
      "valueType": "kStaveUnit",
      "currentValue": "13/100",
      "enumValues": null
    },
    {
      "path": "staveOptions.ossiaScaleFactor",
      "valueType": "kRationalInt32",
      "currentValue": "2/3",
      "enumValues": null
    },
    {
      "path": "staveOptions.midBarOssiaStartStaveLinePadding",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "staveOptions.midBarOssiaEndStaveLinePadding",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "staveOptions.tabStaveLineSeparationScaleFactor",
      "valueType": "kRationalInt32",
      "currentValue": "3/2",
      "enumValues": null
    },
    {
      "path": "noteOptions.graceNoteVisualScale",
      "valueType": "kRationalInt32",
      "currentValue": "3/5",
      "enumValues": null
    },
    {
      "path": "noteOptions.graceNoteMinimumDistanceFromMainClump",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "noteOptions.graceNoteSlashWidth",
      "valueType": "kStaveUnit",
      "currentValue": "1/6",
      "enumValues": null
    },
    {
      "path": "noteOptions.graceNoteDefaultSlashLength",
      "valueType": "kStaveUnit",
      "currentValue": "2",
      "enumValues": null
    },
    {
      "path": "noteOptions.graceNoteDefaultSlashInsetFromStemTip",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "noteOptions.graceNoteDefaultSlashOffsetToRight",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "noteOptions.graceNoteSlashMinimumProtrusionFromBeam",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "noteOptions.defaultNoteheadSet",
      "valueType": "kNoteheadSetEntityID",
      "currentValue": "noteheadset.large",
      "enumValues": null
    },
    {
      "path": "noteOptions.defaultRestSet",
      "valueType": "kRestSetEntityID",
      "currentValue": "restset.default",
      "enumValues": null
    },
    {
      "path": "noteOptions.offsetNoteShapesForMinorKeysWhenUsingScaleDegreeNoteheadType",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "noteOptions.preferredAppearanceForBreveNotehead",
      "valueType": "kEnum",
      "currentValue": "kSquare",
      "enumValues": [
        "kRound",
        "kSquare"
      ]
    },
    {
      "path": "noteOptions.gapInsideParenthesisedNoteheads",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "noteOptions.gapInsideParenthesisedNoteheadsOnTabStaves",
      "valueType": "kStaveUnit",
      "currentValue": "1/12",
      "enumValues": null
    },
    {
      "path": "noteOptions.additionalGapBetweenParenthesisExtremityAndAlienNoteheadMiddle",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "noteOptions.additionalGapBetweenStemAndParenthesis",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "noteOptions.additionalGapBetweenRhythmDotAndParenthesisMiddle",
      "valueType": "kStaveUnit",
      "currentValue": "-1/12",
      "enumValues": null
    },
    {
      "path": "noteOptions.additionalGapBetweenRhythmDotAndParenthesisExtremity",
      "valueType": "kStaveUnit",
      "currentValue": "1/6",
      "enumValues": null
    },
    {
      "path": "noteOptions.parenthesisVerticalExtremityLength",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "noteOptions.additionalGapBetweenNoteFlagAndParenthesis",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "noteOptions.additionalGapBetweenLedgerLineAndParenthesisMiddle",
      "valueType": "kStaveUnit",
      "currentValue": "-1/16",
      "enumValues": null
    },
    {
      "path": "noteOptions.additionalGapBetweenLedgerLineAndParenthesisExtremity",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "noteOptions.additionalGapBetweenNeighbouringParenthesisAndOther",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "noteOptions.additionalGapBetweenNeighbouringParenthesisAndOtherAtExtremity",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "noteOptions.minimumGapOnFarSideOfParenthesis",
      "valueType": "kStaveUnit",
      "currentValue": "1/15",
      "enumValues": null
    },
    {
      "path": "noteOptions.minimumGapAboveAndBelowParenthesis",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "noteOptions.minimumGapAboveAndBelowNeighbouringParenthesisAndOther",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "noteOptions.gapInsideBracketedNoteheads",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "noteOptions.additionalGapBetweenBracketExtremityAndAlienNoteheadMiddle",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "noteOptions.additionalGapBetweenStemAndBracket",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "noteOptions.additionalGapBetweenRhythmDotAndBracketMiddle",
      "valueType": "kStaveUnit",
      "currentValue": "-1/12",
      "enumValues": null
    },
    {
      "path": "noteOptions.additionalGapBetweenRhythmDotAndBracketExtremity",
      "valueType": "kStaveUnit",
      "currentValue": "1/12",
      "enumValues": null
    },
    {
      "path": "noteOptions.bracketVerticalExtremityLength",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "noteOptions.additionalGapBetweenNoteFlagAndBracket",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "noteOptions.additionalGapBetweenLedgerLineAndBracketMiddle",
      "valueType": "kStaveUnit",
      "currentValue": "-1/16",
      "enumValues": null
    },
    {
      "path": "noteOptions.additionalGapBetweenLedgerLineAndBracketExtremity",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "noteOptions.additionalGapBetweenNeighbouringBracketAndOther",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "noteOptions.additionalGapBetweenNeighbouringBracketAndParenthesisAtExtremity",
      "valueType": "kStaveUnit",
      "currentValue": "-1/6",
      "enumValues": null
    },
    {
      "path": "noteOptions.minimumGapOnFarSideOfBracket",
      "valueType": "kStaveUnit",
      "currentValue": "1/15",
      "enumValues": null
    },
    {
      "path": "noteOptions.minimumGapAboveAndBelowBracket",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "noteOptions.minimumGapAboveAndBelowNeighbouringBracketAndOther",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "noteOptions.largestIntervalToJoinNotesWithSingleParenthesis",
      "valueType": "kInt",
      "currentValue": "8",
      "enumValues": null
    },
    {
      "path": "noteOptions.joinNeighbouringNotesWithSingleParenthesisOnTabStave",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "noteOptions.useCompositesForParenthesesSpanningSingleStavePosition",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "noteOptions.useCompositesForParenthesesSpanningSingleStavePositionOnTabStaves",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "noteOptions.parenthesisMinimumDistanceFromStaveLines",
      "valueType": "kStaveUnit",
      "currentValue": "1/12",
      "enumValues": null
    },
    {
      "path": "noteOptions.bracketMinimumDistanceFromStaveLines",
      "valueType": "kStaveUnit",
      "currentValue": "1/7",
      "enumValues": null
    },
    {
      "path": "noteOptions.protrusionBeyondTopOrBottomOfNoteheadForDrawnParentheses",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "noteOptions.parenthesisCurveMiddleThickness",
      "valueType": "kStaveUnit",
      "currentValue": "1/7",
      "enumValues": null
    },
    {
      "path": "noteOptions.parenthesisCurveEndThickness",
      "valueType": "kStaveUnit",
      "currentValue": "1/25",
      "enumValues": null
    },
    {
      "path": "noteOptions.parenthesisCurveMiddleThicknessOnTabStave",
      "valueType": "kStaveUnit",
      "currentValue": "1/6",
      "enumValues": null
    },
    {
      "path": "noteOptions.parenthesisCurveEndThicknessOnTabStave",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "noteOptions.parenthesisCurveHorizontalExtentForSecond",
      "valueType": "kStaveUnit",
      "currentValue": "1/3",
      "enumValues": null
    },
    {
      "path": "noteOptions.parenthesisCurveHorizontalExtentForOctave",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "noteOptions.parenthesisCurveMaximumHorizontalExtent",
      "valueType": "kStaveUnit",
      "currentValue": "3/5",
      "enumValues": null
    },
    {
      "path": "noteOptions.protrusionBeyondTopOrBottomOfNoteheadForDrawnBrackets",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "noteOptions.bracketThickness",
      "valueType": "kStaveUnit",
      "currentValue": "1/10",
      "enumValues": null
    },
    {
      "path": "noteOptions.bracketHookLength",
      "valueType": "kStaveUnit",
      "currentValue": "1/3",
      "enumValues": null
    },
    {
      "path": "noteOptions.stemmedRhythmicSlashAppearance",
      "valueType": "kEnum",
      "currentValue": "kOversized",
      "enumValues": [
        "kStandard",
        "kSmall",
        "kOversized",
        "kMuted"
      ]
    },
    {
      "path": "noteOptions.stemlessRhythmicSlashAppearance",
      "valueType": "kEnum",
      "currentValue": "kOversized",
      "enumValues": [
        "kStandard",
        "kSmall",
        "kOversized",
        "kMuted"
      ]
    },
    {
      "path": "noteOptions.hideRhythmDotsOnSlashesInRegularCompoundTime",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "noteOptions.tablatureLozengeAppearance",
      "valueType": "kEnum",
      "currentValue": "kNone",
      "enumValues": [
        "kNone",
        "kEllipse",
        "kRoundRect"
      ]
    },
    {
      "path": "noteOptions.tablatureLozengeThickness",
      "valueType": "kStaveUnit",
      "currentValue": "1/5",
      "enumValues": null
    },
    {
      "path": "noteOptions.preferCirclesForSingleNoteLozenges",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "noteOptions.eraseBackgroundAroundTablatureFretNumbers",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "noteOptions.tiedToNoteheadAppearanceOnTab",
      "valueType": "kEnum",
      "currentValue": "kHideButParenthesiseAtStartOfBar",
      "enumValues": [
        "kHide",
        "kParenthesiseWithoutTies",
        "kParenthesiseWithTies",
        "kHideButParenthesiseAtStartOfBar",
        "kShow"
      ]
    },
    {
      "path": "noteOptions.tablatureGraceNoteVisualScale",
      "valueType": "kRationalInt32",
      "currentValue": "4/5",
      "enumValues": null
    },
    {
      "path": "noteOptions.gapBetweenNoteheadsOnSplitStems",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "noteOptions.minimumGapBetweenNoteheadsOnSplitStems",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "noteOptions.additionalGapForParenthesesOnSplitStems",
      "valueType": "kStaveUnit",
      "currentValue": "1/10",
      "enumValues": null
    },
    {
      "path": "articulationOptions.gapBetweenNoteheadAndArticulation",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "articulationOptions.gapBetweenStemAndArticulation",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "articulationOptions.gapBetweenArticulations",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "articulationOptions.stemSideStaccatoHorizontalPosition",
      "valueType": "kEnum",
      "currentValue": "kCentreOnStem",
      "enumValues": [
        "kCentreOnStem",
        "kCentreOnNotehead",
        "kHalfCentre"
      ]
    },
    {
      "path": "articulationOptions.staccatissimoDesign",
      "valueType": "kEnum",
      "currentValue": "kNormal",
      "enumValues": [
        "kNormal",
        "kWedge",
        "kStroke"
      ]
    },
    {
      "path": "articulationOptions.marcatoAlwaysAbove",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "articulationOptions.accentAlwaysAbove",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "articulationOptions.stressAlwaysAbove",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "articulationOptions.durationAlwaysAbove",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "articulationOptions.articulationDurationTieChainPosition",
      "valueType": "kEnum",
      "currentValue": "kTieChainEnd",
      "enumValues": [
        "kTieChainStart",
        "kTieChainEnd"
      ]
    },
    {
      "path": "articulationOptions.articulationForceTieChainPosition",
      "valueType": "kEnum",
      "currentValue": "kTieChainStart",
      "enumValues": [
        "kTieChainStart",
        "kTieChainEnd"
      ]
    },
    {
      "path": "articulationOptions.articulationStressTieChainPosition",
      "valueType": "kEnum",
      "currentValue": "kTieChainStart",
      "enumValues": [
        "kTieChainStart",
        "kTieChainEnd"
      ]
    },
    {
      "path": "articulationOptions.articulationTenutoTieChainPosition",
      "valueType": "kEnum",
      "currentValue": "kTieChainStart",
      "enumValues": [
        "kTieChainStart",
        "kTieChainEnd"
      ]
    },
    {
      "path": "articulationOptions.stressAlwaysInsideSlurEndPoints",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "articulationOptions.forceAlwaysInsideSlurEndPoints",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "articulationOptions.durationAlwaysInsideSlurEndPoints",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "articulationOptions.staccatoAllowedInStaff",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "articulationOptions.tenutoAllowedInStaff",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "articulationOptions.staccatissimoAllowedInStaff",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "articulationOptions.accentAllowedInStaff",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "articulationOptions.marcatoAllowedInStaff",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "articulationOptions.stressAllowedInStaff",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "articulationOptions.unstressAllowedInStaff",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "articulationOptions.showArticulationsOnSplitStemNoteheads",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "articulationOptions.articulationsAlwaysAboveForPercussion",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "spacingGapOptions.gapBeforeBarline",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "spacingGapOptions.idealGapAfterBarline",
      "valueType": "kStaveUnit",
      "currentValue": "3/2",
      "enumValues": null
    },
    {
      "path": "spacingGapOptions.minimumGapAfterBarline",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "spacingGapOptions.gapAfterBarlineAndInitialAttachment",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "spacingGapOptions.gapAfterInitialClef",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "spacingGapOptions.gapAfterClefChange",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "spacingGapOptions.gapAfterKeySignature",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "spacingGapOptions.gapAfterTimeSignature",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "spacingGapOptions.gapAfterCancellationNaturals",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "spacingGapOptions.gapAfterEndRepeatBarline",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "spacingGapOptions.gapAfterArpeggioLine",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "spacingGapOptions.extraGapAtEndOfLeftBoundingShapeExtension",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "spacingGapOptions.minimumDistanceBetweenSpacingColumns",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "spacingGapOptions.gapAfterCueClefChange",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "spacingGapOptions.gapAfterVerticalLine",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "spacingGapOptions.gapAfterBarlineAndBeforeTimeSignature",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "clefOptions.clefChangeScale",
      "valueType": "kRationalInt32",
      "currentValue": "2/3",
      "enumValues": null
    },
    {
      "path": "clefOptions.showTabClefAfterFirstSystem",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "stemOptions.defaultStemLength",
      "valueType": "kStaveUnit",
      "currentValue": "7/2",
      "enumValues": null
    },
    {
      "path": "stemOptions.shortStemLength",
      "valueType": "kStaveUnit",
      "currentValue": "11/4",
      "enumValues": null
    },
    {
      "path": "stemOptions.minimumStemLengthForFlaggedNote",
      "valueType": "kStaveUnit",
      "currentValue": "7/2",
      "enumValues": null
    },
    {
      "path": "stemOptions.minimumStemletLengthForBeamedRest",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "stemOptions.gapBetweenOutsideOfRestAndStemlet",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "stemOptions.beamSwapThreshold",
      "valueType": "kStaveUnit",
      "currentValue": "5/2",
      "enumValues": null
    },
    {
      "path": "stemOptions.automaticBeamCentring",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "stemOptions.minimumStemLengthForAutomaticCentreBeam",
      "valueType": "kStaveUnit",
      "currentValue": "5/2",
      "enumValues": null
    },
    {
      "path": "stemOptions.defaultContextualStemDirection",
      "valueType": "kEnum",
      "currentValue": "kDown",
      "enumValues": [
        "kUp",
        "kDown"
      ]
    },
    {
      "path": "stemOptions.defaultFlagSet",
      "valueType": "kFlagSetEntityID",
      "currentValue": "flagset.default",
      "enumValues": null
    },
    {
      "path": "stemOptions.rhythmDotAvoidanceApproach",
      "valueType": "kEnum",
      "currentValue": "kOffsetRhythmDots",
      "enumValues": [
        "kNone",
        "kShortenFlag",
        "kLengthenStem",
        "kOffsetRhythmDots"
      ]
    },
    {
      "path": "stemOptions.minimumDistanceBetweenTopOfTremoloAndTopOfQuaverFlag_StemUp",
      "valueType": "kStaveUnit",
      "currentValue": "17/10",
      "enumValues": null
    },
    {
      "path": "stemOptions.minimumDistanceBetweenTopOfTremoloAndTopOfSemiquaverFlag_StemUp",
      "valueType": "kStaveUnit",
      "currentValue": "2",
      "enumValues": null
    },
    {
      "path": "stemOptions.minimumDistanceBetweenTopOfTremoloAndTopOfDemisemiquaverFlag_StemUp",
      "valueType": "kStaveUnit",
      "currentValue": "21/10",
      "enumValues": null
    },
    {
      "path": "stemOptions.minimumDistanceBetweenBottomOfTremoloAndBottomOfQuaverFlag_StemDown",
      "valueType": "kStaveUnit",
      "currentValue": "6/5",
      "enumValues": null
    },
    {
      "path": "stemOptions.minimumDistanceBetweenBottomOfTremoloAndBottomOfSemiquaverFlag_StemDown",
      "valueType": "kStaveUnit",
      "currentValue": "8/5",
      "enumValues": null
    },
    {
      "path": "stemOptions.minimumDistanceBetweenBottomOfTremoloAndBottomOfDemisemiquaverFlag_StemDown",
      "valueType": "kStaveUnit",
      "currentValue": "19/10",
      "enumValues": null
    },
    {
      "path": "stemOptions.minimumDistanceBetweenOutsideOfTremoloAndInsideOfInnerBeam",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "stemOptions.minimumDistanceBetweenOutsideOfTremoloAndTipOfBareStem",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "stemOptions.minimumDistanceBetweenInsideOfTremoloAndOutermostNotehead",
      "valueType": "kStaveUnit",
      "currentValue": "17/20",
      "enumValues": null
    },
    {
      "path": "stemOptions.stemThickness",
      "valueType": "kStaveUnit",
      "currentValue": "3/25",
      "enumValues": null
    },
    {
      "path": "stemOptions.allowContextualStemDirections",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "stemOptions.shortStemLengthForQuaver",
      "valueType": "kStaveUnit",
      "currentValue": "3",
      "enumValues": null
    },
    {
      "path": "stemOptions.attemptToShortenBeamedStemsSlightly",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "stemOptions.startStemShorteningPosition",
      "valueType": "kInt",
      "currentValue": "-2",
      "enumValues": null
    },
    {
      "path": "stemOptions.stopStemShorteningPosition",
      "valueType": "kInt",
      "currentValue": "3",
      "enumValues": null
    },
    {
      "path": "stemOptions.shortStemLengthForSemiquaverOrShorter",
      "valueType": "kStaveUnit",
      "currentValue": "5/2",
      "enumValues": null
    },
    {
      "path": "stemOptions.tablatureStemEndpoint",
      "valueType": "kEnum",
      "currentValue": "kOutsideOfStave",
      "enumValues": [
        "kOutsideOfStave",
        "kOutermostNote",
        "kInnermostNote"
      ]
    },
    {
      "path": "stemOptions.gapBetweenOutsideOfFretNumberAndTabStem",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "stemOptions.gapBetweenOutsideOfStaveAndTabStem",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "stemOptions.minimumDistanceBetweenOutsideOfStaveAndEndOfTabStem",
      "valueType": "kStaveUnit",
      "currentValue": "3",
      "enumValues": null
    },
    {
      "path": "stemOptions.defaultDirectionForStemsOnTabStaves",
      "valueType": "kEnum",
      "currentValue": "kUp",
      "enumValues": [
        "kUp",
        "kDown"
      ]
    },
    {
      "path": "stemOptions.alignStemsWithEdgesOfFretNumbersForLozengesOnTabStaves",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "stemOptions.showStemForGraceNoteForTabWithRhythms",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "stemOptions.stemBackgroundErasure",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "stemOptions.stemBackgroundErasureWidth",
      "valueType": "kStaveUnit",
      "currentValue": "1/5",
      "enumValues": null
    },
    {
      "path": "stemOptions.defaultDistanceBetweenHotSpotOfStemlessRestAndOutsideOfBeamAtStartOrEnd",
      "valueType": "kStaveUnit",
      "currentValue": "3/2",
      "enumValues": null
    },
    {
      "path": "stemOptions.minimumDistanceBetweenEdgeOfStemlessRestAndInsideOfBeamAtStartOrEnd",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "stemOptions.considerNotesOnMiddleLineForBeamedGroupStemDirection",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "stemOptions.considerUpAndDownStemCountWhenCalculatingBeamedGroupStemDirection",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "stemOptions.defaultDirectionForStemsOnSingleLinePercussion",
      "valueType": "kEnum",
      "currentValue": "kDown",
      "enumValues": [
        "kUp",
        "kDown"
      ]
    },
    {
      "path": "stemOptions.graceNotesFollowDefaultStemDirectionOnSingleLinePercussion",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "slurOptions.slurEndNoteheadSideVOffsetNoteheadInSpace",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "slurOptions.slurEndNoteheadSideVOffsetNoteheadOnLine",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "slurOptions.slurEndNoteheadSideHOffset",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "slurOptions.slurEndExtraVOffsetFromTiedNotehead",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "slurOptions.slurEndUnbeamedStemSideHOffset",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "slurOptions.slurEndUnbeamedStemSideVOffset",
      "valueType": "kStaveUnit",
      "currentValue": "5/4",
      "enumValues": null
    },
    {
      "path": "slurOptions.slurEndUnbeamedStemSideWithFlagHOffset",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "slurOptions.slurEndUnbeamedStemSideWithFlagVOffset",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "slurOptions.slurEndBeamedStemSideHOffset",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "slurOptions.slurEndBeamedStemSideVOffset",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "slurOptions.slurEndStaveLineMinDistance",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "slurOptions.shortSlurHeight",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "slurOptions.longSlurHeight",
      "valueType": "kStaveUnit",
      "currentValue": "3",
      "enumValues": null
    },
    {
      "path": "slurOptions.shortSlurThresholdForHeight",
      "valueType": "kStaveUnit",
      "currentValue": "3",
      "enumValues": null
    },
    {
      "path": "slurOptions.longSlurThresholdForHeight",
      "valueType": "kStaveUnit",
      "currentValue": "40",
      "enumValues": null
    },
    {
      "path": "slurOptions.shortSlurShoulder",
      "valueType": "kRationalInt32",
      "currentValue": "1/3",
      "enumValues": null
    },
    {
      "path": "slurOptions.longSlurShoulder",
      "valueType": "kRationalInt32",
      "currentValue": "1/3",
      "enumValues": null
    },
    {
      "path": "slurOptions.shortSlurThresholdForShoulder",
      "valueType": "kStaveUnit",
      "currentValue": "7",
      "enumValues": null
    },
    {
      "path": "slurOptions.longSlurThresholdForShoulder",
      "valueType": "kStaveUnit",
      "currentValue": "32",
      "enumValues": null
    },
    {
      "path": "slurOptions.slurEndThickness",
      "valueType": "kStaveUnit",
      "currentValue": "1/10",
      "enumValues": null
    },
    {
      "path": "slurOptions.slurMiddleThickness",
      "valueType": "kStaveUnit",
      "currentValue": "11/50",
      "enumValues": null
    },
    {
      "path": "slurOptions.dashedSlurDashLength",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "slurOptions.dashedSlurGapLength",
      "valueType": "kStaveUnit",
      "currentValue": "1/3",
      "enumValues": null
    },
    {
      "path": "slurOptions.dottedSlurGapLength",
      "valueType": "kStaveUnit",
      "currentValue": "1/3",
      "enumValues": null
    },
    {
      "path": "slurOptions.dottedSlurDotDiameter",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "slurOptions.editorialSlurStrokeLength",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "slurOptions.editorialSlurStrokeLineWidth",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "slurOptions.slurToSlurVerticalGap",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "slurOptions.slurToSlurHorizontalGap",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "slurOptions.slurRouterMaximumEndPointDistance",
      "valueType": "kStaveUnit",
      "currentValue": "4",
      "enumValues": null
    },
    {
      "path": "slurOptions.slurRouterMaximumHeightIncrease",
      "valueType": "kStaveUnit",
      "currentValue": "4",
      "enumValues": null
    },
    {
      "path": "slurOptions.slurRouterHeightVsEndPoint",
      "valueType": "kInt32",
      "currentValue": "50",
      "enumValues": null
    },
    {
      "path": "slurOptions.slurRouterMaximumAngle",
      "valueType": "kInt32",
      "currentValue": "35",
      "enumValues": null
    },
    {
      "path": "slurOptions.slurRouterMaximumAngleCrossStave",
      "valueType": "kInt32",
      "currentValue": "50",
      "enumValues": null
    },
    {
      "path": "slurOptions.slurRouterSymmetricEndPointDistance",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "slurOptions.slurRouterSymmetricShoulder",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "slurOptions.slurVerticalGapInside",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "slurOptions.slurCanCrossFlatAccidentalStem",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "slurOptions.flatAccidentalStemMaximumProtrusion",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "slurOptions.slurCanCrossNaturalAccidentalStem",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "slurOptions.naturalAccidentalStemMaximumProtrusion",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "slurOptions.slurCanCrossSharpAccidentalStem",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "slurOptions.sharpAccidentalStemMaximumProtrusion",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "slurOptions.enableCollisonAvoidanceForCrossStaveSlur",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "slurOptions.gapForSlursContinuingOverSystemBreaks",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "slurOptions.slurCurvature",
      "valueType": "kEnum",
      "currentValue": "kCurvedSlur",
      "enumValues": [
        "kCurvedSlur",
        "kFlatSlur"
      ]
    },
    {
      "path": "slurOptions.flatSlurEndThickness",
      "valueType": "kStaveUnit",
      "currentValue": "1/12",
      "enumValues": null
    },
    {
      "path": "slurOptions.flatSlurMiddleThickness",
      "valueType": "kStaveUnit",
      "currentValue": "1/5",
      "enumValues": null
    },
    {
      "path": "slurOptions.longFlatSlurHeight",
      "valueType": "kStaveUnit",
      "currentValue": "3/2",
      "enumValues": null
    },
    {
      "path": "slurOptions.shortFlatSlurHeight",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "slurOptions.flatSlurShoulder",
      "valueType": "kRationalInt32",
      "currentValue": "1/10",
      "enumValues": null
    },
    {
      "path": "slurOptions.slursAlwaysAbove",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "slurOptions.specialGraceNoteSlurOptions.vOffsetAtRightHandEndNoteOnStaveLineSingleVoice",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "slurOptions.specialGraceNoteSlurOptions.vOffsetAtRightHandEndNoteInSpaceSingleVoice",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "slurOptions.specialGraceNoteSlurOptions.hOffsetAtRightHandEndNoteSingleVoice",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "slurOptions.specialGraceNoteSlurOptions.hOffsetAtLeftHandEndMultiVoice",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "slurOptions.specialGraceNoteSlurOptions.hOffsetAtRightHandEndMultiVoice",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "slurOptions.specialGraceNoteSlurOptions.vOffsetAtLeftHandEndMultiVoice",
      "valueType": "kStaveUnit",
      "currentValue": "3/2",
      "enumValues": null
    },
    {
      "path": "slurOptions.specialGraceNoteSlurOptions.vOffsetAtRightHandEndMultiVoice",
      "valueType": "kStaveUnit",
      "currentValue": "3/2",
      "enumValues": null
    },
    {
      "path": "slurOptions.specialGraceNoteSlurOptions.slurEndTieChainPosition",
      "valueType": "kEnum",
      "currentValue": "kTieChainStart",
      "enumValues": [
        "kTieChainStart",
        "kTieChainEnd"
      ]
    },
    {
      "path": "slurOptions.slurStartTieChainPosition",
      "valueType": "kEnum",
      "currentValue": "kTieChainStart",
      "enumValues": [
        "kTieChainStart",
        "kTieChainEnd"
      ]
    },
    {
      "path": "slurOptions.slurEndTieChainPosition",
      "valueType": "kEnum",
      "currentValue": "kTieChainEnd",
      "enumValues": [
        "kTieChainStart",
        "kTieChainEnd"
      ]
    },
    {
      "path": "slurOptions.treatBeamEndAsUnbeamedStem",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "slurOptions.interpolateVPositionAtSystemBreak",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "slurOptions.minimumVGapToStaveLineAtSystemBreak",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "slurOptions.findCrossStaveSlursCrossingPoint",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "slurOptions.positionMixedStemSlurEndPointsNearNotehead",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "slurOptions.avoidArticulationAtMixedStemSlurEndPoints",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "slurOptions.enableSlurRouting",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "accidentalStackerCalcOptions.alignOuterAccidentalsInWidelySpacedChords",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "accidentalStackerCalcOptions.accidentalsReflectDirectionOfAdjacentNotes",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "accidentalStackerCalcOptions.accidentalsFollowNoteheadsInTwoVoiceChordsAndSeconds",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "accidentalStackerCalcOptions.useDiagonalArrangementForDenseChords",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "accidentalStackerCalcOptions.shouldIntersperseColumnsWhenUsingDiagonalArrangement",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "accidentalStackerCalcOptions.allowAccidentalsToTuckAmongstLedgerLines",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "accidentalStackerCalcOptions.interStackPadding",
      "valueType": "kStaveUnit",
      "currentValue": "1/6",
      "enumValues": null
    },
    {
      "path": "accidentalStackerCalcOptions.interStackPaddingForOverlappingStacks",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "accidentalStackerCalcOptions.opticallyAdjustDistanceBetweenAccidentalColumns",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "accidentalStackerCalcOptions.stackOverlapPercentage",
      "valueType": "kInt",
      "currentValue": "60",
      "enumValues": null
    },
    {
      "path": "accidentalStackerCalcOptions.backNoteOverlapPercentage",
      "valueType": "kInt",
      "currentValue": "60",
      "enumValues": null
    },
    {
      "path": "accidentalStackerCalcOptions.additionalGapToApplyToAdjacentStacksWithAbuttingStraightEdges",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "accidentalStackerCalcOptions.marginAtRightOfAccidentalGroupForNatural",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "accidentalStackerCalcOptions.marginAtRightOfAccidentalGroupForFlats",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "accidentalStackerCalcOptions.marginAtRightOfAccidentalGroupForSharp",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "accidentalStackerCalcOptions.marginAtRightOfAccidentalGroupForAllOtherAccidentals",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "accidentalStackerCalcOptions.marginAtLeftOfAccidentalGroup",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "accidentalStackerCalcOptions.minimumGapBetweenAccidentalsInSameStack",
      "valueType": "kStaveUnit",
      "currentValue": "1/5",
      "enumValues": null
    },
    {
      "path": "accidentalStackerCalcOptions.minimumGapBetweenAccidentalAndNoteheadInSameStack",
      "valueType": "kStaveUnit",
      "currentValue": "1/10",
      "enumValues": null
    },
    {
      "path": "accidentalStackerCalcOptions.preferFixedMeasurementsToImproveCommonAccidentals",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "accidentalStackerCalcOptions.gapAroundParenthesisedAccidentals",
      "valueType": "kStaveUnit",
      "currentValue": "1/6",
      "enumValues": null
    },
    {
      "path": "accidentalStackerCalcOptions.gapAroundBulbousSideOfParenthesisedFlats",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "accidentalStackerCalcOptions.preventMeasurementOfAccidentalsUsingComposites",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "accidentalStackerCalcOptions.marginAtRightOfAccidentalGroupForUnshortenedLedgerLines",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "accidentalStackerCalcOptions.marginAtRightOfAccidentalGroupWithRightmostFlatForUnshortenedLedgerLines",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "accidentalStackerCalcOptions.marginAtRightOfAccidentalGroupForBackNotes",
      "valueType": "kStaveUnit",
      "currentValue": "3/25",
      "enumValues": null
    },
    {
      "path": "accidentalStackerCalcOptions.marginAtRightOfAccidentalGroupWithRightmostFlatForUnshortenedLedgerLinesOnLine",
      "valueType": "kStaveUnit",
      "currentValue": "2/3",
      "enumValues": null
    },
    {
      "path": "accidentalStackerCalcOptions.applyAdditionalSpaceAroundSharpsNearUnshortenedLedgerLines",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "staffLabelOptions.staffLabelRightPadding",
      "valueType": "kStaveUnit",
      "currentValue": "3",
      "enumValues": null
    },
    {
      "path": "staffLabelOptions.staffGroupLabelRightPadding",
      "valueType": "kStaveUnit",
      "currentValue": "3",
      "enumValues": null
    },
    {
      "path": "staffLabelOptions.ossiaStaffLabelRightPadding",
      "valueType": "kStaveUnit",
      "currentValue": "3",
      "enumValues": null
    },
    {
      "path": "staffLabelOptions.bracedOssiaStaffLabelRightPadding",
      "valueType": "kStaveUnit",
      "currentValue": "4",
      "enumValues": null
    },
    {
      "path": "staffLabelOptions.soloPlayerInstrumentSuffixType",
      "valueType": "kEnum",
      "currentValue": "kArabic",
      "enumValues": [
        "kArabic",
        "kRoman"
      ]
    },
    {
      "path": "staffLabelOptions.sectionPlayerInstrumentSuffixType",
      "valueType": "kEnum",
      "currentValue": "kRoman",
      "enumValues": [
        "kArabic",
        "kRoman"
      ]
    },
    {
      "path": "staffLabelOptions.vocalStaffLabelsCapitalised",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "staffLabelOptions.groupSingleStaveInstrumentLabels",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "staffLabelOptions.considerInstrumentTranspositionWhenNumbering",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "staffLabelOptions.showVoiceAllocationOnCondensedStaves",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "staffLabelOptions.listCondensedPlayersVertically",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "staffLabelOptions.sectionPlayerUnisLabel",
      "valueType": "kString",
      "currentValue": "unis.",
      "enumValues": null
    },
    {
      "path": "staffLabelOptions.useDivisiGroupNamesForCondensedStaves",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "staffLabelOptions.alignGroupLabelsWithFirstStaffInGroup",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "staffLabelOptions.groupSingleStaveInstrumentLabelsForSectionPlayers",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "staffLabelOptions.showBracketForPlayerGroupLabels",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "staffLabelOptions.playerGroupBracketPenThickness",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "staffLabelOptions.playerGroupBracketHookLength",
      "valueType": "kStaveUnit",
      "currentValue": "5/4",
      "enumValues": null
    },
    {
      "path": "staffLabelOptions.horizontalGapBetweenPlayerGroupAndStaffLabels",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "staffLabelOptions.horizontalGapBetweenPlayerGroupBracketsAndLabels",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "staffLabelOptions.positionPlayerGroupLabelsOnBrackets",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "staffLabelOptions.playerGroupLabelsErasureExtentsWhenOnBracket",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "staffLabelOptions.addPeriodAfterShortName",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "staffLabelOptions.rightPaddingBetweenNormalAndInnerLabels",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "staffLabelOptions.smartenQuotesInStaffLabels",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "keySignatureOptions.horizontalGapBetweenAccidentalsInKeySignatures",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "keySignatureOptions.horizontalGapBetweenCancellationNaturalsInKeySignatures",
      "valueType": "kStaveUnit",
      "currentValue": "2/5",
      "enumValues": null
    },
    {
      "path": "keySignatureOptions.keySignatureCancellationBehaviour",
      "valueType": "kEnum",
      "currentValue": "kContemporary",
      "enumValues": [
        "kContemporary",
        "kTraditional",
        "kRussian"
      ]
    },
    {
      "path": "keySignatureOptions.keySignatureBackgroundErasure",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "keySignatureOptions.keySignatureBackgroundErasureWidth",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "glissandoLineOptions.glissandoLineType",
      "valueType": "kEnum",
      "currentValue": "kFlatLine",
      "enumValues": [
        "kFlatLine",
        "kWavyLine"
      ]
    },
    {
      "path": "glissandoLineOptions.glissandoLineText",
      "valueType": "kEnum",
      "currentValue": "kGliss",
      "enumValues": [
        "kGliss",
        "kPort",
        "kNoText"
      ]
    },
    {
      "path": "glissandoLineOptions.flatGlissandoLineThickness",
      "valueType": "kStaveUnit",
      "currentValue": "1/9",
      "enumValues": null
    },
    {
      "path": "glissandoLineOptions.horizontalGapBeforeAndAfterNotes",
      "valueType": "kStaveUnit",
      "currentValue": "1/3",
      "enumValues": null
    },
    {
      "path": "glissandoLineOptions.verticalOffsetFromCentreOfNoteInSpace",
      "valueType": "kStaveUnit",
      "currentValue": "1/10",
      "enumValues": null
    },
    {
      "path": "glissandoLineOptions.verticalOffsetFromCentreOfNoteOnStaveLine",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "glissandoLineOptions.verticalOffsetFromCentreOfNoteOnLedgerLine",
      "valueType": "kStaveUnit",
      "currentValue": "1/3",
      "enumValues": null
    },
    {
      "path": "glissandoLineOptions.forcedVerticalSpanOfGlissLinesBetweenNotesAtSameStavePosition",
      "valueType": "kStaveUnit",
      "currentValue": "2/5",
      "enumValues": null
    },
    {
      "path": "glissandoLineOptions.forcedVerticalSpanOfGlissLinesBetweenNotesAtSameStavePositionOnStaveLine",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "glissandoLineOptions.additionalVerticalSpanForGlissLinesBetweenNotesAtAdjacentStavePositions",
      "valueType": "kStaveUnit",
      "currentValue": "1/3",
      "enumValues": null
    },
    {
      "path": "glissandoLineOptions.horizontalGapAfterRhythmDots",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "glissandoLineOptions.horizontalGapBeforeAccidentals",
      "valueType": "kStaveUnit",
      "currentValue": "1/6",
      "enumValues": null
    },
    {
      "path": "glissandoLineOptions.horizontalGapBeforeAndAfterOtherNoteheads",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "glissandoLineOptions.horizontalGapAtEndOfSystem",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "glissandoLineOptions.horizontalGapAtStartOfSystem",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "glissandoLineOptions.gapBetweenLineAndText",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "glissandoLineOptions.minimumSpaceToLeaveEitherSideOfText",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "glissandoLineOptions.minimumHorizontalSpanForGlissandoLines",
      "valueType": "kStaveUnit",
      "currentValue": "3",
      "enumValues": null
    },
    {
      "path": "glissandoLineOptions.minimumHorizontalSpanForGlissandoLinesFromGraceNotes",
      "valueType": "kStaveUnit",
      "currentValue": "2",
      "enumValues": null
    },
    {
      "path": "glissandoLineOptions.horizontalGapBeforeAndAfterIntraStaveFingerings",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "glissandoLineOptions.glissandoLinesAvoidNoteFlags",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "glissandoLineOptions.horizontalGapBeforeAndAfterNoteFlags",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "glissandoLineOptions.horizontalGapBeforeAndAfterNoteheadParentheses",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.lineThickness",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.minimumHorizontalSpanForBend",
      "valueType": "kStaveUnit",
      "currentValue": "3",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.minimumHorizontalSpanForBendFromGraceNote",
      "valueType": "kStaveUnit",
      "currentValue": "2",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.minimumHorizontalSpanForPreBend",
      "valueType": "kStaveUnit",
      "currentValue": "2",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.horizontalOffsetFromCentreOfNoteInSpace",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.horizontalOffsetFromCentreOfNoteOnStaveLine",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.horizontalOffsetFromCentreOfNoteOnLedgerLine",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.verticalGapFromNoteheadInSpace",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.verticalGapFromNoteheadOnLine",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.verticalGapBetweenLineEndAndBeam",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.bendHeight",
      "valueType": "kStaveUnit",
      "currentValue": "3/2",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.preBendHeight",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.bendToBendHorizontalGap",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.vibratoBarBendProtrusionBelowTab",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.bendProtrusionAboveTab",
      "valueType": "kStaveUnit",
      "currentValue": "7/2",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.verticalOffsetAtStartNoteheadOnTab",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.horizontalGapAtStartNoteheadOnTab",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.verticalGapAtEndNoteheadOnTab",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.horizontalOffsetAtEndNoteheadOnTab",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.gapBeforeEndOfSystemOnTab",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.horizontalGapAtHoldLineEndOnTab",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.showWholeToneIntervalWithTextOnTab",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.showHalfToneIntervalWithFractionGlyphOnTab",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.gapBeetwenArrowHeadAndIntervalOnTab",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.minimumHorizontalSpanForBendOnTab",
      "valueType": "kStaveUnit",
      "currentValue": "3",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.visibilityOfReleaseEndNote",
      "valueType": "kEnum",
      "currentValue": "kParenthesise",
      "enumValues": [
        "kHide",
        "kShow",
        "kParenthesise"
      ]
    },
    {
      "path": "guitarBendEngravingOptions.dashedHoldLinesOnTab",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.vibratoBarBendRangeOutsideTab",
      "valueType": "kStaveUnit",
      "currentValue": "3",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.bendRangeOutsideTab",
      "valueType": "kStaveUnit",
      "currentValue": "3",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.placeBendOutsideNoteheadObstructions",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.drawPreBendRestrikesAsHoldLine",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.postBendHorizontalOffsetFromCentreOfNoteInSpace",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.postBendVerticalGapFromNoteheadInSpace",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.postBendHorizontalOffsetFromCentreOfNoteOnStaveLine",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.postBendVerticalGapFromNoteheadOnLine",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.postBendProtrusionAboveNotationStave",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.postBendHorizontalExtent",
      "valueType": "kStaveUnit",
      "currentValue": "2",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.postBendMinimumHeight",
      "valueType": "kStaveUnit",
      "currentValue": "2",
      "enumValues": null
    },
    {
      "path": "guitarBendEngravingOptions.postBendShowMicrotoneIntervalAsQuarter",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "guitarTechniquesEngravingOptions.guitarTapAppearance",
      "valueType": "kEnum",
      "currentValue": "kLetterT",
      "enumValues": [
        "kLetterT",
        "kPlusSign",
        "kDot"
      ]
    },
    {
      "path": "guitarTechniquesEngravingOptions.amalgamateAndCentreOverSlurredNoteRuns",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "guitarTechniquesEngravingOptions.guitarTechniqueVisibility",
      "valueType": "kEnum",
      "currentValue": "kNotationStaveOnly",
      "enumValues": [
        "kNotationStaveOnly",
        "kTabStaveOnly",
        "kNotationAndTabStaves"
      ]
    },
    {
      "path": "guitarTechniquesEngravingOptions.guitarTechniquePositionOnTabStave",
      "valueType": "kEnum",
      "currentValue": "kInside",
      "enumValues": [
        "kInside",
        "kOutside"
      ]
    },
    {
      "path": "guitarTechniquesEngravingOptions.placementOnNotationStave",
      "valueType": "kEnum",
      "currentValue": "kAboveStave",
      "enumValues": [
        "kAboveStave",
        "kBelowStave",
        "kOutsideStaveFollowSlur",
        "kInsideStaveFollowSlur"
      ]
    },
    {
      "path": "guitarTechniquesEngravingOptions.placementOnTabStave",
      "valueType": "kEnum",
      "currentValue": "kAboveStave",
      "enumValues": [
        "kAboveStave",
        "kBelowStave",
        "kOutsideStaveFollowSlur",
        "kInsideStaveFollowSlur"
      ]
    },
    {
      "path": "guitarTechniquesEngravingOptions.scoopHorizontalOffsetFromNotehead",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "guitarTechniquesEngravingOptions.scoopVerticalOffsetFromNotehead",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "guitarTechniquesEngravingOptions.dipMinimumVerticalDistanceFromStave",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "guitarTechniquesEngravingOptions.dipMinimumVerticalDistanceFromStaveProfile",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "guitarTechniquesEngravingOptions.dipVerticalPositionOfText",
      "valueType": "kStaveUnit",
      "currentValue": "2",
      "enumValues": null
    },
    {
      "path": "guitarTechniquesEngravingOptions.guitarTechniqueMinimumVerticalDistanceFromStave",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "guitarTechniquesEngravingOptions.guitarTechniqueMinimumVerticalDistanceFromStaveProfile",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "guitarTechniquesEngravingOptions.scoopVisibility",
      "valueType": "kEnum",
      "currentValue": "kNotationStaveOnly",
      "enumValues": [
        "kNotationStaveOnly",
        "kTabStaveOnly",
        "kNotationAndTabStaves"
      ]
    },
    {
      "path": "guitarTechniquesEngravingOptions.dipVisibility",
      "valueType": "kEnum",
      "currentValue": "kNotationStaveOnly",
      "enumValues": [
        "kNotationStaveOnly",
        "kTabStaveOnly",
        "kNotationAndTabStaves"
      ]
    },
    {
      "path": "tempoOptions.gradualTempoChangeContinuationLineAppearance",
      "valueType": "kEnum",
      "currentValue": "kDotted",
      "enumValues": [
        "kSolid",
        "kDotted",
        "kDashed"
      ]
    },
    {
      "path": "tempoOptions.hyphenatedGradualChangeTempoLineAppearance",
      "valueType": "kEnum",
      "currentValue": "kDashed",
      "enumValues": [
        "kSolid",
        "kDotted",
        "kDashed"
      ]
    },
    {
      "path": "tempoOptions.gradualContinuationLineDotDiameter",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "tempoOptions.gradualContinuationLineDotGap",
      "valueType": "kStaveUnit",
      "currentValue": "1/3",
      "enumValues": null
    },
    {
      "path": "tempoOptions.gradualContinuationLineDashLength",
      "valueType": "kStaveUnit",
      "currentValue": "1/3",
      "enumValues": null
    },
    {
      "path": "tempoOptions.gradualContinuationLineDashGap",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "tempoOptions.gradualContinuationLinePenWidth",
      "valueType": "kStaveUnit",
      "currentValue": "1/6",
      "enumValues": null
    },
    {
      "path": "tempoOptions.gradualHyphenationLineDotDiameter",
      "valueType": "kStaveUnit",
      "currentValue": "1/5",
      "enumValues": null
    },
    {
      "path": "tempoOptions.gradualHyphenationLineDotGap",
      "valueType": "kStaveUnit",
      "currentValue": "3",
      "enumValues": null
    },
    {
      "path": "tempoOptions.gradualHyphenationLineDashLength",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "tempoOptions.gradualHyphenationLineDashGap",
      "valueType": "kStaveUnit",
      "currentValue": "3",
      "enumValues": null
    },
    {
      "path": "tempoOptions.gradualHyphenationLinePenWidth",
      "valueType": "kStaveUnit",
      "currentValue": "1/6",
      "enumValues": null
    },
    {
      "path": "tempoOptions.tempoDecimalPlaces",
      "valueType": "kInt",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "tempoOptions.approximateAppearance",
      "valueType": "kEnum",
      "currentValue": "kC",
      "enumValues": [
        "kC",
        "kCa",
        "kCaWithoutDot",
        "kCirca",
        "kApprox",
        "kApproximatelyEqualsSign"
      ]
    },
    {
      "path": "tempoOptions.includeEqualsInApproximateTempo",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "tempoOptions.minimumDistanceFromStave",
      "valueType": "kStaveUnit",
      "currentValue": "3",
      "enumValues": null
    },
    {
      "path": "tempoOptions.positioningWithRehearsalMarks",
      "valueType": "kEnum",
      "currentValue": "kOffsetToRight",
      "enumValues": [
        "kOffsetToRight",
        "kPositionBelow"
      ]
    },
    {
      "path": "tempoOptions.gapBetweenRehearsalMarkAndTempoChange",
      "valueType": "kStaveUnit",
      "currentValue": "2/3",
      "enumValues": null
    },
    {
      "path": "tempoOptions.gradualTempoAppearance",
      "valueType": "kEnum",
      "currentValue": "kTextWithLine",
      "enumValues": [
        "kText",
        "kTextWithLine",
        "kHyphenatedText"
      ]
    },
    {
      "path": "tempoOptions.abbreviateUnhyphenatedTempoChanges",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "tempoOptions.gapBetweenTempoAndBarline",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "tempoOptions.minimumDistanceAfterBarlineToContinueTempoBeyondBarline",
      "valueType": "kStaveUnit",
      "currentValue": "4",
      "enumValues": null
    },
    {
      "path": "tempoOptions.alwaysCompleteTempoChangesBeforeEndOfBar",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "tempoOptions.gapBetweenNeighbouringTempoMarks",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "tempoOptions.minimumGapAboveOrBelowOtherObjects",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "tempoOptions.gapBetweenTextAndContinuationLine",
      "valueType": "kStaveUnit",
      "currentValue": "2/5",
      "enumValues": null
    },
    {
      "path": "tempoOptions.alignWithTimeSignatureIfNeedsToMoveVertically",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "tempoOptions.useCustomTempoRangeSeparator",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "tempoOptions.tempoRangeSeparator",
      "valueType": "kString",
      "currentValue": " - ",
      "enumValues": null
    },
    {
      "path": "tempoOptions.useArrowsOnTempoEquations",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "tempoOptions.metronomeMarkOrderRelativeToTempoWords",
      "valueType": "kEnum",
      "currentValue": "kAfter",
      "enumValues": [
        "kBefore",
        "kAfter"
      ]
    },
    {
      "path": "rehearsalMarkOptions.enclosureType",
      "valueType": "kEnum",
      "currentValue": "kRectangle",
      "enumValues": [
        "kRectangle",
        "kRoundedRectangle",
        "kCircle",
        "kNone"
      ]
    },
    {
      "path": "rehearsalMarkOptions.defaultSequenceType",
      "valueType": "kEnum",
      "currentValue": "kLetters",
      "enumValues": [
        "kLetters",
        "kNumbers",
        "kBarNumbers"
      ]
    },
    {
      "path": "rehearsalMarkOptions.rehearsalMarkCustomPrefix",
      "valueType": "kString",
      "currentValue": "",
      "enumValues": null
    },
    {
      "path": "rehearsalMarkOptions.rehearsalMarkCustomSuffix",
      "valueType": "kString",
      "currentValue": "",
      "enumValues": null
    },
    {
      "path": "rehearsalMarkOptions.rehearsalMarkCustomInfix",
      "valueType": "kString",
      "currentValue": "",
      "enumValues": null
    },
    {
      "path": "rehearsalMarkOptions.insertInfixBetweenFinalPairOfCharacters",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "rehearsalMarkOptions.minimumWidthForRectangularMarks",
      "valueType": "kStaveUnit",
      "currentValue": "4",
      "enumValues": null
    },
    {
      "path": "rehearsalMarkOptions.minimumHeightForRectangularMarks",
      "valueType": "kStaveUnit",
      "currentValue": "4",
      "enumValues": null
    },
    {
      "path": "rehearsalMarkOptions.minimumDiameterForCircularMarks",
      "valueType": "kStaveUnit",
      "currentValue": "4",
      "enumValues": null
    },
    {
      "path": "rehearsalMarkOptions.minimumHorizontalPaddingAroundRectangularMarks",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "rehearsalMarkOptions.minimumTopPaddingAroundRectangularMarks",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "rehearsalMarkOptions.minimumBottomPaddingAroundRectangularMarks",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "rehearsalMarkOptions.minimumPaddingAroundCircularMarks",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "rehearsalMarkOptions.minimumDistanceFromStave",
      "valueType": "kStaveUnit",
      "currentValue": "3",
      "enumValues": null
    },
    {
      "path": "rehearsalMarkOptions.rehearsalMarkBaseAlignment",
      "valueType": "kEnum",
      "currentValue": "kBottomOfText",
      "enumValues": [
        "kBottomOfText",
        "kBottomOfEnclosure"
      ]
    },
    {
      "path": "rehearsalMarkOptions.rehearsalMarkEnclosurePenWidth",
      "valueType": "kStaveUnit",
      "currentValue": "4/25",
      "enumValues": null
    },
    {
      "path": "rehearsalMarkOptions.sequenceTypeForAlphabetics",
      "valueType": "kEnum",
      "currentValue": "kAA_BB_CC",
      "enumValues": [
        "kAA_BB_CC",
        "kAA_AB_AC"
      ]
    },
    {
      "path": "rehearsalMarkOptions.noteRelativeHorizontalAlignment",
      "valueType": "kEnum",
      "currentValue": "kCentre",
      "enumValues": [
        "kLeft",
        "kCentre",
        "kRight"
      ]
    },
    {
      "path": "rehearsalMarkOptions.minimumGapAboveOrBelowOtherObjects",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "rehearsalMarkOptions.minimumGapBetweenOtherObjects",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "rehearsalMarkOptions.alignRehearsalMarksAtStartOfSystemWithSystemicBarline",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "rehearsalMarkOptions.gapForRehearsalMarksAlignedWithSystemicBarline",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "rehearsalMarkOptions.roundRectCornerRadius",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "languageOptions.instrumentNamesLanguage",
      "valueType": "kEnum",
      "currentValue": "kEnglish",
      "enumValues": [
        "kEnglish",
        "kFrench",
        "kGerman",
        "kItalian",
        "kSpanish",
        "kJapanese",
        "kSimplifiedChinese",
        "kPortuguese",
        "kRussian",
        "kPseudo",
        "kMirror"
      ]
    },
    {
      "path": "languageOptions.tempoObjectsLanguage",
      "valueType": "kEnum",
      "currentValue": "kItalian",
      "enumValues": [
        "kEnglish",
        "kFrench",
        "kGerman",
        "kItalian",
        "kSpanish",
        "kJapanese",
        "kSimplifiedChinese",
        "kPortuguese",
        "kRussian",
        "kPseudo",
        "kMirror"
      ]
    },
    {
      "path": "languageOptions.dateTimeLanguage",
      "valueType": "kEnum",
      "currentValue": "kEnglish",
      "enumValues": [
        "kEnglish",
        "kFrench",
        "kGerman",
        "kItalian",
        "kSpanish",
        "kJapanese",
        "kSimplifiedChinese",
        "kPortuguese",
        "kRussian",
        "kPseudo",
        "kMirror"
      ]
    },
    {
      "path": "languageOptions.useAccidentalSymbolsInInstrumentNames",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "languageOptions.useEnglishNoteNamesInGermanInstrumentNames",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "languageOptions.useLowerCaseNoteNamesInInstrumentNames",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "languageOptions.useAlternativeNoteNameForCInFrench",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "languageOptions.resetInstrumentNamesWhenChangingLanguage",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "languageOptions.repeatCountLanguage",
      "valueType": "kEnum",
      "currentValue": "kEnglish",
      "enumValues": [
        "kEnglish",
        "kFrench",
        "kGerman",
        "kItalian",
        "kSpanish",
        "kJapanese",
        "kSimplifiedChinese",
        "kPortuguese",
        "kRussian",
        "kPseudo",
        "kMirror"
      ]
    },
    {
      "path": "lyricOptions.idealDistanceFromStave",
      "valueType": "kStaveUnit",
      "currentValue": "3/2",
      "enumValues": null
    },
    {
      "path": "lyricOptions.distanceBetweenLyricLines",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "lyricOptions.extenderLineMinimumWidth",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "lyricOptions.extenderLineThickness",
      "valueType": "kStaveUnit",
      "currentValue": "4/25",
      "enumValues": null
    },
    {
      "path": "lyricOptions.extenderLineGapAtStart",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "lyricOptions.extenderLineGapAtEndOfSystem",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "lyricOptions.minimumSpaceForHyphen",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "lyricOptions.gapBetweenHyphens",
      "valueType": "kStaveUnit",
      "currentValue": "15/2",
      "enumValues": null
    },
    {
      "path": "lyricOptions.gapBetweenLyricAndHyphen",
      "valueType": "kStaveUnit",
      "currentValue": "2",
      "enumValues": null
    },
    {
      "path": "lyricOptions.hyphenGapCompressibility",
      "valueType": "kRationalInt32",
      "currentValue": "1/5",
      "enumValues": null
    },
    {
      "path": "lyricOptions.showVerseNumbers",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "lyricOptions.appendFullStopToVerseNumbers",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "lyricOptions.distanceBetweenLyricAndVerseNumber",
      "valueType": "kStaveUnit",
      "currentValue": "3/2",
      "enumValues": null
    },
    {
      "path": "lyricOptions.adjustableLyricExtentPercentage",
      "valueType": "kRationalInt32",
      "currentValue": "7/10",
      "enumValues": null
    },
    {
      "path": "lyricOptions.minimumGapBetweenLyrics",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "lyricOptions.paddingBeforeLyrics",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "lyricOptions.showElisionSlursForEastAsianLyrics",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "lyricOptions.repeatVerseNumbersOnEverySystem",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "lyricOptions.lyricHyphen",
      "valueType": "kString",
      "currentValue": "-",
      "enumValues": null
    },
    {
      "path": "lyricOptions.showLyricHyphenAtStartOfSystem",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "lyricOptions.elisionScaleFactor",
      "valueType": "kDouble",
      "currentValue": "0.500000",
      "enumValues": null
    },
    {
      "path": "lyricOptions.ignoreHangingPunctuation",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "lyricOptions.wholeWordAlignment",
      "valueType": "kEnum",
      "currentValue": "kCentre",
      "enumValues": [
        "kLeft",
        "kCentre",
        "kRight"
      ]
    },
    {
      "path": "lyricOptions.startAlignment",
      "valueType": "kEnum",
      "currentValue": "kCentre",
      "enumValues": [
        "kLeft",
        "kCentre",
        "kRight"
      ]
    },
    {
      "path": "lyricOptions.middleAlignment",
      "valueType": "kEnum",
      "currentValue": "kCentre",
      "enumValues": [
        "kLeft",
        "kCentre",
        "kRight"
      ]
    },
    {
      "path": "lyricOptions.endAlignment",
      "valueType": "kEnum",
      "currentValue": "kCentre",
      "enumValues": [
        "kLeft",
        "kCentre",
        "kRight"
      ]
    },
    {
      "path": "lyricOptions.melismaAlignment",
      "valueType": "kEnum",
      "currentValue": "kLeft",
      "enumValues": [
        "kLeft",
        "kCentre",
        "kRight"
      ]
    },
    {
      "path": "lyricOptions.overrideAlignmentForFirstLyricOnSystem",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "lyricOptions.firstLyricOnSystemAlignment",
      "valueType": "kEnum",
      "currentValue": "kLeft",
      "enumValues": [
        "kLeft",
        "kCentre",
        "kRight"
      ]
    },
    {
      "path": "lyricOptions.centreAlignWidestLyricForFirstLyricOnSystem",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "lyricOptions.useJapaneseHyphensInsteadOfExtenderLines",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "lyricOptions.useFollowingLyricParagraphStyleForVerseNumber",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "barlineOptions.thinBarlineThickness",
      "valueType": "kStaveUnit",
      "currentValue": "4/25",
      "enumValues": null
    },
    {
      "path": "barlineOptions.thickBarlineThickness",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "barlineOptions.doubleBarlineGap",
      "valueType": "kStaveUnit",
      "currentValue": "2/5",
      "enumValues": null
    },
    {
      "path": "barlineOptions.finalOrRepeatBarlineGap",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "barlineOptions.thickThickRepeatBarlineGap",
      "valueType": "kStaveUnit",
      "currentValue": "2/5",
      "enumValues": null
    },
    {
      "path": "barlineOptions.gapBetweenOutermostLineAndRepeatDots",
      "valueType": "kStaveUnit",
      "currentValue": "4/25",
      "enumValues": null
    },
    {
      "path": "barlineOptions.repeatBarlineDotBehaviour",
      "valueType": "kEnum",
      "currentValue": "kShowEitherSideOfMiddleStaveLine",
      "enumValues": [
        "kShowEitherSideOfMiddleStaveLine",
        "kShowInAllSpacesOnStave"
      ]
    },
    {
      "path": "barlineOptions.coincidentStartAndEndRepeatBarlineBehaviour",
      "valueType": "kEnum",
      "currentValue": "kThinThickThin",
      "enumValues": [
        "kThinThickThin",
        "kThickThick",
        "kThinThin"
      ]
    },
    {
      "path": "barlineOptions.dashedBarlineDashLength",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "barlineOptions.dashedBarlineGapLength",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "barlineOptions.showDoubleBarlinesAtChangesOfKeySignature",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "barlineOptions.breakBarlinesOnVocalStaves",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "barlineOptions.joinCoincidentBarlinesOfStavesInDifferentTimeSignatures",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "barlineOptions.startRepeatAtStartOfNewSystemShowsDoubleBarlineOnPreviousSystem",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "barlineOptions.showDoubleBarlineBeforeMidSystemGap",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "barlineOptions.barlineLengthForSingleLineInstruments",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "barlineOptions.maxNumberOfStaveLinesForSingleLineBarlineLength",
      "valueType": "kInt",
      "currentValue": "2",
      "enumValues": null
    },
    {
      "path": "barlineOptions.barlinesOnPercussionGridsAlwaysProtrude",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "barlineOptions.showWingsOnRepeatBarlines",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "barlineOptions.additionalThickBarlineProtrusionForWings",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "barlineOptions.ossiaBarlineBehaviour",
      "valueType": "kEnum",
      "currentValue": "kAtStartAndEnd",
      "enumValues": [
        "kAtStartAndEnd",
        "kEndOnly",
        "kNone"
      ]
    },
    {
      "path": "barlineOptions.ossiaBarlineJoinType",
      "valueType": "kEnum",
      "currentValue": "kSolid",
      "enumValues": [
        "kNone",
        "kSolid",
        "kDashed"
      ]
    },
    {
      "path": "barlineOptions.ossiaBarlineJoinDashLength",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "barlineOptions.ossiaBarlineJoinDashGap",
      "valueType": "kStaveUnit",
      "currentValue": "1/3",
      "enumValues": null
    },
    {
      "path": "barlineOptions.showBarlinesForStartRepeatAtStartOfSystem",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "barlineOptions.joinOssiaWithSystemicBarlineInSingleInstrumentSystems",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "barlineOptions.breakBarlinesOnVocalStavesAtEndOfSystem",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "barlineOptions.drawTickBottomBarlineOnBottomStaffOnly",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "barlineOptions.drawTickBarlineCrossingOuterStaffLine",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.allowBeamWidening",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.snapEndpointsOutsideStave",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.allowBetweenStavesBeamsIntoTheStave",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.forceBeamsFlatWithAnyRepeatedNotes",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.forceBeamsFlatWithAnyRepeatedPatterns",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.useShallowBeamsWhenAllNotesOnLedgerLines",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.useShallowBeamsForAllTwoNoteGraceNoteBeams",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.forceAngledBeamsOutsideTheStaveToHaveMinimumHalfSpaceSlope",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.graceNoteBeamSnappingBehaviour",
      "valueType": "kEnum",
      "currentValue": "kNormalSnapping",
      "enumValues": [
        "kNoSnapping",
        "kSnapToSitStraddleOrHangRegardlessOfDirection",
        "kNormalSnapping"
      ]
    },
    {
      "path": "beamEngravingOptions.narrowSpacingThreshold",
      "valueType": "kStaveUnit",
      "currentValue": "3",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.desiredShallowBeamSlope_2nd",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.desiredShallowBeamSlope_GreaterThan2nd",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.desiredBeamSlope_2nd",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.desiredBeamSlope_3rd",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.desiredBeamSlope_4th",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.desiredBeamSlope_5th",
      "valueType": "kStaveUnit",
      "currentValue": "5/4",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.desiredBeamSlope_6th",
      "valueType": "kStaveUnit",
      "currentValue": "3/2",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.desiredBeamSlope_7th",
      "valueType": "kStaveUnit",
      "currentValue": "3/2",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.desiredBeamSlope_8ve",
      "valueType": "kStaveUnit",
      "currentValue": "3/2",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.desiredBeamSlope_GreaterThan8ve",
      "valueType": "kStaveUnit",
      "currentValue": "3/2",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.maximumDesiredSlopeForBeamsWithTwoNotesOrFewer",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.gapForBeamsContinuingOverSystemBreaks",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.tremoloBeamInsetForBeamedNotes",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.tremoloBeamInsetForCrotchetsAndUnbeamedMinims",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.tremoloBeamInsetForCrotchetsAndUnbeamedMinims_Centred",
      "valueType": "kStaveUnit",
      "currentValue": "3/2",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.tremoloBeamInsetForSemibreves",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.maximumLengthOfTremoloBeamsForUnbeamedNotes",
      "valueType": "kStaveUnit",
      "currentValue": "12",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.drawTremolosBetweenNotesAnOctaveOrMoreApart",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.drawTremolosBetweenNotesForSemibreves",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.minimTremoloAppearance",
      "valueType": "kEnum",
      "currentValue": "kNoLinesJoinStems",
      "enumValues": [
        "kAllLinesJoinStems",
        "kOutermostLineJoinsStems",
        "kNoLinesJoinStems"
      ]
    },
    {
      "path": "beamEngravingOptions.centreTremolosBetweenInsideOfSemibrevesRatherThanNotionalStems",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.preventFlatQuaverBeamsFromSnappingToSpacesWithinTheStave",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.innerNoteOfConcaveBeamMustBeInsideBothOuterNotes",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.positionOfInnerNoteOfConcaveBeamMustBeStrictlyLessThanOuterNote",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.forceBeamsFlatOnPercussionStaves_SingleLine",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.forceBeamsFlatOnPercussionStaves_FiveLine",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.forceBeamsFlatOnPercussionStaves_Grid",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.beamThickness",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.basicGapBetweenBeamLines",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.partialBeamLength",
      "valueType": "kStaveUnit",
      "currentValue": "29/24",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.allowMixedDirectionsForSubgroupsWithOpposingOuterStems",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.preserveIdealQuarterSpaceSlantForBeamsPositionedOutsideTheStave",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.preserveIdealQuarterSpaceSlantForAllDemiSemiQuavers",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.allowShorteningOfStemsBeneathTheMiddleOfAFlatBeam",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.ignoreBeamLinesOutsideTheStaveWhenSnappingWithinStaveCentredBeams",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "beamEngravingOptions.forceBeamsFlatForBeamedGroupsStartingOrEndingWithStemlets",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "ornamentAndTrillOptions.verticalGapToStaveLine",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "ornamentAndTrillOptions.verticalGapToOtherObjects",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "ornamentAndTrillOptions.verticalGapToAccidental",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "ornamentAndTrillOptions.innerHorizontalGap",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "ornamentAndTrillOptions.trillMarkPosition",
      "valueType": "kEnum",
      "currentValue": "kStartWithLeftmostNotehead",
      "enumValues": [
        "kStartWithLeftmostNotehead",
        "kStartWithLeftmostAccidental"
      ]
    },
    {
      "path": "ornamentAndTrillOptions.gapAfterWigglyLine",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "ornamentAndTrillOptions.trillExtensionLineVisibility",
      "valueType": "kEnum",
      "currentValue": "kVisibleOnTiedNotes",
      "enumValues": [
        "kNeverVisible",
        "kAlwaysVisible",
        "kVisibleOnTiedNotes"
      ]
    },
    {
      "path": "ornamentAndTrillOptions.trillWigglyLineExtraGapPosition",
      "valueType": "kEnum",
      "currentValue": "kStart",
      "enumValues": [
        "kStart",
        "kEnd"
      ]
    },
    {
      "path": "ornamentAndTrillOptions.trillAccidentalPosition",
      "valueType": "kEnum",
      "currentValue": "kAbove",
      "enumValues": [
        "kAbove",
        "kBelow",
        "kOnTheRight",
        "kSuperScript"
      ]
    },
    {
      "path": "ornamentAndTrillOptions.accidentalScale",
      "valueType": "kStaveUnit",
      "currentValue": "2/3",
      "enumValues": null
    },
    {
      "path": "ornamentAndTrillOptions.gapBetweenGlyphAndWigglyLine",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "ornamentAndTrillOptions.trillStopLineWidth",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "ornamentAndTrillOptions.trillStopLineLength",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "ornamentAndTrillOptions.trillIntervalAppearance",
      "valueType": "kEnum",
      "currentValue": "kAccidental",
      "enumValues": [
        "kAccidental",
        "kHollywood",
        "kAuxiliaryNote"
      ]
    },
    {
      "path": "ornamentAndTrillOptions.trillHollywoodHalfStepAppearance",
      "valueType": "kEnum",
      "currentValue": "kHTWithDots",
      "enumValues": [
        "kHTWithDots",
        "kHTNoDots",
        "kHalfT",
        "kHalf",
        "kH"
      ]
    },
    {
      "path": "ornamentAndTrillOptions.trillHollywoodWholeStepAppearance",
      "valueType": "kEnum",
      "currentValue": "kWTWithDots",
      "enumValues": [
        "kWTWithDots",
        "kWTNoDots",
        "kOne",
        "kW"
      ]
    },
    {
      "path": "ornamentAndTrillOptions.allowShiftingAuxiliaryNote",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "ornamentAndTrillOptions.shiftingAuxiliaryNoteThreshold",
      "valueType": "kEnum",
      "currentValue": "kDemiSemiQuaver",
      "enumValues": [
        "kMinimumLogDuration",
        "k1024Note",
        "k512Note",
        "k256Note",
        "k128Note",
        "kHemiDemiSemiQuaver",
        "kDemiSemiQuaver",
        "kSemiQuaver",
        "kQuaver",
        "kCrotchet",
        "kMinim",
        "kSemibreve",
        "kBreve",
        "kLong",
        "kMaxima",
        "kMaximumLogDuration",
        "kNumNoteLengths"
      ]
    },
    {
      "path": "ornamentAndTrillOptions.restateTrillAccidentalAfterSystemBreak",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "ornamentAndTrillOptions.trillAuxiliaryNoteIsParenthesized",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "ornamentAndTrillOptions.trillAuxiliaryNoteScaleFactor",
      "valueType": "kRationalInt32",
      "currentValue": "2/3",
      "enumValues": null
    },
    {
      "path": "ornamentAndTrillOptions.trillAuxiliaryNoteGapBeforeAxuliaryNote",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "ornamentAndTrillOptions.trillAuxiliaryNoteGapBeetwenLeftParenthesisAndAccidental",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "ornamentAndTrillOptions.trillAuxiliaryNoteGapBeetwenLeftParenthesisAndSharpAccidental",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "ornamentAndTrillOptions.trillAuxiliaryNoteGapBeetwenLeftParenthesisAndNotehead",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "ornamentAndTrillOptions.trillAuxiliaryNoteGapBeetwenAccidentalAndNotehead",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "ornamentAndTrillOptions.trillAuxiliaryNoteGapBeetwenNoteheadAndRightParenthesis",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "ornamentAndTrillOptions.showTrillContinuationMark",
      "valueType": "kEnum",
      "currentValue": "kShow",
      "enumValues": [
        "kHide",
        "kShow",
        "kParenthesise"
      ]
    },
    {
      "path": "ornamentAndTrillOptions.hideConsecutiveHollywoodMarks",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "ornamentAndTrillOptions.trillWigglyLineEndsAtRightOfLastNotehead",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "barNumberEngravingOptions.barNumberSubordinateSequenceTextCase",
      "valueType": "kEnum",
      "currentValue": "kLowerCase",
      "enumValues": [
        "kLowerCase",
        "kUpperCase"
      ]
    },
    {
      "path": "barNumberEngravingOptions.minimumWidthForRectangularEnclosures",
      "valueType": "kStaveUnit",
      "currentValue": "2",
      "enumValues": null
    },
    {
      "path": "barNumberEngravingOptions.minimumHeightForRectangularEnclosures",
      "valueType": "kStaveUnit",
      "currentValue": "2",
      "enumValues": null
    },
    {
      "path": "barNumberEngravingOptions.minimumDiameterForCircularEnclosures",
      "valueType": "kStaveUnit",
      "currentValue": "2",
      "enumValues": null
    },
    {
      "path": "barNumberEngravingOptions.minimumHorizontalPaddingAroundRectangularEnclosures",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "barNumberEngravingOptions.minimumTopPaddingAroundRectangularEnclosures",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "barNumberEngravingOptions.minimumBottomPaddingAroundRectangularEnclosures",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "barNumberEngravingOptions.minimumPaddingAroundCircularEnclosures",
      "valueType": "kStaveUnit",
      "currentValue": "1/6",
      "enumValues": null
    },
    {
      "path": "barNumberEngravingOptions.barNumberEnclosurePenWidth",
      "valueType": "kStaveUnit",
      "currentValue": "4/25",
      "enumValues": null
    },
    {
      "path": "barNumberEngravingOptions.countRepeatStructures",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "barNumberEngravingOptions.gapAboveTrebleGClef",
      "valueType": "kStaveUnit",
      "currentValue": "2",
      "enumValues": null
    },
    {
      "path": "barNumberEngravingOptions.gapBelowTrebleGClef",
      "valueType": "kStaveUnit",
      "currentValue": "3/2",
      "enumValues": null
    },
    {
      "path": "barNumberEngravingOptions.gapBelowTrebleGClef8Below",
      "valueType": "kStaveUnit",
      "currentValue": "5/2",
      "enumValues": null
    },
    {
      "path": "barNumberEngravingOptions.gapAboveTenorCClef",
      "valueType": "kStaveUnit",
      "currentValue": "3/2",
      "enumValues": null
    },
    {
      "path": "instrumentChangeEngravingOptions.idealDistanceFromStave",
      "valueType": "kStaveUnit",
      "currentValue": "3/2",
      "enumValues": null
    },
    {
      "path": "instrumentChangeEngravingOptions.paddingBelowInstrumentChangeLabel",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "textOptions.defaultDistanceFromStave",
      "valueType": "kStaveUnit",
      "currentValue": "3",
      "enumValues": null
    },
    {
      "path": "textOptions.avoidCollisions",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "textOptions.textErasurePadding",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "textOptions.textBorderThickness",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "textOptions.minimumPadding",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "holdAndPauseOptions.fermataVerticalGap",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "holdAndPauseOptions.fermataVerticalGapOnBarline",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "holdAndPauseOptions.curlewVerticalGap",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "holdAndPauseOptions.breathMarkVerticalGap",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "holdAndPauseOptions.breathMarkHorizontalGap",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "holdAndPauseOptions.caesureHorizontalGap",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "holdAndPauseOptions.fermataMaximumSignsPerStave",
      "valueType": "kEnum",
      "currentValue": "kOnePerEachVoice",
      "enumValues": [
        "kOnePerEachVoice",
        "kOnePerEachSideOfStave",
        "kOnePerStave"
      ]
    },
    {
      "path": "holdAndPauseOptions.breathMarkVerticalPosition",
      "valueType": "kEnum",
      "currentValue": "kHalfwayBetweenNoteheadAndNextNotehead",
      "enumValues": [
        "kAboveOuterStaveLine",
        "kAboveNotehead",
        "kHalfwayBetweenNoteheadAndNextNotehead"
      ]
    },
    {
      "path": "multiRestOptions.hBarDistanceFromBarlines",
      "valueType": "kStaveUnit",
      "currentValue": "3",
      "enumValues": null
    },
    {
      "path": "multiRestOptions.hBarEndCapLength",
      "valueType": "kStaveUnit",
      "currentValue": "2",
      "enumValues": null
    },
    {
      "path": "multiRestOptions.hBarEndCapThickness",
      "valueType": "kStaveUnit",
      "currentValue": "1/5",
      "enumValues": null
    },
    {
      "path": "multiRestOptions.hBarBodyHeight",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "multiRestOptions.barCountDistanceFromStave",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "multiRestOptions.showOldStyleMultiRests",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "multiRestOptions.maximumBarCountForOldStyleMultiRests",
      "valueType": "kInt",
      "currentValue": "9",
      "enumValues": null
    },
    {
      "path": "multiRestOptions.multiRestBarWidth",
      "valueType": "kStaveUnit",
      "currentValue": "12",
      "enumValues": null
    },
    {
      "path": "multiRestOptions.maxMultiRestBarWidth",
      "valueType": "kStaveUnit",
      "currentValue": "24",
      "enumValues": null
    },
    {
      "path": "multiRestOptions.maxMultiRestBarWidthBarCountThreshold",
      "valueType": "kInt",
      "currentValue": "10",
      "enumValues": null
    },
    {
      "path": "multiRestOptions.showTacetAlFine",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "multiRestOptions.alwaysShowBarRestForSingleBar",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "multiRestOptions.showOneAboveSingleBarRest",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "multiRestOptions.minimumSpaceForMultiRestOrTacet",
      "valueType": "kStaveUnit",
      "currentValue": "4",
      "enumValues": null
    },
    {
      "path": "multiRestOptions.minimumSpaceForTacetAlFine",
      "valueType": "kStaveUnit",
      "currentValue": "8",
      "enumValues": null
    },
    {
      "path": "multiRestOptions.multiRestSpacingScaleOnOverfullSystems",
      "valueType": "kDouble",
      "currentValue": "0.700000",
      "enumValues": null
    },
    {
      "path": "multiRestOptions.barNumberRangeDistanceFromStave",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "multiRestOptions.useCustomSeparatorForBarNumberRanges",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "multiRestOptions.customSeparatorForBarNumberRanges",
      "valueType": "kString",
      "currentValue": " - ",
      "enumValues": null
    },
    {
      "path": "multiRestOptions.tacetAlFineBarCountThreshold",
      "valueType": "kInt",
      "currentValue": "4",
      "enumValues": null
    },
    {
      "path": "multiRestOptions.useFixedWidthHBar",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "multiRestOptions.fixedWidthHBarWidth",
      "valueType": "kStaveUnit",
      "currentValue": "4",
      "enumValues": null
    },
    {
      "path": "multiRestOptions.showMultiRestBarCountsBetweenGrandStaves",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "multiRestOptions.tacetBarCountThreshold",
      "valueType": "kInt",
      "currentValue": "16",
      "enumValues": null
    },
    {
      "path": "multiRestOptions.usePlainTextFontForBarCount",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "multiRestOptions.barCountPlacement",
      "valueType": "kEnum",
      "currentValue": "kAbove",
      "enumValues": [
        "kAbove",
        "kBelow"
      ]
    },
    {
      "path": "multiRestOptions.considerWidthToRightOfBarlineAtStartOfMultiRest",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "multiRestOptions.considerWidthToLeftOfBarlineAtEndOfMultiRest",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "multiRestOptions.spaceSingleBarRestsLikeMultiRests",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "barRepeatOptions.allowThreeBarRepeats",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "barRepeatOptions.distanceOfNumberFromTopOfStaffOrSymbol",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "barRepeatOptions.playedCountAppearance",
      "valueType": "kEnum",
      "currentValue": "kWithParentheses",
      "enumValues": [
        "kWithParentheses",
        "kWithoutParentheses",
        "kNone"
      ]
    },
    {
      "path": "barRepeatOptions.playedCountAppearanceForLastBarInRegion",
      "valueType": "kEnum",
      "currentValue": "kWithParentheses",
      "enumValues": [
        "kWithParentheses",
        "kWithoutParentheses",
        "kNone"
      ]
    },
    {
      "path": "barRepeatOptions.showPlayedCountEveryNBars",
      "valueType": "kUint8_t",
      "currentValue": "4",
      "enumValues": null
    },
    {
      "path": "barRepeatOptions.widthOfCollapsedBarRepeatBar",
      "valueType": "kStaveUnit",
      "currentValue": "10",
      "enumValues": null
    },
    {
      "path": "barRepeatOptions.showNumberingOnlyCountEveryNBars",
      "valueType": "kUint8_t",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "barRepeatOptions.numberingOnlyCountAppearance",
      "valueType": "kEnum",
      "currentValue": "kWithoutParentheses",
      "enumValues": [
        "kWithoutParentheses",
        "kWithParentheses"
      ]
    },
    {
      "path": "barRepeatOptions.distanceOfNumberedBarsFromStaff",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "barRepeatOptions.distanceOfNumberedBarsFromOtherObstructions",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "barRepeatOptions.appearanceOfNumberingRangeInFirstBar",
      "valueType": "kEnum",
      "currentValue": "kShowRangeInParentheses",
      "enumValues": [
        "kShowRangeInParentheses",
        "kShowRangeWithoutParentheses",
        "kDoNotShowRange"
      ]
    },
    {
      "path": "barRepeatOptions.minimumNumberOfBarsToShowRange",
      "valueType": "kUint8_t",
      "currentValue": "4",
      "enumValues": null
    },
    {
      "path": "barRepeatOptions.horizontalGapToLeaveAroundNumberedBars",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "barRepeatOptions.staveRelativePositionForNumberedBarRegions",
      "valueType": "kEnum",
      "currentValue": "kAbove",
      "enumValues": [
        "kAbove",
        "kBelow"
      ]
    },
    {
      "path": "barRepeatOptions.alignNumberedBarRegionsOnEachSystem",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "barRepeatOptions.numberAtLastBarOfRegionAppearance",
      "valueType": "kEnum",
      "currentValue": "kWithoutParentheses",
      "enumValues": [
        "kWithParentheses",
        "kWithoutParentheses",
        "kNone"
      ]
    },
    {
      "path": "barRepeatOptions.numberAtEndsOfSystemsAppearance",
      "valueType": "kEnum",
      "currentValue": "kWithoutParentheses",
      "enumValues": [
        "kWithParentheses",
        "kWithoutParentheses",
        "kNone"
      ]
    },
    {
      "path": "barRepeatOptions.numberAtFirstBarOfRegionAppearance",
      "valueType": "kEnum",
      "currentValue": "kWithoutParentheses",
      "enumValues": [
        "kWithParentheses",
        "kWithoutParentheses",
        "kNone"
      ]
    },
    {
      "path": "slashRegionEngravingOptions.distanceOfNumberFromStave",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "slashRegionEngravingOptions.placementRelativeToStave",
      "valueType": "kEnum",
      "currentValue": "kBelow",
      "enumValues": [
        "kAbove",
        "kBelow"
      ]
    },
    {
      "path": "slashRegionEngravingOptions.playedCountAppearance",
      "valueType": "kEnum",
      "currentValue": "kWithParentheses",
      "enumValues": [
        "kWithParentheses",
        "kWithoutParentheses",
        "kNone"
      ]
    },
    {
      "path": "slashRegionEngravingOptions.showPlayedCountEveryNBars",
      "valueType": "kUint8_t",
      "currentValue": "4",
      "enumValues": null
    },
    {
      "path": "slashRegionEngravingOptions.showPlayedCountOnFirstBarOfAbuttingSlashRegion",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "playingTechniqueOptions.glyphVerticalGap",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "playingTechniqueOptions.textVerticalGap",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "playingTechniqueOptions.concatenateTextAtSamePosition",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "playingTechniqueOptions.playingTechniqueErasurePadding",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "playingTechniqueOptions.textHorizontalOffset",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "playingTechniqueOptions.textHorizontalGap",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "playingTechniqueOptions.glyphHorizontalGap",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "playingTechniqueOptions.lineEndHorizontalGapBeforeBarline",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "playingTechniqueOptions.lineEndHorizontalGapBeforeClump",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "playingTechniqueOptions.parenthesiseTextContinuation",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "playingTechniqueOptions.scaleGlyphsOnGraceNotes",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "playingTechniqueOptions.showPlayingTechniqueAtStartOfSubsequentSystems",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "playingTechniqueOptions.showBowingMarksOutsideLinePlayingTechniques",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "arpeggioOptions.gapOnLeft",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "arpeggioOptions.nonArpeggioLineWidth",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "arpeggioOptions.nonArpeggioHookLength",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "arpeggioOptions.outwardProtrusionFromNoteInSpace",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "arpeggioOptions.outwardProtrusionFromNoteOnLine",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "arpeggioOptions.nonArpeggioOutwardProtrusionFromNoteInSpace",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "arpeggioOptions.nonArpeggioOutwardProtrusionFromNoteOnLine",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "arpeggioOptions.lineEndForArpeggioUp",
      "valueType": "kEnum",
      "currentValue": "kNothing",
      "enumValues": [
        "kNothing",
        "kArrow",
        "kSwash"
      ]
    },
    {
      "path": "arpeggioOptions.lineEndForArpeggioDown",
      "valueType": "kEnum",
      "currentValue": "kArrow",
      "enumValues": [
        "kNothing",
        "kArrow",
        "kSwash"
      ]
    },
    {
      "path": "arpeggioOptions.showArpeggiosOnSlashVoices",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "arpeggioOptions.slurArpeggioMinimumLength",
      "valueType": "kStaveUnit",
      "currentValue": "2",
      "enumValues": null
    },
    {
      "path": "arpeggioOptions.slurArpeggioSingleStaveHeight",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "arpeggioOptions.slurArpeggioCrossStaveHeight",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "arpeggioOptions.slurArpeggioSingleStaveShoulder",
      "valueType": "kRationalInt32",
      "currentValue": "3/10",
      "enumValues": null
    },
    {
      "path": "arpeggioOptions.slurArpeggioCrossStaveShoulder",
      "valueType": "kRationalInt32",
      "currentValue": "1/5",
      "enumValues": null
    },
    {
      "path": "arpeggioOptions.slurArpeggioEndThickness",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "arpeggioOptions.slurArpeggioMiddleThickness",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "arpeggioOptions.slurArpeggioOutwardProtrusionOnLine",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "pedalLineOptions.gapBetweenSignAndLine",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "pedalLineOptions.gapAfterEndBeforeNote",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "pedalLineOptions.gapAtSytemEndWhenContinues",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "pedalLineOptions.height",
      "valueType": "kStaveUnit",
      "currentValue": "3/2",
      "enumValues": null
    },
    {
      "path": "pedalLineOptions.hookLength",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "pedalLineOptions.verticalGap",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "pedalLineOptions.extraVerticalGapBetweenPedalLines",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "pedalLineOptions.sustainPedalSignAppearance",
      "valueType": "kEnum",
      "currentValue": "kPedDotGlyph",
      "enumValues": [
        "kPedDotGlyph",
        "kPedGlyph",
        "kPGlyph",
        "kSymbol",
        "kPedText",
        "kHook"
      ]
    },
    {
      "path": "pedalLineOptions.sostenutoPedalSignAppearance",
      "valueType": "kEnum",
      "currentValue": "kSostDotGlyph",
      "enumValues": [
        "kSostDotGlyph",
        "kSGlyph",
        "kSymbol",
        "kAbbreviatedText",
        "kFullText"
      ]
    },
    {
      "path": "pedalLineOptions.unaCordaPedalSignAppearance",
      "valueType": "kEnum",
      "currentValue": "kFullText",
      "enumValues": [
        "kSymbol",
        "kAbbreviatedText",
        "kFullText"
      ]
    },
    {
      "path": "pedalLineOptions.retakeWidth",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "pedalLineOptions.sustainContinuationType",
      "valueType": "kEnum",
      "currentValue": "kLine",
      "enumValues": [
        "kLine",
        "kSignAtEnd",
        "kSignAtEndWithDashedLine",
        "kNone"
      ]
    },
    {
      "path": "pedalLineOptions.sostenutoContinuationType",
      "valueType": "kEnum",
      "currentValue": "kLine",
      "enumValues": [
        "kLine",
        "kSignAtEnd",
        "kSignAtEndWithDashedLine",
        "kNone"
      ]
    },
    {
      "path": "pedalLineOptions.unacordaContinuationType",
      "valueType": "kEnum",
      "currentValue": "kSignAtEnd",
      "enumValues": [
        "kLine",
        "kSignAtEnd",
        "kSignAtEndWithDashedLine",
        "kNone"
      ]
    },
    {
      "path": "pedalLineOptions.continuationLineWidth",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "pedalLineOptions.dashedContinuationLineDashLength",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "pedalLineOptions.dashedContinuationLineGapLength",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "pedalLineOptions.showContinuationSignInParentheses",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "pedalLineOptions.startsBeforeGraceNotes",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "pedalLineOptions.endsBeforeGraceNotes",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "pedalLineOptions.notchesStartBeforeGraceNotes",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "pedalLineOptions.extraOffsetForStartOfLineWithOrnateP",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "pedalLineOptions.letterCaseForUnaCordaTreCorde",
      "valueType": "kEnum",
      "currentValue": "kLowerCase",
      "enumValues": [
        "kUpperCase",
        "kLowerCase",
        "kSentenceCase",
        "kTitleCase"
      ]
    },
    {
      "path": "pedalLineOptions.noteheadCentredRetakes",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.chordSymbolStyle",
      "valueType": "kEnum",
      "currentValue": "kStandard",
      "enumValues": [
        "kStandard",
        "kSolfeggio",
        "kNashville"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.preferenceForNoteB",
      "valueType": "kEnum",
      "currentValue": "kUseBAndBb",
      "enumValues": [
        "kUseBAndBb",
        "kUseHAndBb",
        "kUseHAndB"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.rootAndBassNoteAccidentalType",
      "valueType": "kEnum",
      "currentValue": "kUseAccidentalSymbols",
      "enumValues": [
        "kUseAccidentalSymbols",
        "kUseGermanicSuffixes"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.solfeggioPreferenceForNoteC",
      "valueType": "kEnum",
      "currentValue": "kDo",
      "enumValues": [
        "kDo",
        "kUt"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.solfeggioPreferenceForNoteD",
      "valueType": "kEnum",
      "currentValue": "kReWithoutAcuteAccent",
      "enumValues": [
        "kReWithoutAcuteAccent",
        "kReWithAcuteAccent"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.solfeggioPreferenceForNoteG",
      "valueType": "kEnum",
      "currentValue": "kSo",
      "enumValues": [
        "kSo",
        "kSol"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.solfeggioPreferenceForNoteB",
      "valueType": "kEnum",
      "currentValue": "kTi",
      "enumValues": [
        "kSi",
        "kTi"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.rootAndBassNoteAccidentalPosition",
      "valueType": "kEnum",
      "currentValue": "kBaseline",
      "enumValues": [
        "kBaseline",
        "kSuperscript",
        "kSubscript"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.nashvilleNoteNameAccidentalPosition",
      "valueType": "kEnum",
      "currentValue": "kBeforeNoteName",
      "enumValues": [
        "kAfterNoteName",
        "kBeforeNoteName"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.nashvilleNoteNameAccidentalAppearance",
      "valueType": "kEnum",
      "currentValue": "kSharpOrFlat",
      "enumValues": [
        "kSharpOrFlat",
        "kPlusOrMinus"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.majorQualityAppearance",
      "valueType": "kEnum",
      "currentValue": "kNull",
      "enumValues": [
        "kNull",
        "kDelta",
        "kUpperCaseM",
        "kLowerCaseMa",
        "kLowerCaseMaj"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.minorQualityAppearance",
      "valueType": "kEnum",
      "currentValue": "kLowerCaseM",
      "enumValues": [
        "kLowerCaseM",
        "kLowerCaseMin",
        "kUpperCaseMi",
        "kDash",
        "kLowerCaseMi"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.majorAndMinorQualityPosition",
      "valueType": "kEnum",
      "currentValue": "kBaseline",
      "enumValues": [
        "kBaseline",
        "kSuperscript",
        "kSubscript"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.majorSeventhIntervalAppearance",
      "valueType": "kEnum",
      "currentValue": "kLowerCaseMaj7",
      "enumValues": [
        "kSentenceCaseMaj7",
        "kUpperCaseMA7",
        "kDelta",
        "kLowerCaseMaj7",
        "kSharp7",
        "kUpperCaseM7"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.majorSeventhPosition",
      "valueType": "kEnum",
      "currentValue": "kBaseline",
      "enumValues": [
        "kBaseline",
        "kSuperscript",
        "kSubscript"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.show7InMajorSeventhChords",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.majorSeventhIntervalAppearanceInMinorOrAugmentedChords",
      "valueType": "kEnum",
      "currentValue": "kLowerCaseMaj7",
      "enumValues": [
        "kSentenceCaseMaj7",
        "kUpperCaseMA7",
        "kDelta",
        "kLowerCaseMaj7",
        "kSharp7",
        "kUpperCaseM7"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.majorSeventhPositionInMinorAndAugmentedChords",
      "valueType": "kEnum",
      "currentValue": "kBaseline",
      "enumValues": [
        "kBaseline",
        "kSuperscript",
        "kSubscript"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.show7InMinorAndAugmentedChordsWithMajorSeventh",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.majorSeventhRepresentationWithOtherExtensionForMinorAndAugChords",
      "valueType": "kEnum",
      "currentValue": "kImpliedByOtherExtension",
      "enumValues": [
        "kStatedIndependentlyOfOtherExtension",
        "kImpliedByOtherExtension"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.parenthesiseMajorSeventhInMinorAndAugmentedChords",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.majorSeventhRepresentationWithOtherExtensionForOtherChords",
      "valueType": "kEnum",
      "currentValue": "kImpliedByOtherExtension",
      "enumValues": [
        "kStatedIndependentlyOfOtherExtension",
        "kImpliedByOtherExtension"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.diminishedSeventhQualityAppearance",
      "valueType": "kEnum",
      "currentValue": "kLowerCaseDim7",
      "enumValues": [
        "kLowerCaseDim7",
        "kCircle7",
        "kLowerCaseDimWithout7",
        "kLowerCaseDimWithDotWithout7",
        "kCircleWithout7"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.diminishedTriadQualityAppearance",
      "valueType": "kEnum",
      "currentValue": "kMinorFlatFive",
      "enumValues": [
        "kLowerCaseDim",
        "kLowerCaseDimWithDot",
        "kCircle",
        "kMinorFlatFive"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.diminishedTextPosition",
      "valueType": "kEnum",
      "currentValue": "kBaseline",
      "enumValues": [
        "kBaseline",
        "kSuperscript",
        "kSubscript"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.diminishedCirclePosition",
      "valueType": "kEnum",
      "currentValue": "kSuperscript",
      "enumValues": [
        "kBaseline",
        "kSuperscript",
        "kSubscript"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.halfDiminishedChordAppearance",
      "valueType": "kEnum",
      "currentValue": "kMinorSevenFlat5",
      "enumValues": [
        "kMinorSevenFlat5",
        "kSlashedDegree",
        "kSlashedDegreeWith7"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.halfDiminishedSlashedOPosition",
      "valueType": "kEnum",
      "currentValue": "kSuperscript",
      "enumValues": [
        "kBaseline",
        "kSuperscript",
        "kSubscript"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.intervalPosition",
      "valueType": "kEnum",
      "currentValue": "kBaseline",
      "enumValues": [
        "kBaseline",
        "kSuperscript",
        "kSubscript"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.showIntervalSuperscriptWhenUsingSubscriptPosition",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.sixSlashNineAppearance",
      "valueType": "kEnum",
      "currentValue": "k6Add9",
      "enumValues": [
        "kDiagonalSixSlashNine",
        "kStackedSixOverNine",
        "kFraction9Over6",
        "k6Add9",
        "kLinearSixSlashNine"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.identifySixNineChordsAsSuchWhenAlterationsPresent",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.openFifthAppearance",
      "valueType": "kEnum",
      "currentValue": "kOmit3",
      "enumValues": [
        "k5",
        "kOmit3"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.capitaliseSusAndAugText",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.susPosition",
      "valueType": "kEnum",
      "currentValue": "kBaseline",
      "enumValues": [
        "kBaseline",
        "kSuperscript",
        "kSubscript"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.sus4Appearance",
      "valueType": "kEnum",
      "currentValue": "kSus4",
      "enumValues": [
        "kSus4",
        "kSus",
        "k4"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.sus2Appearance",
      "valueType": "kEnum",
      "currentValue": "kSus2",
      "enumValues": [
        "kSus2",
        "kSus",
        "k2"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.augPosition",
      "valueType": "kEnum",
      "currentValue": "kBaseline",
      "enumValues": [
        "kBaseline",
        "kSuperscript",
        "kSubscript"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.augmentedQualityAppearance",
      "valueType": "kEnum",
      "currentValue": "kAug",
      "enumValues": [
        "kAug",
        "kPlusSymbol",
        "kPlusSymbolWith5",
        "kSharpSymbolWith5"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.positionAugmentedQualityAfterInterval",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.positionForAlterations",
      "valueType": "kEnum",
      "currentValue": "kSuperscript",
      "enumValues": [
        "kBaseline",
        "kSuperscript",
        "kSubscript"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.parenthesiseAlterations",
      "valueType": "kEnum",
      "currentValue": "kAlways",
      "enumValues": [
        "kAlways",
        "kNever",
        "kIfMultiple"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.capitaliseTextBasedAlterations",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.omissionText",
      "valueType": "kEnum",
      "currentValue": "kOmit",
      "enumValues": [
        "kOmit",
        "kNo"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.alterationAccidentalStyle",
      "valueType": "kEnum",
      "currentValue": "kSharpAndFlat",
      "enumValues": [
        "kSharpAndFlat",
        "kPlusAndMinus",
        "kPlusAndFlat"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.alterationArrangement",
      "valueType": "kEnum",
      "currentValue": "kStacked",
      "enumValues": [
        "kStacked",
        "kLinear"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.alterationAccidentalPosition",
      "valueType": "kEnum",
      "currentValue": "kBeforeNoteName",
      "enumValues": [
        "kAfterNoteName",
        "kBeforeNoteName"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.includeAddForAdditions",
      "valueType": "kEnum",
      "currentValue": "kAlwaysIncludeAddPrefix",
      "enumValues": [
        "kAlwaysIncludeAddPrefix",
        "kOmitAddPrefixForChordsWithImplicitSixthOrSeventh",
        "kOmitAddPrefixFromAllChords"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.relativePositionsForChordWithAlteredBassNote",
      "valueType": "kEnum",
      "currentValue": "kLinear",
      "enumValues": [
        "kDiagonal",
        "kAsFraction",
        "kLinear"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.useJapaneseAlteredBassNoteStyle",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.relativePositionsInPolychord",
      "valueType": "kEnum",
      "currentValue": "kAsFraction",
      "enumValues": [
        "kDiagonal",
        "kAsFraction",
        "kLinear"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.compoundChordSeparatorLineWidth",
      "valueType": "kStaveUnit",
      "currentValue": "1/10",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.compoundChordSeparatorGap",
      "valueType": "kStaveUnit",
      "currentValue": "1/5",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.alterationSeparationBehaviour",
      "valueType": "kEnum",
      "currentValue": "kSeparateWithSpace",
      "enumValues": [
        "kSeparateWithSpace",
        "kUseSeparatorWhenUnalteredAdditionsPresent",
        "kUseSeparatorWhenAnyAdditionsPresent",
        "kAlwaysUseSeparator"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.centreStackedAlterationsVerticallyOnRoot",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.verticalOffsetForAlterationParentheses",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.centreAlignStackedAlterations",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.alteredChordSymbolAppearance",
      "valueType": "kEnum",
      "currentValue": "kAltDot",
      "enumValues": [
        "kAlt",
        "kAltDot",
        "kAltLowerCase",
        "kAltLowerCaseDot",
        "kALT",
        "kALTDot"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.showAltForAlteredChords",
      "valueType": "kEnum",
      "currentValue": "kWithFourAlterations",
      "enumValues": [
        "kNever",
        "kWithAlteredFifthAndNinth",
        "kWithThreeAlterations",
        "kWithFourAlterations"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.positionForAlteredChordAlt",
      "valueType": "kEnum",
      "currentValue": "kBaseline",
      "enumValues": [
        "kBaseline",
        "kSuperscript",
        "kSubscript"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.showAltForAlteredChordsInParentheses",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.transposedChordSpellingPreference",
      "valueType": "kEnum",
      "currentValue": "kAllowAllRoots",
      "enumValues": [
        "kAllowAllRoots",
        "kAllowBSharpAndESharpButNoDoubles",
        "kDisallowBSharpAndESharpAndAllDoubles",
        "kDisallowBSharpESharpCFlatFFlatAndAllDoubles"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.enforceCleanIntervallicRelationshipBetweenRootAndAlteredBass",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.chordSymbolRootOnlyAppearance",
      "valueType": "kEnum",
      "currentValue": "kBass",
      "enumValues": [
        "kBass",
        "kOnly"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.chordSymbolPedalOnlyAppearance",
      "valueType": "kEnum",
      "currentValue": "kPedDot",
      "enumValues": [
        "kPedDot",
        "kPed",
        "kPedal"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.idealDistanceAboveOrBelowStaff",
      "valueType": "kStaveUnit",
      "currentValue": "2",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.minimumGapBetweenChordSymbols",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.verticalOffsetForSuperscriptComponents",
      "valueType": "kStaveUnit",
      "currentValue": "5/8",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.scaleFactorForSuperscriptAndSubscriptComponents",
      "valueType": "kInt",
      "currentValue": "65",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.scaleFactorForStackedAlterations",
      "valueType": "kInt",
      "currentValue": "65",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.gapBetweenStackedAlterations",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.horizontalGapBetweenAlterations",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.horizontalGapEitherSideOfAlterationsOutsideParentheses",
      "valueType": "kStaveUnit",
      "currentValue": "1/6",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.horizontalGapEitherSideOfAlterationsInsideParentheses",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.horizontalGapBeforeAlterationSeparator",
      "valueType": "kStaveUnit",
      "currentValue": "1/16",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.horizontalGapFollowingAlterationSeparator",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.minimumVerticalDistanceBetweenChordSymbolsAndOtherObstructions",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.verticallyAlignChordSymbolsOnSystem",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.chordSymbolNoteRelativeHorizontalAlignment",
      "valueType": "kEnum",
      "currentValue": "kLeft",
      "enumValues": [
        "kLeft",
        "kCentre",
        "kRight"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.chordSymbolHorizontalOffset",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.defaultPlacementForChordSymbolsOnSingleStaveInstruments",
      "valueType": "kEnum",
      "currentValue": "kAbove",
      "enumValues": [
        "kAbove",
        "kBelow"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.multiLineChordSymbolVerticalAlignment",
      "valueType": "kEnum",
      "currentValue": "kBottom",
      "enumValues": [
        "kTop",
        "kMiddle",
        "kBottom"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.verticalOffsetForTripleFlatRootAccidental",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.verticalOffsetForDoubleFlatRootAccidental",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.verticalOffsetForFlatRootAccidental",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.verticalOffsetForNaturalRootAccidental",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.verticalOffsetForSharpRootAccidental",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.verticalOffsetForDoubleSharpRootAccidental",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.verticalOffsetForTripleSharpRootAccidental",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.centreUpperChordSymbolOnLower",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.automaticallyCurtailRepeatedChordSymbolsWithChangingBassNote",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.automaticallyCurtailRepeatedChordSymbolsThresholdUnit",
      "valueType": "kEnum",
      "currentValue": "kBars",
      "enumValues": [
        "kBars",
        "kBeats"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.automaticallyCurtailRepeatedChordSymbolsThresholdValue",
      "valueType": "kInt",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.explicitlyRestateRootFollowingHiddenChangeOfHarmony",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.modalChordSymbolTextCase",
      "valueType": "kEnum",
      "currentValue": "kTitleCaseModeLowerCaseScale",
      "enumValues": [
        "kTitleCaseModeLowerCaseScale",
        "kTitleCaseModeTitleCaseScale",
        "kLowerCaseModeLowerCaseScale"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.showDotAfterChordSymbolMode",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.chordSymbolModeTextPosition",
      "valueType": "kEnum",
      "currentValue": "kSuperscript",
      "enumValues": [
        "kBaseline",
        "kSuperscript",
        "kSubscript"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.gapBetweenRootAndMode",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.erasurePadding",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.capoChordSymbolAppearance",
      "valueType": "kEnum",
      "currentValue": "kItalicizeCapoChordSymbol",
      "enumValues": [
        "kParenthesizeCapoChordSymbol",
        "kItalicizeCapoChordSymbol"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.verticalGapBelowCapoChordSymbol",
      "valueType": "kStaveUnit",
      "currentValue": "3",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.minimumVerticalGapBetweenChordSymbols",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.chordSymbolParenthesisXOffset",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.chordSymbolParenthesisVerticalHeightPercentage",
      "valueType": "kInt",
      "currentValue": "115",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.suppressParenthesesAroundAlterationsInParenthesisedChordSymbolsBehaviour",
      "valueType": "kEnum",
      "currentValue": "kSuppressInFinalGroupIfChordParenthesised",
      "enumValues": [
        "kSuppressInFinalGroupIfChordParenthesised",
        "kSuppressInFinalGroupIfChordParenthesisedAtEnd",
        "kSuppressInAllGroupsIfChordParenthesised",
        "kSuppressInAllGroupsIfChordParenthesisedAtEnd",
        "kNeverSuppress"
      ]
    },
    {
      "path": "chordSymbolEngravingOptions.allowParenthesesAroundAlterationsInParenthesisedChordIfSeparatedByAlteredBassNote",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "chordSymbolEngravingOptions.scaleParenthesesToHeightOfChordSymbolWithLinearArrangement",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "chordDiagramEngravingOptions.offsetBelowChordSymbol",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "chordDiagramEngravingOptions.defaultNumberOfFrets",
      "valueType": "kInt",
      "currentValue": "5",
      "enumValues": null
    },
    {
      "path": "chordDiagramEngravingOptions.defaultFretSpacing",
      "valueType": "kStaveUnit",
      "currentValue": "3/5",
      "enumValues": null
    },
    {
      "path": "chordDiagramEngravingOptions.defaultStringSpacing",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "chordDiagramEngravingOptions.stringLengthBeyondFinalFret",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "chordDiagramEngravingOptions.highestStartingFretToStillShowNut",
      "valueType": "kInt",
      "currentValue": "2",
      "enumValues": null
    },
    {
      "path": "chordDiagramEngravingOptions.scaleFactorRelativeToChordSymbol",
      "valueType": "kDouble",
      "currentValue": "1.000000",
      "enumValues": null
    },
    {
      "path": "chordDiagramEngravingOptions.chordDiagramOrientation",
      "valueType": "kEnum",
      "currentValue": "kVertical",
      "enumValues": [
        "kHorizontal",
        "kVertical"
      ]
    },
    {
      "path": "chordDiagramEngravingOptions.chordDiagramLineThickness",
      "valueType": "kStaveUnit",
      "currentValue": "1/12",
      "enumValues": null
    },
    {
      "path": "chordDiagramEngravingOptions.nutThickness",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "chordDiagramEngravingOptions.filledDotRadius",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "chordDiagramEngravingOptions.emptyCircleRadius",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "chordDiagramEngravingOptions.sizeOfX",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "chordDiagramEngravingOptions.startingFretNumberXOffset",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "chordDiagramEngravingOptions.startingFretNumberYOffset",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "chordDiagramEngravingOptions.topCharacterYOffset",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "chordDiagramEngravingOptions.showTieAcrossBarredNotes",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "chordDiagramEngravingOptions.tieOffsetFromFret",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "chordDiagramEngravingOptions.tieThickness",
      "valueType": "kStaveUnit",
      "currentValue": "1/5",
      "enumValues": null
    },
    {
      "path": "chordDiagramEngravingOptions.useSolidBarForBarre",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "chordDiagramEngravingOptions.startingFretNumberOnLeftOrRight",
      "valueType": "kEnum",
      "currentValue": "kRight",
      "enumValues": [
        "kLeft",
        "kRight"
      ]
    },
    {
      "path": "chordDiagramEngravingOptions.startingFretNumberNumeralType",
      "valueType": "kEnum",
      "currentValue": "kArabic",
      "enumValues": [
        "kArabic",
        "kRoman"
      ]
    },
    {
      "path": "chordDiagramEngravingOptions.startingFretNumberVerticalAlignment",
      "valueType": "kEnum",
      "currentValue": "kCentred",
      "enumValues": [
        "kCentred",
        "kSitOnFretBelow"
      ]
    },
    {
      "path": "chordDiagramEngravingOptions.startingFretNumberPrefix",
      "valueType": "kString",
      "currentValue": "fr. ",
      "enumValues": null
    },
    {
      "path": "chordDiagramEngravingOptions.startingFretNumberSuffix",
      "valueType": "kString",
      "currentValue": "",
      "enumValues": null
    },
    {
      "path": "repeatEndingLineEngravingOptions.endOfLineAppearance",
      "valueType": "kEnum",
      "currentValue": "kOpenFullLength",
      "enumValues": [
        "kOpenShort",
        "kOpenFullLength",
        "kClosedFullLength"
      ]
    },
    {
      "path": "repeatEndingLineEngravingOptions.alwaysCloseEndOfLineAtEndOfFlow",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "repeatEndingLineEngravingOptions.useDashesToElideConsecutiveTimesPlayed",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "repeatEndingLineEngravingOptions.separatorStringBetweenTimesPlayed",
      "valueType": "kString",
      "currentValue": ".",
      "enumValues": null
    },
    {
      "path": "repeatEndingLineEngravingOptions.terminatorStringAfterTimesPlayed",
      "valueType": "kString",
      "currentValue": ".",
      "enumValues": null
    },
    {
      "path": "repeatEndingLineEngravingOptions.hookLength",
      "valueType": "kStaveUnit",
      "currentValue": "5/2",
      "enumValues": null
    },
    {
      "path": "repeatEndingLineEngravingOptions.separationBetweenSegmentsAtSingleBarlines",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "repeatEndingLineEngravingOptions.minimumDistanceAboveStave",
      "valueType": "kStaveUnit",
      "currentValue": "3/2",
      "enumValues": null
    },
    {
      "path": "repeatEndingLineEngravingOptions.gapBetweenHookAndText",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "repeatEndingLineEngravingOptions.gapBetweenTextAndEndOfLineForShortOpenLines",
      "valueType": "kStaveUnit",
      "currentValue": "3",
      "enumValues": null
    },
    {
      "path": "repeatEndingLineEngravingOptions.gapBetweenBottomOfLineAndTopOfText",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "repeatEndingLineEngravingOptions.lineThickness",
      "valueType": "kStaveUnit",
      "currentValue": "1/5",
      "enumValues": null
    },
    {
      "path": "repeatEndingLineEngravingOptions.minimumGapBetweenLineAndOtherObject",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "repeatEndingLineEngravingOptions.endOfLineAppearanceForAllButFinalRepetition",
      "valueType": "kEnum",
      "currentValue": "kContinueUpUntilNextRepetitionAndClose",
      "enumValues": [
        "kContinueUpUntilNextRepetitionAndClose",
        "kContinueToNextBarline",
        "kOpenShort"
      ]
    },
    {
      "path": "repeatEndingLineEngravingOptions.maximumLineLengthForAllButFinalRepetitionInOpenBars",
      "valueType": "kStaveUnit",
      "currentValue": "15",
      "enumValues": null
    },
    {
      "path": "cueEngravingOptions.showArticulations",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "cueEngravingOptions.showSlurs",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "cueEngravingOptions.showLyrics",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "cueEngravingOptions.showDynamics",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "cueEngravingOptions.showTechniques",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "cueEngravingOptions.showOrnaments",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "cueEngravingOptions.showText",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "cueEngravingOptions.showPlayAtEnd",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "cueEngravingOptions.showFermatas",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "cueEngravingOptions.showHorizontalLines",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "cueEngravingOptions.gapBetweenCueLabelAndStave",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "cueEngravingOptions.gapBetweenCueLabelAndOtherObjects",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "cueEngravingOptions.shortenedInstrumentName",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "cueEngravingOptions.includeTransposition",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "cueEngravingOptions.cueVisualScale",
      "valueType": "kRationalInt32",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "cueEngravingOptions.cueLabelIsAlwaysAbove",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "cueEngravingOptions.cueUnpitchedNotesPositionOnStave",
      "valueType": "kPositionOnStave",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "cueEngravingOptions.cueRhythmicCueStavePositionDistance",
      "valueType": "kInt",
      "currentValue": "2",
      "enumValues": null
    },
    {
      "path": "cueEngravingOptions.showOctaveTransposition",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "cueEngravingOptions.defaultCueClefValue",
      "valueType": "kEnum",
      "currentValue": "kSourceStaveClef",
      "enumValues": [
        "kSourceStaveClef",
        "kDestinationStaveClef",
        "kAutomatic"
      ]
    },
    {
      "path": "cueEngravingOptions.startCueClefBeforeBarlineIfCoincidentWithStartOfBar",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "cueEngravingOptions.cueRhythmicCueUseSlashNotehead",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "cueEngravingOptions.cueRhythmicCueRhythmicSlashAppearance",
      "valueType": "kEnum",
      "currentValue": "kSmall",
      "enumValues": [
        "kStandard",
        "kSmall",
        "kOversized",
        "kMuted"
      ]
    },
    {
      "path": "fingeringEngravingOptions.fingeringSubstitutionAppearance",
      "valueType": "kEnum",
      "currentValue": "kLine",
      "enumValues": [
        "kLine",
        "kSlur"
      ]
    },
    {
      "path": "fingeringEngravingOptions.fingeringSubstitutionLineMinimumLength",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.fingeringSubstitutionLineThickness",
      "valueType": "kStaveUnit",
      "currentValue": "1/12",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.gapEitherSideOfSubstitutionLine",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.gapEitherSideOfDeferredSubstitutionLine",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.minimumDistanceBetweenStaveAndFingerings",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.minimumDistanceBetweenOtherObjectsAndFingerings",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.horizontalGapBetweenCoincidentFingerings",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.verticalGapBetweenCoincidentFingerings",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.additionalVerticalGapBetweenFingeringAndSubstitutionLineInAdjacentRows",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.minimumVerticalDistanceBetweenFingeringRows",
      "valueType": "kStaveUnit",
      "currentValue": "4/5",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.alignmentForFingeringSubstitutionRelativeToNotehead",
      "valueType": "kEnum",
      "currentValue": "kCentre",
      "enumValues": [
        "kLeft",
        "kCentre"
      ]
    },
    {
      "path": "fingeringEngravingOptions.symbolsToUseForEditorialFingerings",
      "valueType": "kEnum",
      "currentValue": "kBrackets",
      "enumValues": [
        "kParentheses",
        "kBrackets"
      ]
    },
    {
      "path": "fingeringEngravingOptions.showBracketForMultipleNotesPlayedWithSingleFinger",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.scaleFingeringsOnGraceNotes",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.fingeringAdoptVoiceDirections",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.cautionaryFingeringAppearance",
      "valueType": "kEnum",
      "currentValue": "kParenthesised",
      "enumValues": [
        "kOmit",
        "kNormal",
        "kParenthesised"
      ]
    },
    {
      "path": "fingeringEngravingOptions.brassFingeringSeparator",
      "valueType": "kEnum",
      "currentValue": "kNone",
      "enumValues": [
        "kNone",
        "kCircle",
        "kForwardSlash"
      ]
    },
    {
      "path": "fingeringEngravingOptions.gapEitherSideOfBrassPistonValveSeparators",
      "valueType": "kStaveUnit",
      "currentValue": "1/3",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.brassFingeringArrangement",
      "valueType": "kEnum",
      "currentValue": "kVertical",
      "enumValues": [
        "kHorizontal",
        "kVertical"
      ]
    },
    {
      "path": "fingeringEngravingOptions.tromboneSlidePositionStyle",
      "valueType": "kEnum",
      "currentValue": "kArabic",
      "enumValues": [
        "kArabic",
        "kRoman"
      ]
    },
    {
      "path": "fingeringEngravingOptions.alignSimpleFingeringsWithNotesWithHorizontalOffsets",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.fingeringColumnDistanceThreshold",
      "valueType": "kStaveUnit",
      "currentValue": "5/4",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.verticalOffsetForSubstitutionSlurs",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.horizontalGapBeforeOrAfterAlternativeOrEditorialFingerings",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.horizontalGapInsideParenthesesOrBrackets",
      "valueType": "kStaveUnit",
      "currentValue": "1/12",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.minimumHorizontalSeparationBetweenAdjacentFingeringRows",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.minimumHorizontalSepatationBetweenOtherObjectsAndFingerings",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.gapBeforeSharedFingeringBracket",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.alignmentOfFingeringSequenceOnSingleNote",
      "valueType": "kEnum",
      "currentValue": "kCentre",
      "enumValues": [
        "kLeft",
        "kCentre"
      ]
    },
    {
      "path": "fingeringEngravingOptions.fingeringShiftLineLength",
      "valueType": "kStaveUnit",
      "currentValue": "9/5",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.fingeringShiftLineAngle",
      "valueType": "kInt",
      "currentValue": "15",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.fingeringShiftLineThickness",
      "valueType": "kStaveUnit",
      "currentValue": "1/6",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.alwaysCentreFingeringShiftIndications",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.maximumDistanceBetweenFingeringShiftAndFollowingNote",
      "valueType": "kStaveUnit",
      "currentValue": "8",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.usePlainTextFontForFingerings",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.horizontalGapBetweenFingeringsSeparatedBySubstitutionSlur",
      "valueType": "kStaveUnit",
      "currentValue": "1/6",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.cautionaryFingeringAppearanceForNotesThatHaveBeenOffset",
      "valueType": "kEnum",
      "currentValue": "kOmit",
      "enumValues": [
        "kOmit",
        "kNormal",
        "kParenthesised"
      ]
    },
    {
      "path": "fingeringEngravingOptions.gapBetweenHornBranchAndFingering",
      "valueType": "kStaveUnit",
      "currentValue": "1/5",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.hornBranchSeparator",
      "valueType": "kEnum",
      "currentValue": "kNone",
      "enumValues": [
        "kNone",
        "kSlash",
        "kColon"
      ]
    },
    {
      "path": "fingeringEngravingOptions.showAltoForEFlatBranch",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.textForAltoBranchOnTripleHorn",
      "valueType": "kString",
      "currentValue": "al.",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.slurRelativePosition",
      "valueType": "kEnum",
      "currentValue": "kInside",
      "enumValues": [
        "kInside",
        "kOutside"
      ]
    },
    {
      "path": "fingeringEngravingOptions.circularEnclosureThickness",
      "valueType": "kStaveUnit",
      "currentValue": "1/10",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.circularEnclosureGap",
      "valueType": "kStaveUnit",
      "currentValue": "1/6",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.circularEnclosureAdditionalStaveDistanceMargin",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.underlineThickness",
      "valueType": "kStaveUnit",
      "currentValue": "1/12",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.underlineOffset",
      "valueType": "kStaveUnit",
      "currentValue": "1/18",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.underlineMinimumLength",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.alternativeFingeringPlacement",
      "valueType": "kEnum",
      "currentValue": "kRight",
      "enumValues": [
        "kRight",
        "kBelow"
      ]
    },
    {
      "path": "fingeringEngravingOptions.verticalGapBetweenFingeringAndAlternative",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.alternativeFingeringAppearance",
      "valueType": "kEnum",
      "currentValue": "kParentheses",
      "enumValues": [
        "kParentheses",
        "kBrackets",
        "kItalicise",
        "kNone"
      ]
    },
    {
      "path": "fingeringEngravingOptions.positionPluckedFingeringsOnNoteheadSideWhenNoConflictingVoicesActive",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.alwaysPositionThumbFingeringsBelowTheStaveWhenNoConflictingVoicesActive",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.crossStaveChordFingeringBehaviour",
      "valueType": "kEnum",
      "currentValue": "kPositionOnHomeStave",
      "enumValues": [
        "kIgnoreCrossStaveChords",
        "kPositionOnHomeStave",
        "kPositionOnNoteheadSide",
        "kPositionOnStemSide",
        "kPositionAboveTopStave",
        "kPositionBelowBottomStave"
      ]
    },
    {
      "path": "fingeringEngravingOptions.enableRightHandFingeringForPluckedInstruments",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.thumbIndicator",
      "valueType": "kEnum",
      "currentValue": "kP",
      "enumValues": [
        "kP",
        "kT"
      ]
    },
    {
      "path": "fingeringEngravingOptions.pinkyIndicator",
      "valueType": "kEnum",
      "currentValue": "kE",
      "enumValues": [
        "kE",
        "kQ",
        "kC",
        "kS",
        "kO",
        "kX"
      ]
    },
    {
      "path": "fingeringEngravingOptions.defaultDistanceFromIntraStaveNotehead",
      "valueType": "kStaveUnit",
      "currentValue": "1/6",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.minimumDistanceFromOtherIntraStaveObstructions",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.intraStaveFingeringIntervalThresholdForAlignment",
      "valueType": "kInt",
      "currentValue": "6",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.minimumVerticalGapBetweenAdjacentIntraStaveFingerings",
      "valueType": "kStaveUnit",
      "currentValue": "1/7",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.defaultHorizontalGapBetweenAdjacentIntraStaveFingeringsIfNoKerningData",
      "valueType": "kStaveUnit",
      "currentValue": "1/12",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.horizontalIntraStaveFingeringAlignmentThreshold",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.verticalIntraStaveFingeringOffsetFromOutermostStaveLine",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.intraStaveFingeringCollisionAvoidanceArrangement",
      "valueType": "kEnum",
      "currentValue": "kOffsetVertically",
      "enumValues": [
        "kOffsetVertically",
        "kOffsetVerticallyAllowingFingeringsInSpaces",
        "kOffsetHorizontallyOnStaveLinesIfNonAmbiguous",
        "kOffsetHorizontallyAllowingFingeringsInSpaces"
      ]
    },
    {
      "path": "fingeringEngravingOptions.verticalOffsetForIntraStaveFingeringsInSpaces",
      "valueType": "kStaveUnit",
      "currentValue": "-1/7",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.scalePercentageForIntraStaveFingerings",
      "valueType": "kInt",
      "currentValue": "95",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.scalePercentageForIntraStavePluckedFingerings",
      "valueType": "kInt",
      "currentValue": "85",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.eraseBackgroundBehindIntraStaveFingerings",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.intraStaveFingeringErasedBackgroundHorizontalPadding",
      "valueType": "kStaveUnit",
      "currentValue": "1/16",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.intraStaveFingeringErasedBackgroundVerticalPadding",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.intraStaveFingeringCautionaryAppearance",
      "valueType": "kEnum",
      "currentValue": "kOmit",
      "enumValues": [
        "kOmit",
        "kNormal",
        "kParenthesised",
        "kItalic"
      ]
    },
    {
      "path": "fingeringEngravingOptions.gapBetweenPluckedFingeringAndArpeggioLineOrStave",
      "valueType": "kStaveUnit",
      "currentValue": "1/3",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.forceArpeggioLineFingeringsOutsideStave",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.scalePercentageForArpeggioLineFingerings",
      "valueType": "kInt",
      "currentValue": "100",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.gapBetweenArpeggioLineFingeringAndOtherItems",
      "valueType": "kStaveUnit",
      "currentValue": "1/5",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.relativePositionOfPluckedFingeringToBracketIfAtBottomOfChord",
      "valueType": "kEnum",
      "currentValue": "kBelow",
      "enumValues": [
        "kLeft",
        "kBelow"
      ]
    },
    {
      "path": "fingeringEngravingOptions.verticalGapBetweenBracketAndPluckedFingering",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.horizontalGapBetweenBracketAndPluckedFingering",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.pluckedFingeringBracketHorizontalLength",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.pluckedFingeringBracketPenThickness",
      "valueType": "kStaveUnit",
      "currentValue": "1/12",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.pluckedFingeringBracketDistanceFromStaveLines",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.pluckedFingeringBracketDistanceFromNeighbouringBracket",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.intraStaveFingeringExtremeVerticalOverlapThresholdPercentage",
      "valueType": "kInt",
      "currentValue": "70",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.fingeringSlideJoinBehaviour",
      "valueType": "kEnum",
      "currentValue": "kJoinFingeringsWherePossible",
      "enumValues": [
        "kJoinFingeringsWherePossible",
        "kSlideIntoDestinationOnly"
      ]
    },
    {
      "path": "fingeringEngravingOptions.maximumDistanceBetweenFingeringsToJoinWithSingleLine",
      "valueType": "kStaveUnit",
      "currentValue": "10",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.fingeringSlideJoiningLineThickness",
      "valueType": "kStaveUnit",
      "currentValue": "1/12",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.fingeringSlideApproachingLineThickness",
      "valueType": "kStaveUnit",
      "currentValue": "1/6",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.fingeringSlideGapBeforeOrAfterObstruction",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.fingeringSlideLengthApproachingDestination",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.fingeringSlideMinimumVerticalDelta",
      "valueType": "kStaveUnit",
      "currentValue": "1/3",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.fingeringSlideAngleApproachingDestination",
      "valueType": "kInt",
      "currentValue": "15",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.fingeringSlideMinimumDistanceFromStaveLines",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.preferredMaximumAngleForFingeringSlides",
      "valueType": "kInt",
      "currentValue": "30",
      "enumValues": null
    },
    {
      "path": "fingeringEngravingOptions.allowFingeringSlidesToBisectNoteFlags",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "percussionEngravingOptions.percussionLegendDistanceFromStaff",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "percussionEngravingOptions.paddingBelowPercussionLegend",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "percussionEngravingOptions.minimumGapBetweenPercussionLegends",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "percussionEngravingOptions.distanceFromSingleLine",
      "valueType": "kPositionOnStave",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "systemDividerEngravingOptions.drawOnLeft",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "systemDividerEngravingOptions.leftInset",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "systemDividerEngravingOptions.drawOnRight",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "systemDividerEngravingOptions.rightInset",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "markerEngravingOptions.enclosureRectangleLineWidth",
      "valueType": "kStaveUnit",
      "currentValue": "1/6",
      "enumValues": null
    },
    {
      "path": "markerEngravingOptions.enclosureRectanglePadding",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "markerEngravingOptions.contentOrder",
      "valueType": "kEnum",
      "currentValue": "kTextAboveTimecode",
      "enumValues": [
        "kTextAboveTimecode",
        "kTextBelowTimecode"
      ]
    },
    {
      "path": "markerEngravingOptions.gapBetweenMarkerAndStave",
      "valueType": "kStaveUnit",
      "currentValue": "2",
      "enumValues": null
    },
    {
      "path": "markerEngravingOptions.gapBetweenMarkerAndOtherObjects",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "markerEngravingOptions.showTimecode",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "markerEngravingOptions.enclosureBorderStyle",
      "valueType": "kEnum",
      "currentValue": "kRectangle",
      "enumValues": [
        "kRectangle",
        "kRoundRectangle",
        "kCapsule",
        "kAngledEndsRectangle"
      ]
    },
    {
      "path": "markerEngravingOptions.showHoursInTimecode",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "markerEngravingOptions.showMinutesInTimecode",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "markerEngravingOptions.showSecondsInTimecode",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "markerEngravingOptions.showFramesInTimecode",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "divisiEngravingOptions.showDivideArrowsOnVocalStaves",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "divisiEngravingOptions.gapBetweenDivisiLabelsAndStave",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "divisiEngravingOptions.gapBetweenDivisiLabelsAndOtherObjects",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "divisiEngravingOptions.horizontalOffsetForLabel",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "divisiEngravingOptions.eraseBackground",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "divisiEngravingOptions.erasurePadding",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "repeatMarkerEngravingOptions.useJapaneseSymbols",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "repeatMarkerEngravingOptions.distanceFromStave",
      "valueType": "kStaveUnit",
      "currentValue": "3/2",
      "enumValues": null
    },
    {
      "path": "repeatMarkerEngravingOptions.verticalDistanceFromOtherItems",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "repeatMarkerEngravingOptions.textAbbreviation",
      "valueType": "kEnum",
      "currentValue": "kAbbreviateWithDots",
      "enumValues": [
        "kDoNotAbbreviate",
        "kAbbreviateWithDots",
        "kAbbreviateWithoutDots"
      ]
    },
    {
      "path": "repeatMarkerEngravingOptions.symbolBehaviourWithToCodaJumpMarker",
      "valueType": "kEnum",
      "currentValue": "kSymbolToRightOfText",
      "enumValues": [
        "kTextOnly",
        "kSymbolOnly",
        "kSymbolToLeftOfText",
        "kSymbolToRightOfText",
        "kSymbolLeftAlignedBelowText",
        "kSymbolCenteredBelowText",
        "kSymbolRightAlignedBelowText"
      ]
    },
    {
      "path": "repeatMarkerEngravingOptions.symbolBehaviourWithCodaSectionMarker",
      "valueType": "kEnum",
      "currentValue": "kSymbolToLeftOfText",
      "enumValues": [
        "kTextOnly",
        "kSymbolOnly",
        "kSymbolToLeftOfText",
        "kSymbolToRightOfText",
        "kSymbolLeftAlignedBelowText",
        "kSymbolCenteredBelowText",
        "kSymbolRightAlignedBelowText"
      ]
    },
    {
      "path": "repeatMarkerEngravingOptions.textCaseForSectionMarkers",
      "valueType": "kEnum",
      "currentValue": "kTitleCase",
      "enumValues": [
        "kUpperCase",
        "kLowerCase",
        "kSentenceCase",
        "kTitleCase"
      ]
    },
    {
      "path": "repeatMarkerEngravingOptions.textCaseForJumpMarkers",
      "valueType": "kEnum",
      "currentValue": "kTitleCase",
      "enumValues": [
        "kUpperCase",
        "kLowerCase",
        "kSentenceCase",
        "kTitleCase"
      ]
    },
    {
      "path": "repeatMarkerEngravingOptions.verticalGapAboveCodaSymbol",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "repeatMarkerEngravingOptions.multipleSegnoBehaviour",
      "valueType": "kEnum",
      "currentValue": "kShowMultipleSymbols",
      "enumValues": [
        "kShowMultipleSymbols",
        "kShowNumber"
      ]
    },
    {
      "path": "repeatMarkerEngravingOptions.multipleCodaBehaviour",
      "valueType": "kEnum",
      "currentValue": "kShowNumberAndSingleSymbol",
      "enumValues": [
        "kShowNumberAndMultipleSymbols",
        "kShowNumberAndSingleSymbol",
        "kShowMultipleSymbolsOnly"
      ]
    },
    {
      "path": "repeatMarkerEngravingOptions.musicTextScalePercentageForCoda",
      "valueType": "kInt",
      "currentValue": "100",
      "enumValues": null
    },
    {
      "path": "repeatMarkerEngravingOptions.musicTextScalePercentageForSegno",
      "valueType": "kInt",
      "currentValue": "100",
      "enumValues": null
    },
    {
      "path": "repeatMarkerEngravingOptions.baselineShiftForCodaToLeftOrRightOfText",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "repeatMarkerEngravingOptions.segnoAppearanceBehaviourInJumpMarkers",
      "valueType": "kEnum",
      "currentValue": "kShowOnlyAsText",
      "enumValues": [
        "kShowOnlyAsText",
        "kShowOnlyAsSymbol",
        "kShowTextAndSymbol",
        "kShowTextAndSymbolIfDifferentSymbolInQualification"
      ]
    },
    {
      "path": "repeatMarkerEngravingOptions.showCodaAsSymbolInJumpMarkerQualification",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "repeatMarkerEngravingOptions.toCodaLanguage",
      "valueType": "kEnum",
      "currentValue": "kEnglish",
      "enumValues": [
        "kEnglish",
        "kItalian"
      ]
    },
    {
      "path": "repeatMarkerEngravingOptions.distanceBetweenLinesOfTextWhenWrapped",
      "valueType": "kStaveUnit",
      "currentValue": "2/3",
      "enumValues": null
    },
    {
      "path": "repeatMarkerEngravingOptions.lhsIndentForLeftAlignedMarkersAtBarline",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "repeatMarkerEngravingOptions.rhsIndentForRightAlignedMarkersAtBarline",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "repeatMarkerEngravingOptions.minimumDistanceBetweenCoincidentRepeatMarkers",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "repeatMarkerEngravingOptions.codaPositionAtStartOfSystem",
      "valueType": "kEnum",
      "currentValue": "kFollowingPreamble",
      "enumValues": [
        "kFollowingPreamble",
        "kHardLeftOfSystem"
      ]
    },
    {
      "path": "repeatMarkerEngravingOptions.distanceAboveStaveForCodaOverPreamble",
      "valueType": "kStaveUnit",
      "currentValue": "2",
      "enumValues": null
    },
    {
      "path": "repeatMarkerEngravingOptions.systemGapSizeForSectionRepeatMarkers",
      "valueType": "kStaveUnit",
      "currentValue": "6",
      "enumValues": null
    },
    {
      "path": "repeatMarkerEngravingOptions.systemGapSizeForSectionRepeatMarkersAtStartOfSystem",
      "valueType": "kStaveUnit",
      "currentValue": "6",
      "enumValues": null
    },
    {
      "path": "repeatMarkerEngravingOptions.repeatCountLocation",
      "valueType": "kEnum",
      "currentValue": "kEndOfRegion",
      "enumValues": [
        "kStartOfRegion",
        "kEndOfRegion",
        "kNeither",
        "kStartAndEndOfRegion"
      ]
    },
    {
      "path": "repeatMarkerEngravingOptions.repeatCountAppearance",
      "valueType": "kEnum",
      "currentValue": "kPlayNTimes",
      "enumValues": [
        "kPlayNTimes",
        "kRepeatNTimes",
        "kPlayedCountCustom",
        "kRepeatedCountCustom"
      ]
    },
    {
      "path": "repeatMarkerEngravingOptions.repeatCountDistanceFromStave",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "repeatMarkerEngravingOptions.showPlayTwoTimesByDefault",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "repeatMarkerEngravingOptions.customRepeatCountPrefix",
      "valueType": "kString",
      "currentValue": "x",
      "enumValues": null
    },
    {
      "path": "repeatMarkerEngravingOptions.customRepeatCountSuffix",
      "valueType": "kString",
      "currentValue": "",
      "enumValues": null
    },
    {
      "path": "repeatMarkerEngravingOptions.repeatCountHorizontalOffsetFromBarline",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "jazzArticulationEngravingOptions.lineStyleForLifts",
      "valueType": "kEnum",
      "currentValue": "kWavy",
      "enumValues": [
        "kStraight",
        "kWavy",
        "kDashed"
      ]
    },
    {
      "path": "jazzArticulationEngravingOptions.lineStyleForSmoothPlops",
      "valueType": "kEnum",
      "currentValue": "kWavy",
      "enumValues": [
        "kStraight",
        "kWavy",
        "kDashed"
      ]
    },
    {
      "path": "jazzArticulationEngravingOptions.lineStyleForSmoothFalls",
      "valueType": "kEnum",
      "currentValue": "kWavy",
      "enumValues": [
        "kStraight",
        "kWavy",
        "kDashed"
      ]
    },
    {
      "path": "jazzArticulationEngravingOptions.lineStyleForSmoothDoits",
      "valueType": "kEnum",
      "currentValue": "kWavy",
      "enumValues": [
        "kStraight",
        "kWavy",
        "kDashed"
      ]
    },
    {
      "path": "jazzArticulationEngravingOptions.durationForBentFalls",
      "valueType": "kEnum",
      "currentValue": "kMedium",
      "enumValues": [
        "kShort",
        "kMedium",
        "kLong"
      ]
    },
    {
      "path": "jazzArticulationEngravingOptions.durationForBentDoits",
      "valueType": "kEnum",
      "currentValue": "kMedium",
      "enumValues": [
        "kShort",
        "kMedium",
        "kLong"
      ]
    },
    {
      "path": "jazzArticulationEngravingOptions.gapToRightOfInwardArticulations",
      "valueType": "kStaveUnit",
      "currentValue": "1/6",
      "enumValues": null
    },
    {
      "path": "jazzArticulationEngravingOptions.gapToLeftOfOutwardArticulations",
      "valueType": "kStaveUnit",
      "currentValue": "1/6",
      "enumValues": null
    },
    {
      "path": "jazzArticulationEngravingOptions.lineIntervalSpan",
      "valueType": "kIntervalDegree",
      "currentValue": "5",
      "enumValues": null
    },
    {
      "path": "jazzArticulationEngravingOptions.horizontalLineSpan",
      "valueType": "kStaveUnit",
      "currentValue": "2",
      "enumValues": null
    },
    {
      "path": "jazzArticulationEngravingOptions.lineThickness",
      "valueType": "kStaveUnit",
      "currentValue": "1/7",
      "enumValues": null
    },
    {
      "path": "jazzArticulationEngravingOptions.dashLength",
      "valueType": "kStaveUnit",
      "currentValue": "3/7",
      "enumValues": null
    },
    {
      "path": "jazzArticulationEngravingOptions.gapLength",
      "valueType": "kStaveUnit",
      "currentValue": "1/5",
      "enumValues": null
    },
    {
      "path": "jazzArticulationEngravingOptions.alignArticulationsHorizontally",
      "valueType": "kEnum",
      "currentValue": "kWithinThreshold",
      "enumValues": [
        "kAlways",
        "kNever",
        "kWithinThreshold"
      ]
    },
    {
      "path": "jazzArticulationEngravingOptions.thresholdForHorizontalAlignment",
      "valueType": "kStaveUnit",
      "currentValue": "3/5",
      "enumValues": null
    },
    {
      "path": "jazzArticulationEngravingOptions.verticalOffsetForArticulationsOnStaveLines",
      "valueType": "kStaveUnit",
      "currentValue": "3/8",
      "enumValues": null
    },
    {
      "path": "jazzArticulationEngravingOptions.minimumGapAroundArticulations",
      "valueType": "kStaveUnit",
      "currentValue": "1/6",
      "enumValues": null
    },
    {
      "path": "jazzArticulationEngravingOptions.alwaysPositionOutwardArticulationsToRightOfRhythmDots",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "jazzArticulationEngravingOptions.lineFarsideStaveLineAvoidanceGap",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "jazzArticulationEngravingOptions.spacingMarginAroundJazzArticulations",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "tacetEngravingOptions.useBorder",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "tacetEngravingOptions.tacetPadding",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "tacetEngravingOptions.tacetBorderThickness",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "harpPedalEngravingOptions.diagramLineWidth",
      "valueType": "kStaveUnit",
      "currentValue": "1/6",
      "enumValues": null
    },
    {
      "path": "harpPedalEngravingOptions.diagramPedalBoxWidth",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "harpPedalEngravingOptions.diagramPedalBoxHeight",
      "valueType": "kStaveUnit",
      "currentValue": "7/4",
      "enumValues": null
    },
    {
      "path": "harpPedalEngravingOptions.diagramGapBetweenPedals",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "harpPedalEngravingOptions.diagramVerticalGapForTopBottomBox",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "harpPedalEngravingOptions.harpLeftPedalsOrderForTwoLineNoteNames",
      "valueType": "kEnum",
      "currentValue": "kDCB",
      "enumValues": [
        "kDCB",
        "kBCD"
      ]
    },
    {
      "path": "harpPedalEngravingOptions.gapBeetwenStaveLineAndHarpPedal",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "harpPedalEngravingOptions.gapBeetwenObjectAndHarpPedal",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "harpPedalEngravingOptions.allowPartialChanges",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "harpPedalEngravingOptions.maximumPedalsInPartialChange",
      "valueType": "kInt",
      "currentValue": "3",
      "enumValues": null
    },
    {
      "path": "harpPedalEngravingOptions.showBorder",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "harpPedalEngravingOptions.erasurePadding",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "harpPedalEngravingOptions.borderThickness",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "harpPedalEngravingOptions.centerBetweenStaves",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "harpPedalEngravingOptions.horizontalGapBetweenHarpPedals",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "harpPedalEngravingOptions.alwaysShowPartialPedallingInTwoLines",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "harpPedalEngravingOptions.thresholdForShowingPartialPedallingInTwoLines",
      "valueType": "kInt",
      "currentValue": "4",
      "enumValues": null
    },
    {
      "path": "harpPedalEngravingOptions.eraseBackground",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "harpPedalEngravingOptions.useBorderThicknessAndPaddingFromParagraphStyle",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "condensingEngravingOptions.gapBetweenCondensationLabelsAndStave",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "condensingEngravingOptions.gapBetweenCondensationLabelsAndOtherObjects",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "condensingEngravingOptions.separatorBetweenPlayerNumbersInLabels",
      "valueType": "kEnum",
      "currentValue": "kPeriod",
      "enumValues": [
        "kPeriod",
        "kComma",
        "kSpace"
      ]
    },
    {
      "path": "condensingEngravingOptions.showFullStopAfterLastPlayerNumberInLabels",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "condensingEngravingOptions.labelToIndicationString",
      "valueType": "kString",
      "currentValue": "a ",
      "enumValues": null
    },
    {
      "path": "condensingEngravingOptions.horizontalOffsetForLabel",
      "valueType": "kStaveUnit",
      "currentValue": "-2",
      "enumValues": null
    },
    {
      "path": "condensingEngravingOptions.eraseBackground",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "condensingEngravingOptions.erasurePadding",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "condensingEngravingOptions.showFullStopAfterSinglePlayerNumberInLabels",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "condensingEngravingOptions.showToIndicationWhenCoincidingWithPlayerNumbers",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "condensingEngravingOptions.useRangesForConsecutivePlayerNumbers",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "stringIndicatorEngravingOptions.indicatorScaleFactorPercentageInsideStave",
      "valueType": "kInt",
      "currentValue": "66",
      "enumValues": null
    },
    {
      "path": "stringIndicatorEngravingOptions.minimumGapBetweenNoteheadAndIndicator",
      "valueType": "kStaveUnit",
      "currentValue": "1/5",
      "enumValues": null
    },
    {
      "path": "stringIndicatorEngravingOptions.minimumGapBetweenOtherObjectsAndIndicator",
      "valueType": "kStaveUnit",
      "currentValue": "1/6",
      "enumValues": null
    },
    {
      "path": "stringIndicatorEngravingOptions.minimumVerticalGapBetweenIndicators",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "stringIndicatorEngravingOptions.scaleIndicatorsOnGraceNotes",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "stringIndicatorEngravingOptions.eraseBackgroundInsideIndicators",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "stringIndicatorEngravingOptions.erasureOffsetFromPerimeter",
      "valueType": "kStaveUnit",
      "currentValue": "1/20",
      "enumValues": null
    },
    {
      "path": "stringIndicatorEngravingOptions.stringIndicatorPositionDeltaThresholdForAlignment",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "stringIndicatorEngravingOptions.arrangeIndicatorsForSamePitchHorizontally",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "stringIndicatorEngravingOptions.gapBetweenObjectsOffsetHorizontallySharingSameStavePosition",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "stringIndicatorEngravingOptions.stringIndicatorIntervalThresholdForAlignment",
      "valueType": "kInt",
      "currentValue": "8",
      "enumValues": null
    },
    {
      "path": "stringIndicatorEngravingOptions.defaultNoteheadRelativePosition",
      "valueType": "kEnum",
      "currentValue": "kOnLeftIfNoFingeringsOtherwiseRight",
      "enumValues": [
        "kAlwaysOnRight",
        "kAlwaysOnLeft",
        "kOnLeftIfNoFingeringsOtherwiseRight",
        "kOnLeftIfNoCollidingFingeringsOtherwiseRight"
      ]
    },
    {
      "path": "stringIndicatorEngravingOptions.allocateUnisonStringIndicesToBothSidesOfNotehead",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "stringIndicatorEngravingOptions.openStringAppearance",
      "valueType": "kEnum",
      "currentValue": "kShowZeroAsFingering",
      "enumValues": [
        "kShowStringNumberInStringIndicator",
        "kShowZeroInStringIndicator",
        "kShowZeroAsFingering"
      ]
    },
    {
      "path": "horizontalLineEngravingOptions.verticalGapBetweenHorizontalLineAndStaveLine",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "horizontalLineEngravingOptions.verticalGapBetweenHorizontalLineAndObject",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "horizontalLineEngravingOptions.horizontalGapAtStartForInsideStaffHorizontalLine",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "horizontalLineEngravingOptions.horizontalGapAtEndForInsideStaffHorizontalLine",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "horizontalLineEngravingOptions.horizontalGapAtStartForOutsideStaffHorizontalLine",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "horizontalLineEngravingOptions.horizontalGapAtEndForOutsideStaffHorizontalLine",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "horizontalLineEngravingOptions.gapBetweenBarlineAttachedHorizontalLines",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "horizontalLineEngravingOptions.horizontalGapBeforeEndOfSystem",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.appearanceFor53",
      "valueType": "kEnum",
      "currentValue": "kShowNothing",
      "enumValues": [
        "kShowNothing",
        "kShowBothNumbers",
        "kShow5Only",
        "kShow3Only"
      ]
    },
    {
      "path": "figuredBassEngravingOptions.alteredThirdAppearance",
      "valueType": "kEnum",
      "currentValue": "kShowAlterationOnlyWithNumberInSuspensions",
      "enumValues": [
        "kShowNumberAndAlteration",
        "kShowAlterationOnly",
        "kShowAlterationOnlyWithNumberInSuspensions"
      ]
    },
    {
      "path": "figuredBassEngravingOptions.appearanceFor63",
      "valueType": "kEnum",
      "currentValue": "kShow6Only",
      "enumValues": [
        "kShowBothNumbers",
        "kShow6Only"
      ]
    },
    {
      "path": "figuredBassEngravingOptions.appearanceFor753",
      "valueType": "kEnum",
      "currentValue": "kShow7Only",
      "enumValues": [
        "kShowAllNumbers",
        "kShow7Only"
      ]
    },
    {
      "path": "figuredBassEngravingOptions.appearanceFor653",
      "valueType": "kEnum",
      "currentValue": "kShow65Only",
      "enumValues": [
        "kShowAllNumbers",
        "kShow65Only"
      ]
    },
    {
      "path": "figuredBassEngravingOptions.firstInversionDominant7thAppearance",
      "valueType": "kEnum",
      "currentValue": "kShowAsFigures",
      "enumValues": [
        "kShowAsFigures",
        "kShowAsFlat5"
      ]
    },
    {
      "path": "figuredBassEngravingOptions.appearanceFor643",
      "valueType": "kEnum",
      "currentValue": "kShow43Only",
      "enumValues": [
        "kShowAllNumbers",
        "kShow43Only"
      ]
    },
    {
      "path": "figuredBassEngravingOptions.appearanceFor642",
      "valueType": "kEnum",
      "currentValue": "kShow42Only",
      "enumValues": [
        "kShowAllNumbers",
        "kShow42Only",
        "kShow2Only"
      ]
    },
    {
      "path": "figuredBassEngravingOptions.thirdInversionDominant7thAppearance",
      "valueType": "kEnum",
      "currentValue": "kShowAsFigures",
      "enumValues": [
        "kShowAsFigures",
        "kShowAsSharp4"
      ]
    },
    {
      "path": "figuredBassEngravingOptions.suspension43Appearance",
      "valueType": "kEnum",
      "currentValue": "kShowAllNumbers",
      "enumValues": [
        "kShowAllNumbers",
        "kShow4And3Only"
      ]
    },
    {
      "path": "figuredBassEngravingOptions.suspension76Appearance",
      "valueType": "kEnum",
      "currentValue": "kShowAllNumbers",
      "enumValues": [
        "kShowAllNumbers",
        "kShow7And6Only"
      ]
    },
    {
      "path": "figuredBassEngravingOptions.diminishedIntervalPitchConfirmation",
      "valueType": "kEnum",
      "currentValue": "kConfirmIfDiminishedFromNextLowestFigure",
      "enumValues": [
        "kConfirmIfDiminishedFromBass",
        "kConfirmIfDiminishedFromNextLowestFigure",
        "kConfirmIfDiminishedFromAnyLowerFigureOrBass",
        "kConfirmNone"
      ]
    },
    {
      "path": "figuredBassEngravingOptions.naturallyDiminishedIntervalAccidentalOrFigureSuppression",
      "valueType": "kEnum",
      "currentValue": "kSuppressNone",
      "enumValues": [
        "kSuppressIfDiminishedFromBass",
        "kSuppressIfDiminishedFromNextLowestFigure",
        "kSuppressIfDiminishedFromAnyLowerFigureOrBass",
        "kSuppressNone"
      ]
    },
    {
      "path": "figuredBassEngravingOptions.accidentalOrSlashPreference",
      "valueType": "kEnum",
      "currentValue": "kOnlyUseAccidentals",
      "enumValues": [
        "kOnlyUseAccidentals",
        "kUseSlashesThatRaisePitchWherePossible",
        "kUseAllSlashesWherePossible"
      ]
    },
    {
      "path": "figuredBassEngravingOptions.accidentalRelativity",
      "valueType": "kEnum",
      "currentValue": "kAbsolute",
      "enumValues": [
        "kAbsolute",
        "kRelativeToKeySignature"
      ]
    },
    {
      "path": "figuredBassEngravingOptions.accidentalPositionRelativeToNumber",
      "valueType": "kEnum",
      "currentValue": "kBefore",
      "enumValues": [
        "kBefore",
        "kAfter"
      ]
    },
    {
      "path": "figuredBassEngravingOptions.gapBetweenAccidentalAndNumber",
      "valueType": "kStaveUnit",
      "currentValue": "1/6",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.gapBetweenFiguresAndLines",
      "valueType": "kStaveUnit",
      "currentValue": "1/3",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.gapBetweenFiguresAndLinesInNonDeferredSuspensionResolutions",
      "valueType": "kStaveUnit",
      "currentValue": "1/6",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.holdLineThickness",
      "valueType": "kStaveUnit",
      "currentValue": "1/10",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.suspensionLineThickness",
      "valueType": "kStaveUnit",
      "currentValue": "1/10",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.cautionaryAlterationsBehaviour",
      "valueType": "kEnum",
      "currentValue": "kDoNotShow",
      "enumValues": [
        "kDoNotShow",
        "kShowInSameBar",
        "kShowInSameOrNextBar"
      ]
    },
    {
      "path": "figuredBassEngravingOptions.revisedBassNoteBehaviour",
      "valueType": "kEnum",
      "currentValue": "kReviseFigures",
      "enumValues": [
        "kReviseFigures",
        "kShowAsSignpost",
        "kDoNotDisplay"
      ]
    },
    {
      "path": "figuredBassEngravingOptions.verticalGapBetweenRowsOfFigures",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.gapBetweenSuspensionAndResolution",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.gapBetweenSuspensionAndResolutionJoinedByLine",
      "valueType": "kStaveUnit",
      "currentValue": "5/4",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.additionalGapToLeaveForParenthesisOnOneSideOfLineBetweenSuspensionAndResolution",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.perSystemAlignmentWhenBelowStave",
      "valueType": "kEnum",
      "currentValue": "kAlignTopFigures",
      "enumValues": [
        "kAlignTopFigures",
        "kAlignBottomFigures"
      ]
    },
    {
      "path": "figuredBassEngravingOptions.perSystemAlignmentWhenAboveStave",
      "valueType": "kEnum",
      "currentValue": "kAlignBottomFigures",
      "enumValues": [
        "kAlignTopFigures",
        "kAlignBottomFigures"
      ]
    },
    {
      "path": "figuredBassEngravingOptions.raisedFifthSlashType",
      "valueType": "kEnum",
      "currentValue": "kStraightVerticalLine",
      "enumValues": [
        "kStraightVerticalLine",
        "kAngledLine"
      ]
    },
    {
      "path": "figuredBassEngravingOptions.raisedSixthSlashType",
      "valueType": "kEnum",
      "currentValue": "kAngledLineThroughBottom",
      "enumValues": [
        "kAngledLineThroughBottom",
        "kAngledLineThroughTop"
      ]
    },
    {
      "path": "figuredBassEngravingOptions.usePlainTextFontForFiguredBass",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.minimumDistanceFromStave",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.minimumDistanceFromOtherObjects",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.lineBetweenSuspensionAndResolutionBehaviour",
      "valueType": "kEnum",
      "currentValue": "kNeverDrawLine",
      "enumValues": [
        "kNeverDrawLine",
        "kOnlyDrawWhenResolutionBeforeNextSetOfFigures",
        "kAlwaysDrawLine"
      ]
    },
    {
      "path": "figuredBassEngravingOptions.continueHoldsAfterResolutions",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.centreFiguresOnNoteheads",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.scaleFactorPercentage",
      "valueType": "kInt",
      "currentValue": "100",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.accidentalScaleFactorPercentage",
      "valueType": "kInt",
      "currentValue": "100",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.minimumViableLengthForLines",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.minimumViableLengthForSuspensionLineWithNonDeferredResolution",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.assumedHeightForRowContainingOnlyLines",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.allowHoldLinesToCrossAccidentalsAndResolutionFiguresInOtherRows",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.gapToLeaveBeforeLinesEndingAtBarlines",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.gapToLeaveBeforeLinesEndingAtEndOfSystem",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.gapToLeaveBeforeLineWithNoVisibleFigures",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.horizontalPaddingAroundComposites",
      "valueType": "kStaveUnit",
      "currentValue": "1/16",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.horizontalPaddingAroundLines",
      "valueType": "kStaveUnit",
      "currentValue": "1/10",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.showSingleHoldLineWherePossible",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.singleHoldLineVerticalPosition",
      "valueType": "kEnum",
      "currentValue": "kMiddle",
      "enumValues": [
        "kTop",
        "kMiddle",
        "kBottom"
      ]
    },
    {
      "path": "figuredBassEngravingOptions.showSignPostsForInvisibleFiguresOnRests",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.showSignPostsForOrphanedFiguresWithNoBassNote",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.useNeueBachAusgabeAccidentalPositioning",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.horizontalGapBetweenAccidentalsUsingNeueBachAusgabePositioning",
      "valueType": "kStaveUnit",
      "currentValue": "1/12",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.verticalGapBetweenAccidentalsUsingNeueBachAusgabePositioning",
      "valueType": "kStaveUnit",
      "currentValue": "1/12",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.verticalOverlapThrehsoldForAccidentalsUsingNeueBachAusgabePositioningToMoveVertically",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.verticalOverlapThrehsoldForFourAccidentalsUsingNeueBachAusgabePositioningToMoveVertically",
      "valueType": "kStaveUnit",
      "currentValue": "1/6",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.neueBachAusgabeAnchoringBehaviour",
      "valueType": "kEnum",
      "currentValue": "kAnchorFigureClosestToStaveWhenBeyondThreshold",
      "enumValues": [
        "kAnchorFigureClosestToStave",
        "kAnchorFigureClosestToStaveWhenBeyondThreshold",
        "kAnchorNone"
      ]
    },
    {
      "path": "figuredBassEngravingOptions.neueBachAusgabeAnchoringOffsetThreshold",
      "valueType": "kStaveUnit",
      "currentValue": "1/3",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.neueBachAusgabeAnchoringOffsetThresholdForFourAccidentals",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.parenthesisCurveMiddleThickness",
      "valueType": "kStaveUnit",
      "currentValue": "1/10",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.parenthesisCurveEndThickness",
      "valueType": "kStaveUnit",
      "currentValue": "3/40",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.parenthesisCurveHorizontalExtentForHeightOfSpace",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.parenthesisCurveHorizontalExtentForHeightOfFourSpaces",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.parenthesisCurveMaximumHorizontalExtent",
      "valueType": "kStaveUnit",
      "currentValue": "3/5",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.gapOutsideParenthesesAndBrackets",
      "valueType": "kStaveUnit",
      "currentValue": "1/12",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.gapInsideParentheses",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.verticalProtrusionOfParenthesesBeyondGlyphBounds",
      "valueType": "kStaveUnit",
      "currentValue": "1/25",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.bracketPenWidth",
      "valueType": "kStaveUnit",
      "currentValue": "1/16",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.bracketHookLength",
      "valueType": "kStaveUnit",
      "currentValue": "1/5",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.gapInsideBrackets",
      "valueType": "kStaveUnit",
      "currentValue": "1/6",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.verticalProtrusionOfBracketsBeyondGlyphBounds",
      "valueType": "kStaveUnit",
      "currentValue": "1/10",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.bracketStyle",
      "valueType": "kEnum",
      "currentValue": "kBrackets",
      "enumValues": [
        "kParentheses",
        "kBrackets"
      ]
    },
    {
      "path": "figuredBassEngravingOptions.reviseOctaveAs1",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.endHoldLinesAtPreviousNotehead",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.showCautionaryAccidentalsForContradictoryPitchClassesInSameChord",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.showCautionaryAccidentalsForContradictoryPitchClassesInPreviousChord",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.parenthesiseCautionaryAccidentals",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.minimumVerticalGapAboveAndBelowParenthesesOrBrackets",
      "valueType": "kStaveUnit",
      "currentValue": "1/12",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.minimumVerticalGapBetweenRowsOnceParenthesesInjected",
      "valueType": "kStaveUnit",
      "currentValue": "1/12",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.gapInsideParenthesesForLines",
      "valueType": "kStaveUnit",
      "currentValue": "1/6",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.gapInsideParenthesesForNonDeferredSuspensionLines",
      "valueType": "kStaveUnit",
      "currentValue": "1/8",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.gapInsideBracketsForLines",
      "valueType": "kStaveUnit",
      "currentValue": "1/4",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.gapInsideBracketsForNonDeferredSuspensionLines",
      "valueType": "kStaveUnit",
      "currentValue": "1/6",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.verticalProtrusionForParenthesesAroundSingleLine",
      "valueType": "kStaveUnit",
      "currentValue": "1/3",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.verticalProtrusionForBracketsAroundSingleLine",
      "valueType": "kStaveUnit",
      "currentValue": "1/3",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.verticalProtrusionForParenthesesAroundMultipleLines",
      "valueType": "kStaveUnit",
      "currentValue": "2/5",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.verticalProtrusionForBracketsAroundMultipleLines",
      "valueType": "kStaveUnit",
      "currentValue": "2/5",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.parenthesisForLineCurveHorizontalExtentForHeightOfSpace",
      "valueType": "kStaveUnit",
      "currentValue": "1/7",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.parenthesisForLineCurveHorizontalExtentForHeightOfFourSpaces",
      "valueType": "kStaveUnit",
      "currentValue": "2/5",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.allowLinesToTuckInsideParenthesesIndividually",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.hookLengthForBracketsAroundLines",
      "valueType": "kStaveUnit",
      "currentValue": "1/3",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.hookLengthForBracketsAroundNonDeferredSuspensionLines",
      "valueType": "kStaveUnit",
      "currentValue": "1/5",
      "enumValues": null
    },
    {
      "path": "figuredBassEngravingOptions.bracketStyleAroundLines",
      "valueType": "kEnum",
      "currentValue": "kBrackets",
      "enumValues": [
        "kParentheses",
        "kBrackets"
      ]
    },
    {
      "path": "figuredBassEngravingOptions.tastoSoloAppearance",
      "valueType": "kEnum",
      "currentValue": "kTastoSoloLowerCase",
      "enumValues": [
        "kTastoSoloLowerCase",
        "kTastoSoloSentenceCase",
        "kTastoLowerCase"
      ]
    }
  ],
  "notationOptionsCount": 128,
  "notationOptions": [
    {
      "path": "noteGroupingOptions.splitLongNotesOnBeatsEndingInMiddleOfBeatAtHalfBar",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "noteGroupingOptions.splitLongNotesOnBeatsFollowedByRestInMiddleOfBeatIntoSeparateBeats",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "noteGroupingOptions.splitLongMultiplesOfBeatAtStartOfBarAtHalfBar",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "noteGroupingOptions.splitLongMultiplesOfBeatAfterStartOfBarAtHalfBar",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "noteGroupingOptions.splitNoteStartingInMiddleOfBeatAndCrossingHalfBarAtFirstBeatBoundaryToo",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "noteGroupingOptions.allowSubDivisionsOfCompoundBeatsToBeNotatedWithDotsIfBeatIsFull",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "noteGroupingOptions.allowSingleNoteToFillEntireIrregularBar",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "noteGroupingOptions.breakNotesAcrossAllBeatsInIrregularBar",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "noteGroupingOptions.groupCutTimeLikeCommonTime",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "noteGroupingOptions.useCompoundBeatsInFiveFour",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "restGroupingOptions.allowDottedRestsAtEndOfSimpleBeats",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "restGroupingOptions.consolidateRestsAtStartOfCompoundBeat",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "restGroupingOptions.consolidateRestsInMiddleOfCompoundBeat",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "restGroupingOptions.allowHalfBarRestsEvenIfDotOptionsForbidThem",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "restGroupingOptions.allowDottedRestsEqualToLengthOfCompoundBeat",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "restGroupingOptions.splitRestsAtAllBeatBoundariesInIrregularTimeSignatures",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "restGroupingOptions.barRestAppearanceInLongBars",
      "valueType": "kEnum",
      "currentValue": "kSemibreve",
      "enumValues": [
        "kBreve",
        "kSemibreve"
      ]
    },
    {
      "path": "accidentalStateCalcOptions.durationBehaviour",
      "valueType": "kEnum",
      "currentValue": "kCommonPractice",
      "enumValues": [
        "kCommonPractice",
        "kSecondVienneseSchool",
        "kModernist"
      ]
    },
    {
      "path": "accidentalStateCalcOptions.commonOptions.restateAccidentalsForEachPlayer",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "accidentalStateCalcOptions.commonOptions.useArchaicCancellationsForDoubles",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "accidentalStateCalcOptions.commonOptions.restateKeysignatureAccidentalsForTrills",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "accidentalStateCalcOptions.cautionaryOptions.showCautionariesForNotesInSameBarAtDifferentOctaves",
      "valueType": "kEnum",
      "currentValue": "kShow",
      "enumValues": [
        "kHide",
        "kShow",
        "kParenthesise"
      ]
    },
    {
      "path": "accidentalStateCalcOptions.cautionaryOptions.showCautionariesForNotesInNextBarAtSameOctave",
      "valueType": "kEnum",
      "currentValue": "kShow",
      "enumValues": [
        "kHide",
        "kShow",
        "kParenthesise"
      ]
    },
    {
      "path": "accidentalStateCalcOptions.cautionaryOptions.showCautionariesForNotesInNextBarAtDifferentOctaves",
      "valueType": "kEnum",
      "currentValue": "kShow",
      "enumValues": [
        "kHide",
        "kShow",
        "kParenthesise"
      ]
    },
    {
      "path": "accidentalStateCalcOptions.cautionaryOptions.showCautionaryForFirstOccurrenceOfNoteInNextBar",
      "valueType": "kEnum",
      "currentValue": "kHide",
      "enumValues": [
        "kHide",
        "kShow",
        "kParenthesise"
      ]
    },
    {
      "path": "accidentalStateCalcOptions.cautionaryOptions.showCautionariesAtTiesOnSystemBreaks",
      "valueType": "kEnum",
      "currentValue": "kShow",
      "enumValues": [
        "kHide",
        "kShow",
        "kParenthesise"
      ]
    },
    {
      "path": "accidentalStateCalcOptions.cautionaryOptions.showCautionariesForDimAndAugIntervals",
      "valueType": "kEnum",
      "currentValue": "kHide",
      "enumValues": [
        "kHide",
        "kShow",
        "kParenthesise"
      ]
    },
    {
      "path": "accidentalStateCalcOptions.cautionaryOptions.showCautionariesFollowingKeySigChangeInSameBar",
      "valueType": "kEnum",
      "currentValue": "kHide",
      "enumValues": [
        "kHide",
        "kShow",
        "kParenthesise"
      ]
    },
    {
      "path": "accidentalStateCalcOptions.cautionaryOptions.showCautionariesFollowingKeySigChangeInNextBar",
      "valueType": "kEnum",
      "currentValue": "kHide",
      "enumValues": [
        "kHide",
        "kShow",
        "kParenthesise"
      ]
    },
    {
      "path": "accidentalStateCalcOptions.cautionaryOptions.showCautionariesForPitchesPreviouslyModifiedByGraceNotes",
      "valueType": "kEnum",
      "currentValue": "kHide",
      "enumValues": [
        "kHide",
        "kShow",
        "kParenthesise"
      ]
    },
    {
      "path": "accidentalStateCalcOptions.cautionaryOptions.showCautionariesForPitchesOnlyPreviouslySeenInCues",
      "valueType": "kEnum",
      "currentValue": "kShow",
      "enumValues": [
        "kHide",
        "kShow",
        "kParenthesise"
      ]
    },
    {
      "path": "accidentalStateCalcOptions.cautionaryOptions.showCautionariesForPitchesOnlyPreviouslySeenInTrills",
      "valueType": "kEnum",
      "currentValue": "kShow",
      "enumValues": [
        "kHide",
        "kShow",
        "kParenthesise"
      ]
    },
    {
      "path": "accidentalStateCalcOptions.cautionaryOptions.suppressCautionariesAfterEnharmonicEquivalents",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "accidentalStateCalcOptions.cautionaryOptions.suppressCautionariesFollowingKeySigCancellations",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "accidentalStateCalcOptions.cautionaryOptions.suppressCautionariesAlreadyStatedInBar",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "accidentalStateCalcOptions.cautionaryOptions.suppressCautionariesAtSamePitchAndOctaveInAnotherVoice",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "accidentalStateCalcOptions.secondVienneseSchoolOptions.accidentalPersistWithinBar",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "accidentalStateCalcOptions.secondVienneseSchoolOptions.suppressOnImmediateRepetitions",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "accidentalStateCalcOptions.secondVienneseSchoolOptions.suppressOnRepetitionsWithinABeamGroup",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "accidentalStateCalcOptions.secondVienneseSchoolOptions.showCancellationOnRepetitionOfNoteName",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "accidentalStateCalcOptions.modernistOptions.accidentalPersistWithinBar",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "accidentalStateCalcOptions.modernistOptions.suppressOnImmediateRepetitions",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "accidentalStateCalcOptions.modernistOptions.suppressOnRepetitionsWithinABeamGroup",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "accidentalStateCalcOptions.modernistOptions.showCancellationOnRepetitionOfNoteName",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "accidentalStateCalcOptions.modernistCautionaryOptions.showCautionariesForNotesInSameBarAtSameOctave",
      "valueType": "kEnum",
      "currentValue": "kHide",
      "enumValues": [
        "kHide",
        "kShow",
        "kParenthesise"
      ]
    },
    {
      "path": "accidentalStateCalcOptions.modernistCautionaryOptions.showCautionariesForNotesInSameBarAtDifferentOctaves",
      "valueType": "kEnum",
      "currentValue": "kHide",
      "enumValues": [
        "kHide",
        "kShow",
        "kParenthesise"
      ]
    },
    {
      "path": "accidentalStateCalcOptions.modernistCautionaryOptions.showCautionariesForNotesInNextBarAtSameOctave",
      "valueType": "kEnum",
      "currentValue": "kHide",
      "enumValues": [
        "kHide",
        "kShow",
        "kParenthesise"
      ]
    },
    {
      "path": "accidentalStateCalcOptions.modernistCautionaryOptions.showCautionariesForNotesInNextBarAtDifferentOctaves",
      "valueType": "kEnum",
      "currentValue": "kHide",
      "enumValues": [
        "kHide",
        "kShow",
        "kParenthesise"
      ]
    },
    {
      "path": "beamingOptions.alwaysJoinSecondaryGroupsWithQuaverBeam",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "beamingOptions.allowHalfBarsToBeamTogether",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "beamingOptions.allowHalfBarsToBeamTogetherIncludingRests",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "beamingOptions.halfOrQuarterBarBeamsMustFillEntireSection",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "beamingOptions.splitHalfBarBeamsAtQuarterBarsInLongTimeSignatures",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "beamingOptions.allowBeamsToCrossBeatsInSimpleNonHalfBarTimeSig_CrotchetUnit",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "beamingOptions.allowBeamsToCrossBeatsInSimpleNonHalfBarTimeSig_QuaverUnit",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "beamingOptions.allowBeamsToCrossBeatsInSimpleNonHalfBarTimeSig_SemiQuaverUnitOrShorter",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "beamingOptions.beamsAcrossBeatsInSimpleNonHalfBarTimeSigsMustFillBar",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "beamingOptions.breakQuaverBeamWhenTupletStartsOrEndsWithQuaver",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "beamingOptions.restBeamingOptions.restPrimaryBeamBehaviour",
      "valueType": "kEnum",
      "currentValue": "kAllowRestsInMiddleOfBeamWithoutStemlets",
      "enumValues": [
        "kUseStemlets",
        "kAllowRestsAnywhereInBeamWithoutStemlets",
        "kAllowRestsInMiddleOfBeamWithoutStemlets",
        "kBreakBeamsAtRests"
      ]
    },
    {
      "path": "beamingOptions.restBeamingOptions.restSecondaryBeamBehaviour",
      "valueType": "kEnum",
      "currentValue": "kBreakAllSecondaryBeamsAtRestsIfDurationDiffers",
      "enumValues": [
        "kBreakMinimumNumberOfSecondaryBeamsAtRestsIfDurationDiffers",
        "kBreakAllSecondaryBeamsAtRestsIfDurationDiffers",
        "kAlwaysBreakSecondaryBeamsAtRests"
      ]
    },
    {
      "path": "beamingOptions.restBeamingOptions.allowPartialBeamsOnStemlessRestAtStartOrEndOfBeam",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "beamingOptions.splitSecondaryBeamGroupsAutomatically",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "noteStemSideCalcOptions.useSplitStemsForDiatonicPitchDuplicates",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "noteStemSideCalcOptions.stemSideAllocationBehaviour",
      "valueType": "kEnum",
      "currentValue": "kOnlyAllocateDoublyAlteredUnisonsToLeft",
      "enumValues": [
        "kOnlyAllocateDoublyAlteredUnisonsToLeft",
        "kAlwaysAllocateRightThenLeft"
      ]
    },
    {
      "path": "voiceOrderingOptions.alwaysPutStemlessDurationsToTheLeftOfStemmedDurations",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "voiceOrderingOptions.shouldPositionOverlappingVoicesBackToBack",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "voiceOrderingOptions.unisonDotAgainstNonDotPositioningRule",
      "valueType": "kEnum",
      "currentValue": "kIgnoreDot",
      "enumValues": [
        "kIgnoreDot",
        "kDotOnLeft",
        "kDotOnRight"
      ]
    },
    {
      "path": "voiceOrderingOptions.allowBlackNotesAndMinimUnisonsToShareNotehead",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "voiceOrderingOptions.allowDottedAndUndottedUnisonsToShareNotehead",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "restStavePositionerOptions.longRestPositioningBehaviour",
      "valueType": "kEnum",
      "currentValue": "kMoveAwayFromMiddleOfStave",
      "enumValues": [
        "kNeverStrayBeyondMiddleOfStave",
        "kMoveAwayFromMiddleOfStave",
        "kPositionAtStaveExtremities"
      ]
    },
    {
      "path": "restStavePositionerOptions.strictContrapuntalMode",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "restStavePositionerOptions.alignRestBottomsOnOneLineStaves",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "restStavePositionerOptions.alwaysMoveRestsAwayFromNotesSoundingLater",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "restStavePositionerOptions.restrictImpactOfPositioningWithinTheBar",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "restStavePositionerOptions.lowerBarRestInMultipleVoicesPositioningBehaviour",
      "valueType": "kEnum",
      "currentValue": "kHangFromBottomLine",
      "enumValues": [
        "kHangFromMiddleLine",
        "kHangFromSecondLineUp",
        "kHangFromBottomLine"
      ]
    },
    {
      "path": "restStavePositionerOptions.alignRestsWithinBarOrBeat",
      "valueType": "kEnum",
      "currentValue": "kBars",
      "enumValues": [
        "kBars",
        "kBeats"
      ]
    },
    {
      "path": "dotNotationOptions.allowUpToNDotsInSimpleBeat",
      "valueType": "kInt",
      "currentValue": "2",
      "enumValues": null
    },
    {
      "path": "dotNotationOptions.allowUpToNDotsInCompoundBeat",
      "valueType": "kInt",
      "currentValue": "2",
      "enumValues": null
    },
    {
      "path": "syncopationDetectorOptions.matchShortLongShort",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "syncopationDetectorOptions.matchShortDottedLong",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "syncopationDetectorOptions.allowRestsForOneOfShortPair",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "syncopationDetectorOptions.allowPatternsToCrossHalfBar",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "syncopationDetectorOptions.patternsCrossingHalfBarMustFillEntireBar",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "partTranspositionOptions.preferEnharmonicEquivalentWithFewerAccidentals",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "partTranspositionOptions.preferSimplerAccidentals",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "customPlayerOrder",
      "valueType": "kInstrumentPlayerIDArray",
      "currentValue": "",
      "enumValues": null
    },
    {
      "path": "barlineOptions.defaultBarlineType",
      "valueType": "kEnum",
      "currentValue": "kNormal",
      "enumValues": [
        "kNormal",
        "kDouble",
        "kFinal",
        "kStartRepeat",
        "kEndRepeat",
        "kEndAndStartRepeat",
        "kDashed",
        "kTick",
        "kShort",
        "kThick",
        "kTriple",
        "kShortTop",
        "kTickBottom",
        "kDoubleThick",
        "kNone"
      ]
    },
    {
      "path": "barlineOptions.finalBarlineType",
      "valueType": "kEnum",
      "currentValue": "kFinal",
      "enumValues": [
        "kFinal",
        "kDouble",
        "kNormal",
        "kDashed",
        "kThick",
        "kNone"
      ]
    },
    {
      "path": "barlineOptions.drawSingleBarlinesBetweenStaves",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "barlineOptions.showSingleSystemicBarlineAtEndOfSystem",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "barlineOptions.showSingleSystemicBarlineAtEndOfFlow",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "barlineOptions.showSystemicBarlineForSingleStaffSystems",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "barlineOptions.showSystemicBarlineForSingleStaffSystemsOnFirstSystem",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "percussionOptions.overlappingNoteBehaviour",
      "valueType": "kEnum",
      "currentValue": "kTie",
      "enumValues": [
        "kTie",
        "kTruncate"
      ]
    },
    {
      "path": "percussionOptions.drumKitVoicingType",
      "valueType": "kEnum",
      "currentValue": "kFollowKit",
      "enumValues": [
        "kFollowKit",
        "kSingleVoice"
      ]
    },
    {
      "path": "percussionOptions.padOpposingKitVoicesWithRestsAtStartAndEnd",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "omitBarRestsFromSecondaryVoices",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "omitBarRestsBeneathCues",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "omitBarRestsFromSecondaryVoicesInPercussionKits",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "rhythmSlashNotationOptions.numSpacesFromMiddleOfStaveToOffsetSlashesInOpposingVoiceDirections",
      "valueType": "kUint8_t",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "rhythmSlashNotationOptions.numSpacesBetweenSlashesInSameVoiceDirection",
      "valueType": "kUint8_t",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "rhythmSlashNotationOptions.numSpacesFromMiddleOfStaveToOffsetSlashesWhenOpposingNonSlashedVoicesPresent",
      "valueType": "kUint8_t",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "rhythmSlashNotationOptions.maximumDurationForAutomaticRhythmSlashes",
      "valueType": "kEnum",
      "currentValue": "kQuaver",
      "enumValues": [
        "kMinimumLogDuration",
        "k1024Note",
        "k512Note",
        "k256Note",
        "k128Note",
        "kHemiDemiSemiQuaver",
        "kDemiSemiQuaver",
        "kSemiQuaver",
        "kQuaver",
        "kCrotchet",
        "kMinim",
        "kSemibreve",
        "kBreve",
        "kLong",
        "kMaxima",
        "kMaximumLogDuration",
        "kNumNoteLengths"
      ]
    },
    {
      "path": "rhythmSlashNotationOptions.behaviourInCompoundTimeSignatures",
      "valueType": "kEnum",
      "currentValue": "kReflectBeatGroups",
      "enumValues": [
        "kReflectBeatGroups",
        "kUseTimeSignatureDenominator"
      ]
    },
    {
      "path": "rhythmSlashNotationOptions.behaviourInIrregularTimeSignatures",
      "valueType": "kEnum",
      "currentValue": "kReflectBeatGroups",
      "enumValues": [
        "kReflectBeatGroups",
        "kUseTimeSignatureDenominator"
      ]
    },
    {
      "path": "rhythmSlashNotationOptions.maximumDurationAppliesToCompoundTimeSignatures",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "rhythmSlashNotationOptions.maximumDurationAppliesToIrregularTimeSignatures",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "condensingOptions.phraseMaxPitchCrossCount",
      "valueType": "kInt",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "condensingOptions.allowAnyNumberOfPitchCrosses",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "condensingOptions.preventPlayingTechniqueAmalgamation",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "condensingOptions.preventStemAmalgamation",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "condensingOptions.silentPlayerPolicy",
      "valueType": "kEnum",
      "currentValue": "kInclude",
      "enumValues": [
        "kInclude",
        "kLabelOnly",
        "kExclude"
      ]
    },
    {
      "path": "condensingOptions.allowTrueUnisons",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "condensingOptions.allowMidSharedStemUnisons",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "condensingOptions.slurAmalgamationPolicy",
      "valueType": "kEnum",
      "currentValue": "kAlways",
      "enumValues": [
        "kAlways",
        "kPreventIfStartOrEndInDownStem",
        "kPreventAnyAmalgamation"
      ]
    },
    {
      "path": "condensingOptions.hideRestsForSilentPlayers",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "condensingOptions.hideRestsForSilentPlayersOnlyForRangesThatAdjoinABarline",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "condensingOptions.minimumLengthToHideRestsForSilentPlayers",
      "valueType": "kRhythmicLength",
      "currentValue": "2",
      "enumValues": null
    },
    {
      "path": "condensingOptions.mirrorAccidentalPropertiesFromNormalStaves",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "condensingOptions.requireTrillIntervalCompatibility",
      "valueType": "kEnum",
      "currentValue": "kNone",
      "enumValues": [
        "kNone",
        "kIdenticalIntervals",
        "kIdenticalIntervalsAndUnison"
      ]
    },
    {
      "path": "condensingOptions.preventHorizontalLineAmalgamation",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "frettedInstrumentStringAssignmentOptions.openStringAssignmentPreference",
      "valueType": "kEnum",
      "currentValue": "kAlwaysAllowOpenStrings",
      "enumValues": [
        "kAlwaysAllowOpenStrings",
        "kPreferStoppedStringsAtTopOfChords",
        "kPreferStoppedStringsInMonophonicVoices"
      ]
    },
    {
      "path": "frettedInstrumentStringAssignmentOptions.ignoreReservedStringIndicesIfUnassignable",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "clefNotationOptions.respectOctaveTransposition",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "clefNotationOptions.showClefInPreambleAfterFirstSystem",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "keySignatureNotationOptions.showKeySignatureInPreambleAfterFirstSystem",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "keySignatureNotationOptions.defaultCautionaryKeySignatureVisibilityAtEndOfSystem",
      "valueType": "kEnum",
      "currentValue": "kShow",
      "enumValues": [
        "kHide",
        "kShow"
      ]
    },
    {
      "path": "timeSignatureNotationOptions.defaultCautionaryTimeSignatureVisibilityAtEndOfSystem",
      "valueType": "kEnum",
      "currentValue": "kShow",
      "enumValues": [
        "kHide",
        "kShow"
      ]
    }
  ],
  "layoutOptionsCount": 216,
  "layoutOptions": [
    {
      "path": "transpositionType",
      "valueType": "kEnum",
      "currentValue": "kScoreInC",
      "enumValues": [
        "kScoreInC",
        "kTransposingScore"
      ]
    },
    {
      "path": "playerInstrumentTransitionOptions.shouldInsertTransitions",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "playerInstrumentTransitionOptions.useFullInstrumentNameInChangeLabels",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "playerInstrumentTransitionOptions.instrumentChangeLabelType",
      "valueType": "kEnum",
      "currentValue": "kTo",
      "enumValues": [
        "kTo",
        "kTake",
        "kCustom"
      ]
    },
    {
      "path": "playerInstrumentTransitionOptions.customChangeLabelTextBefore",
      "valueType": "kString",
      "currentValue": "",
      "enumValues": null
    },
    {
      "path": "playerInstrumentTransitionOptions.customChangeLabelTextAfter",
      "valueType": "kString",
      "currentValue": "",
      "enumValues": null
    },
    {
      "path": "playerInstrumentTransitionOptions.showWarningLabels",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "playerInstrumentTransitionOptions.showInstrumentChangeLabelAtStartOfFlows",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "playerInstrumentTransitionOptions.showAtChangeLabelsAfterCues",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "playerInstrumentTransitionOptions.useEarlyTransitionPositionIfPossible",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "playerInstrumentTransitionOptions.useUnsnappedPositionsForWarningLabels",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "playerInstrumentTransitionOptions.useUnsnappedPositionsForChangeLabels",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "playerInstrumentTransitionOptions.labelHideType",
      "valueType": "kEnum",
      "currentValue": "kWarning",
      "enumValues": [
        "kChangeTo",
        "kWarning"
      ]
    },
    {
      "path": "defaultSpaceSize",
      "valueType": "kPun",
      "currentValue": "4.96",
      "enumValues": null
    },
    {
      "path": "verticalStaveGapOptions.staveToStaveGap",
      "valueType": "kStaveUnit",
      "currentValue": "6",
      "enumValues": null
    },
    {
      "path": "verticalStaveGapOptions.staveGroupToStaveGap",
      "valueType": "kStaveUnit",
      "currentValue": "8",
      "enumValues": null
    },
    {
      "path": "verticalStaveGapOptions.staveToStaveGroupGap",
      "valueType": "kStaveUnit",
      "currentValue": "8",
      "enumValues": null
    },
    {
      "path": "verticalStaveGapOptions.staveGroupToStaveGroupGap",
      "valueType": "kStaveUnit",
      "currentValue": "8",
      "enumValues": null
    },
    {
      "path": "verticalStaveGapOptions.bracedStaveToBracedStaveGap",
      "valueType": "kStaveUnit",
      "currentValue": "6",
      "enumValues": null
    },
    {
      "path": "verticalStaveGapOptions.bracedStaveToUnbracedStaveGap",
      "valueType": "kStaveUnit",
      "currentValue": "6",
      "enumValues": null
    },
    {
      "path": "verticalStaveGapOptions.ossiaStaveToStaveGap",
      "valueType": "kStaveUnit",
      "currentValue": "4",
      "enumValues": null
    },
    {
      "path": "verticalStaveGapOptions.interSystemGap",
      "valueType": "kStaveUnit",
      "currentValue": "10",
      "enumValues": null
    },
    {
      "path": "verticalStaveGapOptions.minimumInterStaveGap",
      "valueType": "kStaveUnit",
      "currentValue": "4",
      "enumValues": null
    },
    {
      "path": "verticalStaveGapOptions.minimumInterSystemGap",
      "valueType": "kStaveUnit",
      "currentValue": "8",
      "enumValues": null
    },
    {
      "path": "verticalStaveGapOptions.minimumGapBetweenContentOnAdjacentStaves",
      "valueType": "kStaveUnit",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "verticalStaveGapOptions.minimumGapBetweenContentOnAdjacentSystems",
      "valueType": "kStaveUnit",
      "currentValue": "2",
      "enumValues": null
    },
    {
      "path": "verticalStaveGapOptions.staveScaleForGalleyView",
      "valueType": "kInt",
      "currentValue": "125",
      "enumValues": null
    },
    {
      "path": "verticalStaveGapOptions.useVerticalGapFineTuning",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "verticalStaveGapOptions.annotationStaveToStaveGap",
      "valueType": "kStaveUnit",
      "currentValue": "6",
      "enumValues": null
    },
    {
      "path": "verticalStaveGapOptions.notationStaveToTabGap",
      "valueType": "kStaveUnit",
      "currentValue": "6",
      "enumValues": null
    },
    {
      "path": "verticalStaveGapOptions.verticalViewInterSystemGap",
      "valueType": "kStaveUnit",
      "currentValue": "14",
      "enumValues": null
    },
    {
      "path": "showBarRestsInEmptyBars",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "pageSizeAndMarginOptions.pageWidth",
      "valueType": "kPun",
      "currentValue": "612",
      "enumValues": null
    },
    {
      "path": "pageSizeAndMarginOptions.pageHeight",
      "valueType": "kPun",
      "currentValue": "792",
      "enumValues": null
    },
    {
      "path": "pageSizeAndMarginOptions.pageMargins.type",
      "valueType": "kEnum",
      "currentValue": "kIdentical",
      "enumValues": [
        "kMirrored",
        "kIdentical",
        "kIndependent"
      ]
    },
    {
      "path": "pageSizeAndMarginOptions.pageMargins.margins.outer",
      "valueType": "kPun",
      "currentValue": "42",
      "enumValues": null
    },
    {
      "path": "pageSizeAndMarginOptions.pageMargins.margins.inner",
      "valueType": "kPun",
      "currentValue": "42",
      "enumValues": null
    },
    {
      "path": "pageSizeAndMarginOptions.pageMargins.margins.top",
      "valueType": "kPun",
      "currentValue": "42",
      "enumValues": null
    },
    {
      "path": "pageSizeAndMarginOptions.pageMargins.margins.bottom",
      "valueType": "kPun",
      "currentValue": "42",
      "enumValues": null
    },
    {
      "path": "pageSizeAndMarginOptions.pageMargins.extraMargins",
      "valueType": "kOptionalValue\u003CMarginOptions\u003E",
      "currentValue": "",
      "enumValues": null
    },
    {
      "path": "pageSizeAndMarginOptions.defaultMusicFrameTopPadding",
      "valueType": "kPun",
      "currentValue": "40",
      "enumValues": null
    },
    {
      "path": "pageSizeAndMarginOptions.defaultMusicFrameBottomPadding",
      "valueType": "kPun",
      "currentValue": "30",
      "enumValues": null
    },
    {
      "path": "pageSizeAndMarginOptions.flowHeadingMargins.headingTopMargin",
      "valueType": "kPun",
      "currentValue": "42.52",
      "enumValues": null
    },
    {
      "path": "pageSizeAndMarginOptions.flowHeadingMargins.headingBottomMargin",
      "valueType": "kPun",
      "currentValue": "34.02",
      "enumValues": null
    },
    {
      "path": "verticalJustificationOptions.justificationThreshold",
      "valueType": "kInt",
      "currentValue": "60",
      "enumValues": null
    },
    {
      "path": "verticalJustificationOptions.staveGapJustificationThreshold",
      "valueType": "kInt",
      "currentValue": "80",
      "enumValues": null
    },
    {
      "path": "verticalJustificationOptions.ignoreStaveGapJustificationThresholdForFrameWithSingleSystem",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "noteSpacingJustificationOptions.finalSystemJustificationThreshold",
      "valueType": "kInt",
      "currentValue": "50",
      "enumValues": null
    },
    {
      "path": "noteSpacingJustificationOptions.useFinalSystemJustificationThreshold",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "noteSpacingJustificationOptions.considerMinimumDistanceViolations",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "noteSpacingOptions.crotchetSize",
      "valueType": "kStaveUnit",
      "currentValue": "4",
      "enumValues": null
    },
    {
      "path": "noteSpacingOptions.floorSize",
      "valueType": "kStaveUnit",
      "currentValue": "8/5",
      "enumValues": null
    },
    {
      "path": "noteSpacingOptions.graceNoteSpacingScale",
      "valueType": "kInt",
      "currentValue": "70",
      "enumValues": null
    },
    {
      "path": "noteSpacingOptions.useCustomRatio",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "noteSpacingOptions.customRatio",
      "valueType": "kDouble",
      "currentValue": "1.414210",
      "enumValues": null
    },
    {
      "path": "noteSpacingOptions.performOpticalAdjustmentForCrossedBeams",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "noteSpacingOptions.cueNoteSpacingScale",
      "valueType": "kInt",
      "currentValue": "70",
      "enumValues": null
    },
    {
      "path": "noteSpacingOptions.generateSpacingRodsForLyrics",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "castingOffOptions.splitOpenBars",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "castingOffOptions.fixNumberOfSystems",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "castingOffOptions.fixNumberOfBarsPerSystem",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "castingOffOptions.scaleFixedNumberOfSystemsByFrameHeight",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "castingOffOptions.numberOfSystemsPerFrame",
      "valueType": "kInt",
      "currentValue": "10",
      "enumValues": null
    },
    {
      "path": "castingOffOptions.numberOfBarsPerSystem",
      "valueType": "kInt",
      "currentValue": "4",
      "enumValues": null
    },
    {
      "path": "pageNumberOptions.appearance",
      "valueType": "kEnum",
      "currentValue": "kNumber",
      "enumValues": [
        "kNumber",
        "kRomanNumeral"
      ]
    },
    {
      "path": "pageNumberOptions.visibility",
      "valueType": "kEnum",
      "currentValue": "kAlwaysShown",
      "enumValues": [
        "kAlwaysShown",
        "kAlwaysHidden",
        "kNotOnFirstPage"
      ]
    },
    {
      "path": "pageNumberOptions.firstPageNumber",
      "valueType": "kInt",
      "currentValue": "1",
      "enumValues": null
    },
    {
      "path": "usesCustomPlayerOrder",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "customPlayerOrder",
      "valueType": "kInstrumentPlayerIDArray",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "pagePairSetEntityID",
      "valueType": "kPagePairDefinitionSetEntityID",
      "currentValue": "pageset.fullscore",
      "enumValues": null
    },
    {
      "path": "drawRehearsalMarksBelowBottomStave",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "staffLabelLayoutOptions.staffLabelsOnFirstSystem",
      "valueType": "kEnum",
      "currentValue": "kNone",
      "enumValues": [
        "kFull",
        "kAbbreviated",
        "kNone"
      ]
    },
    {
      "path": "staffLabelLayoutOptions.staffLabelsOnSubsequentSystems",
      "valueType": "kEnum",
      "currentValue": "kNone",
      "enumValues": [
        "kFull",
        "kAbbreviated",
        "kNone"
      ]
    },
    {
      "path": "staffLabelLayoutOptions.showTranspositionInStaffLabels",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "staffLabelLayoutOptions.showTranspositionInAbbreviatedStaffLabels",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "staffLabelLayoutOptions.staffLabelsFullTranspositionAppearance",
      "valueType": "kEnum",
      "currentValue": "kAfter",
      "enumValues": [
        "kAfter",
        "kBefore"
      ]
    },
    {
      "path": "staffLabelLayoutOptions.minimumWidthForStaffLabels",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "staffLabelLayoutOptions.separatorForTranspositionsBefore",
      "valueType": "kString",
      "currentValue": " ",
      "enumValues": null
    },
    {
      "path": "staffLabelLayoutOptions.playersToShowPlayerName",
      "valueType": "kInstrumentPlayerIDArray",
      "currentValue": "",
      "enumValues": null
    },
    {
      "path": "staffLabelLayoutOptions.separateTranspositionWithNewLine",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "staffLabelLayoutOptions.showTranspositionInParentheses",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "staffLabelLayoutOptions.showInstrumentNumberBeforeTransposition",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "staffLabelLayoutOptions.showPlayerGroupLabels",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "staffLabelLayoutOptions.showPlayerNamesOnFirstSystemOnly",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "staffLabelLayoutOptions.showStaffLabelsForFirstFlowOnly",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "staffLabelLayoutOptions.useFlowFirstSystemIndentWhenStaffLabelsShown",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "staffLabelLayoutOptions.staffLabelShowsFirstSoundingInstrumentOnSystem",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "barNumberLayoutOptions.barNumberFrequency",
      "valueType": "kEnum",
      "currentValue": "kEverySystem",
      "enumValues": [
        "kEverySystem",
        "kEveryNBars",
        "kEveryBar",
        "kNone"
      ]
    },
    {
      "path": "barNumberLayoutOptions.barNumberInterval",
      "valueType": "kInt",
      "currentValue": "10",
      "enumValues": null
    },
    {
      "path": "barNumberLayoutOptions.playersToShowBarNumbers",
      "valueType": "kInstrumentPlayerIDArray",
      "currentValue": "",
      "enumValues": null
    },
    {
      "path": "barNumberLayoutOptions.showAboveTopStaff",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "barNumberLayoutOptions.showBelowBottomStaff",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "barNumberLayoutOptions.barNumberDistanceFromStaff",
      "valueType": "kStaveUnit",
      "currentValue": "2",
      "enumValues": null
    },
    {
      "path": "barNumberLayoutOptions.minimumDistanceFromOtherObjects",
      "valueType": "kStaveUnit",
      "currentValue": "3/4",
      "enumValues": null
    },
    {
      "path": "barNumberLayoutOptions.barNumberEnclosureType",
      "valueType": "kEnum",
      "currentValue": "kNone",
      "enumValues": [
        "kNone",
        "kRectangle",
        "kCircle"
      ]
    },
    {
      "path": "barNumberLayoutOptions.barNumberHorizonalPosition",
      "valueType": "kEnum",
      "currentValue": "kCenteredOnBarline",
      "enumValues": [
        "kCenteredOnBarline",
        "kCenteredInBar",
        "kLeftAlignedOnBarline"
      ]
    },
    {
      "path": "barNumberLayoutOptions.alignBarNumbersOnSameSystem",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "barNumberLayoutOptions.showBarNumbersWhenCoincidentWithRehearsalMarks",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "barNumberLayoutOptions.barNumberAtStartOfSystemAfterPreamble",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "barNumberLayoutOptions.showFirstBarNumberWhenShownEveryBar",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "barNumberLayoutOptions.showBarNumbersWhenCoincidentWithOutsideStaveTimeSignature",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "barNumberLayoutOptions.barNumbersParagraphStyle",
      "valueType": "kParagraphStyleEntityID",
      "currentValue": "paragraph.barnumbers.score",
      "enumValues": null
    },
    {
      "path": "barNumberLayoutOptions.showBarNumberAtStartOfSystemForBarSplitOverBreak",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "barNumberLayoutOptions.showBarNumberAtStartOfCoda",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "barNumberLayoutOptions.repeatedBarNumberRepresentation",
      "valueType": "kEnum",
      "currentValue": "kShowAllRepetitions",
      "enumValues": [
        "kShowAllRepetitions",
        "kShowFirstRepetitionOnly",
        "kShowFinalRepetitionOnly"
      ]
    },
    {
      "path": "barNumberLayoutOptions.repeatedBarNumberPrefix",
      "valueType": "kString",
      "currentValue": " (",
      "enumValues": null
    },
    {
      "path": "barNumberLayoutOptions.repeatedBarNumberSuffix",
      "valueType": "kString",
      "currentValue": ")",
      "enumValues": null
    },
    {
      "path": "barNumberLayoutOptions.showBarNumberWhenCoincidentWithStartOfMultiRestRange",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "barNumberLayoutOptions.addBarNumbersToStaveProfile",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "barNumberLayoutOptions.dynamicsRelativePositionAtBarlines",
      "valueType": "kEnum",
      "currentValue": "kInside",
      "enumValues": [
        "kInside",
        "kOutside"
      ]
    },
    {
      "path": "hideEmptyStavesPolicy",
      "valueType": "kEnum",
      "currentValue": "kNever",
      "enumValues": [
        "kAllSystems",
        "kAfterFirstSystem",
        "kNever"
      ]
    },
    {
      "path": "allowPartialHidingOfGrandStaveInstruments",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "alwaysVisiblePlayers",
      "valueType": "kInstrumentPlayerIDArray",
      "currentValue": "",
      "enumValues": null
    },
    {
      "path": "flowBreakBehaviour",
      "valueType": "kEnum",
      "currentValue": "kStartNewPageForFlows",
      "enumValues": [
        "kNoFlowBreaks",
        "kStartNewPageForFlows"
      ]
    },
    {
      "path": "flowHeadingBehaviour",
      "valueType": "kEnum",
      "currentValue": "kNoFlowHeadings",
      "enumValues": [
        "kNoFlowHeadings",
        "kAddHeadingsAfterFirstFlow",
        "kAlwaysInsertHeadings"
      ]
    },
    {
      "path": "firstPageBehaviour",
      "valueType": "kEnum",
      "currentValue": "kUseFirstPageForFirstFlowOnly",
      "enumValues": [
        "kNeverUseFirstPage",
        "kUseFirstPageForFirstFlowOnly",
        "kUseFirstPageForFlowsStartingAtTheTopOfAPage"
      ]
    },
    {
      "path": "flowFirstSystemIndent",
      "valueType": "kStaveUnit",
      "currentValue": "6",
      "enumValues": null
    },
    {
      "path": "systemObjectVisibilityOptions.showRepeatEndingLinesBelowBottomStave",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "systemObjectVisibilityOptions.showAboveSoloist",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "systemObjectVisibilityOptions.showAboveFamilies",
      "valueType": "kInstrumentFamilyEntityIDArray",
      "currentValue": "",
      "enumValues": null
    },
    {
      "path": "chordSymbolLayoutOptions.showChordSymbolsAboveTopStaffOfSystem",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "chordSymbolLayoutOptions.positionChordSymbolsBetweenStavesOfGrandStaveInstruments",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "cueLayoutOptions.showCues",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "cueLayoutOptions.showOctaveLine",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "percussionLayoutOptions.playersUsingGridPresentation",
      "valueType": "kInstrumentPlayerIDArray",
      "currentValue": "",
      "enumValues": null
    },
    {
      "path": "percussionLayoutOptions.playersUsingIndividualInstrumentsPresentation",
      "valueType": "kInstrumentPlayerIDArray",
      "currentValue": "",
      "enumValues": null
    },
    {
      "path": "showFingeringsInLayout",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "systemDividerLayoutOptions.approach",
      "valueType": "kEnum",
      "currentValue": "kNone",
      "enumValues": [
        "kNone",
        "kExceedsMinimumNumberOfPlayers",
        "kNumberOfStavesInSystemsDiffers",
        "kExceedsMinimumNumberOfStavesInSystem"
      ]
    },
    {
      "path": "systemDividerLayoutOptions.type",
      "valueType": "kEnum",
      "currentValue": "kDefault",
      "enumValues": [
        "kDefault",
        "kLong",
        "kExtraLong"
      ]
    },
    {
      "path": "systemDividerLayoutOptions.minimumPlayersInFlow",
      "valueType": "kInt",
      "currentValue": "4",
      "enumValues": null
    },
    {
      "path": "systemDividerLayoutOptions.minimumStavesInSystem",
      "valueType": "kInt",
      "currentValue": "4",
      "enumValues": null
    },
    {
      "path": "timeSignatureType",
      "valueType": "kEnum",
      "currentValue": "kNormal",
      "enumValues": [
        "kNormal",
        "kLarge",
        "kOutsideStaff"
      ]
    },
    {
      "path": "timeSignatureGlyphStyle",
      "valueType": "kEnum",
      "currentValue": "kNormal",
      "enumValues": [
        "kNormal",
        "kNarrowSerif",
        "kNarrowSansSerif",
        "kPlain"
      ]
    },
    {
      "path": "staffLayoutOptions.showPreambleForOssiaStaves",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "staffLayoutOptions.showStaffLabelBeforeOssia",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "staffLayoutOptions.useCustomStaffLabelBeforeOssia",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "staffLayoutOptions.customStaffLabelBeforeOssia",
      "valueType": "kString",
      "currentValue": "",
      "enumValues": null
    },
    {
      "path": "staffLayoutOptions.useCustomBracketsForStaffLabelBeforeOssia",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "staffLayoutOptions.customOpenBracketForStaffLabelBeforeOssia",
      "valueType": "kString",
      "currentValue": "(",
      "enumValues": null
    },
    {
      "path": "staffLayoutOptions.customCloseBracketForStaffLabelBeforeOssia",
      "valueType": "kString",
      "currentValue": ")",
      "enumValues": null
    },
    {
      "path": "staffLayoutOptions.showOssiaStaves",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "staffLayoutOptions.showExtraStavesAcrossEntireSystem",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "staffLayoutOptions.positionSystemObjectsAndBarNumbersOutsideOssias",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "markerLayoutOptions.showMarkers",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "markerLayoutOptions.verticalPosition",
      "valueType": "kEnum",
      "currentValue": "kAboveTopStaff",
      "enumValues": [
        "kAboveTopStaff",
        "kBelowBottomStaff",
        "kOnTimecodeStaff"
      ]
    },
    {
      "path": "markerLayoutOptions.markerStaffAboveFamily",
      "valueType": "kEnum",
      "currentValue": "kStrings",
      "enumValues": [
        "kWoodwinds",
        "kBrass",
        "kPitchedPercussion",
        "kUnpitchedPercussion",
        "kGamelanPercussion",
        "kFrettedInstruments",
        "kKeyboards",
        "kSingers",
        "kStrings",
        "kElectronics",
        "kOrffInstruments"
      ]
    },
    {
      "path": "markerLayoutOptions.timecodeFrequency",
      "valueType": "kEnum",
      "currentValue": "kEverySystem",
      "enumValues": [
        "kEverySystem",
        "kEveryBar",
        "kNone"
      ]
    },
    {
      "path": "markerLayoutOptions.showTimecodeAtStartOfSystem",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "markerLayoutOptions.timecodeAtStartOfSystemSystemRelativePosition",
      "valueType": "kEnum",
      "currentValue": "kBelow",
      "enumValues": [
        "kAbove",
        "kBelow"
      ]
    },
    {
      "path": "markerLayoutOptions.timecodeAtStartOfSystemHorizontalOffset",
      "valueType": "kStaveUnit",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "markerLayoutOptions.timecodeAtStartOfSystemVerticalOffset",
      "valueType": "kStaveUnit",
      "currentValue": "1/2",
      "enumValues": null
    },
    {
      "path": "markerLayoutOptions.showTimecodeOnFirstSystem",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "showMultiRestBarNumberRanges",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "divisiLayoutOptions.showGroupNames",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "divisiLayoutOptions.showSectionNamesOnInitialSystemOfDivisi",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "divisiLayoutOptions.showSectionNamesOnSubsequentSystemsOfDivisi",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "divisiLayoutOptions.showDivisiLabels",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "divisiLayoutOptions.snapDivisiUnisonLabels",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "divisiLayoutOptions.divisiStaveGapType",
      "valueType": "kEnum",
      "currentValue": "kStave",
      "enumValues": [
        "kStave",
        "kBracedStave"
      ]
    },
    {
      "path": "barConsolidationBehaviour",
      "valueType": "kEnum",
      "currentValue": "kNeverConsolidate",
      "enumValues": [
        "kNeverConsolidate",
        "kConsolidateEmptyBarsIntoMultiRests",
        "kConsolidateCollapsibleBarRepeats"
      ]
    },
    {
      "path": "repeatMarkerOptions.wordWrapJumpQualificationsByDefault",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "repeatMarkerOptions.staveRelativePositioning",
      "valueType": "kEnum",
      "currentValue": "kAlwaysAbove",
      "enumValues": [
        "kAlwaysAbove",
        "kBelowStaveIfJumpMarkerOrFine",
        "kAdditionallyBelowBottomStave"
      ]
    },
    {
      "path": "tacetOptions.showTacets",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "tacetOptions.tacetString",
      "valueType": "kString",
      "currentValue": "Tacet",
      "enumValues": null
    },
    {
      "path": "tacetOptions.marginAboveTacet",
      "valueType": "kPun",
      "currentValue": "14.17",
      "enumValues": null
    },
    {
      "path": "tacetOptions.marginBelowTacet",
      "valueType": "kPun",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "textTokenOptions.suppressPageNumberAboveFlowHeadings",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "textTokenOptions.suppressFlowPageNumberAboveFlowHeadings",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "textTokenOptions.suppressFlowTitleAboveFlowHeadings",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "textTokenOptions.useCustomScoreInCText",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "textTokenOptions.customScoreInCText",
      "valueType": "kString",
      "currentValue": "",
      "enumValues": null
    },
    {
      "path": "textTokenOptions.useCustomTransposingScoreText",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "textTokenOptions.customTransposingScoreText",
      "valueType": "kString",
      "currentValue": "",
      "enumValues": null
    },
    {
      "path": "frettedInstrumentLayoutOptions.playersUsingTabPresentation",
      "valueType": "kInstrumentPlayerIDArray",
      "currentValue": "",
      "enumValues": null
    },
    {
      "path": "frettedInstrumentLayoutOptions.playersUsingNotationAndTabPresentation",
      "valueType": "kInstrumentPlayerIDArray",
      "currentValue": "",
      "enumValues": null
    },
    {
      "path": "frettedInstrumentLayoutOptions.playersShowingRhythmsOnTab",
      "valueType": "kInstrumentPlayerIDArray",
      "currentValue": "",
      "enumValues": null
    },
    {
      "path": "frettedInstrumentLayoutOptions.playersUsingFrettedInstrumentTranspositionForNotation",
      "valueType": "kInstrumentPlayerIDArray",
      "currentValue": "",
      "enumValues": null
    },
    {
      "path": "frettedInstrumentLayoutOptions.playersUsingFrettedInstrumentTranspositionForChordSymbols",
      "valueType": "kInstrumentPlayerIDArray",
      "currentValue": "",
      "enumValues": null
    },
    {
      "path": "condensingLayoutOptions.enableCondensing",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "condensingLayoutOptions.groupsToExcludeFromCondensing",
      "valueType": "kCondensableGroupIDArray",
      "currentValue": "",
      "enumValues": null
    },
    {
      "path": "condensingLayoutOptions.userDefinedCondensableGroups",
      "valueType": "kUserDefinedCondensableGroupArray",
      "currentValue": "",
      "enumValues": null
    },
    {
      "path": "condensingLayoutOptions.sectionPlayerPolicy",
      "valueType": "kEnum",
      "currentValue": "kDoNotCondense",
      "enumValues": [
        "kDoNotCondense",
        "kCondenseWithinSinglePlayer",
        "kCondenseSectionsAndAdjacentPlayers"
      ]
    },
    {
      "path": "condensingLayoutOptions.excludeViolinsWhenCondensingAdjacentSectionPlayers",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "harpPedalLayoutOptions.showHarpPedalSettings",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "harpPedalLayoutOptions.harpPedalSettingsAppearance",
      "valueType": "kEnum",
      "currentValue": "kNoteNames",
      "enumValues": [
        "kDiagram",
        "kNoteNames"
      ]
    },
    {
      "path": "bracketingLayoutOptions.bracketPlacingApproach",
      "valueType": "kEnum",
      "currentValue": "kNoBrackets",
      "enumValues": [
        "kNoBrackets",
        "kOrchestral",
        "kWindBandLike",
        "kSmallEnsemble",
        "kBigBand",
        "kBritishBrassBand"
      ]
    },
    {
      "path": "bracketingLayoutOptions.useSubBrackets",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "bracketingLayoutOptions.useBracesForSubBrackets",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "bracketingLayoutOptions.showBracketForSingleStaff",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "bracketingLayoutOptions.drawBraceOnSingleStave",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "bracketingLayoutOptions.drawSubBracketOnSingleStave",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "bracketingLayoutOptions.barlineJoinsFollowBrackets",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "bracketingLayoutOptions.subBracketingApproachForViolins1And2",
      "valueType": "kEnum",
      "currentValue": "kJoinWithSingleSubBracket",
      "enumValues": [
        "kJoinWithSingleSubBracket",
        "kSeparateSubBrackets",
        "kSeparateWhenMultipleStaves"
      ]
    },
    {
      "path": "bracketingLayoutOptions.drawSubBracketIfSecondaryGroupMatchesPrimaryGroup",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "bracketingLayoutOptions.drawSubBracketOnSingleStaveDivisi",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "chordsUsedFrameLayoutOptions.showChordsUsedFrameAtStart",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "chordsUsedFrameLayoutOptions.frettedInstrumentTuningToShow",
      "valueType": "kString",
      "currentValue": "frettedinstrumentdata.standard-guitar-tuning-6-strings-22-frets",
      "enumValues": null
    },
    {
      "path": "chordsUsedFrameLayoutOptions.maxNumberOfDiagramsPerRow",
      "valueType": "kInt",
      "currentValue": "8",
      "enumValues": null
    },
    {
      "path": "chordsUsedFrameLayoutOptions.sizeRatio",
      "valueType": "kDouble",
      "currentValue": "1.300000",
      "enumValues": null
    },
    {
      "path": "chordsUsedFrameLayoutOptions.horizontalSpacingBetweenDiagrams",
      "valueType": "kPun",
      "currentValue": "35",
      "enumValues": null
    },
    {
      "path": "chordsUsedFrameLayoutOptions.verticalSpacingBetweenDiagrams",
      "valueType": "kPun",
      "currentValue": "30",
      "enumValues": null
    },
    {
      "path": "chordsUsedFrameLayoutOptions.spaceAboveDiagrams",
      "valueType": "kPun",
      "currentValue": "0",
      "enumValues": null
    },
    {
      "path": "chordsUsedFrameLayoutOptions.spaceBelowDiagrams",
      "valueType": "kPun",
      "currentValue": "20",
      "enumValues": null
    },
    {
      "path": "chordsUsedFrameLayoutOptions.showFingeringsInChordsUsedDiagrams",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "chordsUsedFrameLayoutOptions.capoDefinition",
      "valueType": "kOptionalValue\u003CCapoDefinition\u003E",
      "currentValue": "",
      "enumValues": null
    },
    {
      "path": "chordsUsedFrameLayoutOptions.chordSymbolsVisibility",
      "valueType": "kEnum",
      "currentValue": "kShowAboveOriginalChordSymbol",
      "enumValues": [
        "kShowOnlyOriginalChordSymbol",
        "kShowOnlyTransposedChordSymbol",
        "kShowAboveOriginalChordSymbol",
        "kShowBelowOriginalChordSymbol"
      ]
    },
    {
      "path": "chordDiagramLayoutOptions.showFingering",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    },
    {
      "path": "chordDiagramLayoutOptions.fingerNumberPosition",
      "valueType": "kEnum",
      "currentValue": "kInsideDot",
      "enumValues": [
        "kInsideDot",
        "kEndOfString"
      ]
    },
    {
      "path": "manuscriptStaffLayoutOptions.manuscriptStaveFillType",
      "valueType": "kEnum",
      "currentValue": "kNone",
      "enumValues": [
        "kNone",
        "kAfterEveryFlow",
        "kFinalFrame"
      ]
    },
    {
      "path": "manuscriptStaffLayoutOptions.numStaveLinesInManuscriptStaves",
      "valueType": "kInt",
      "currentValue": "5",
      "enumValues": null
    },
    {
      "path": "manuscriptStaffLayoutOptions.mirrorStavesInLayout",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "manuscriptStaffLayoutOptions.showPreamble",
      "valueType": "kBool",
      "currentValue": "true",
      "enumValues": null
    },
    {
      "path": "figuredBassLayoutOptions.playersToShowFiguredBass",
      "valueType": "kInstrumentPlayerIDArray",
      "currentValue": "",
      "enumValues": null
    },
    {
      "path": "figuredBassLayoutOptions.staveRelativePosition",
      "valueType": "kEnum",
      "currentValue": "kBelow",
      "enumValues": [
        "kAbove",
        "kBelow"
      ]
    },
    {
      "path": "layoutInstrumentVisibilityPresetID",
      "valueType": "kInt",
      "currentValue": "-1",
      "enumValues": null
    },
    {
      "path": "showNumberedBarRegions",
      "valueType": "kBool",
      "currentValue": "false",
      "enumValues": null
    }
  ]
}